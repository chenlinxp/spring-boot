2018-06-28 03:33:26 -Starting BootdoApplication on localhost with PID 5905 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 03:33:26 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 03:33:26 -The following profiles are active: dev
2018-06-28 03:33:26 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 03:33:26 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 03:33:26 CST 2018]; root of context hierarchy
2018-06-28 03:33:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 03:33:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$89c413f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:33:28 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7c1d4298] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:33:28 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:33:28 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:33:28 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 03:33:28 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:33:28 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:33:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:33:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:33:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:33:29 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 03:33:29 -Starting service [Tomcat]
2018-06-28 03:33:29 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 03:33:29 -Initializing Spring embedded WebApplicationContext
2018-06-28 03:33:29 -Root WebApplicationContext: initialization completed in 2659 ms
2018-06-28 03:33:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 03:33:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 03:33:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 03:33:29 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 03:33:29 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 03:33:29 -Filter xssFilter was not registered (disabled)
2018-06-28 03:33:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 03:33:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 03:33:29 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 03:33:29 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 03:33:30 -{dataSource-1} inited
2018-06-28 03:33:31 -ProcessEngine default created
2018-06-28 03:33:32 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logdao'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.bootdo.system.log.dao.LogDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-06-28 03:33:32 -{dataSource-1} closed
2018-06-28 03:33:32 -Stopping service [Tomcat]
2018-06-28 03:33:32 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-28 03:33:32 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field logdao in com.bootdo.system.log.service.impl.LogServiceImpl required a bean of type 'com.bootdo.system.log.dao.LogDao' that could not be found.


Action:

Consider defining a bean of type 'com.bootdo.system.log.dao.LogDao' in your configuration.

2018-06-28 03:35:22 -Starting BootdoApplication on localhost with PID 5936 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 03:35:22 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 03:35:22 -The following profiles are active: dev
2018-06-28 03:35:22 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 03:35:22 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 03:35:22 CST 2018]; root of context hierarchy
2018-06-28 03:35:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 03:35:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4118b5b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:35:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3371e45c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:35:24 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:35:24 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:35:24 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 03:35:24 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:35:24 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:35:25 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:35:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:35:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:35:25 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 03:35:25 -Starting service [Tomcat]
2018-06-28 03:35:25 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 03:35:25 -Initializing Spring embedded WebApplicationContext
2018-06-28 03:35:25 -Root WebApplicationContext: initialization completed in 2729 ms
2018-06-28 03:35:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 03:35:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 03:35:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 03:35:26 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 03:35:26 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 03:35:26 -Filter xssFilter was not registered (disabled)
2018-06-28 03:35:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 03:35:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 03:35:26 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 03:35:26 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 03:35:26 -{dataSource-1} inited
2018-06-28 03:35:27 -ProcessEngine default created
2018-06-28 03:35:28 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logdao'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.bootdo.system.log.dao.LogDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-06-28 03:35:28 -{dataSource-1} closed
2018-06-28 03:35:28 -Stopping service [Tomcat]
2018-06-28 03:35:28 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-28 03:35:28 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field logdao in com.bootdo.system.log.service.impl.LogServiceImpl required a bean of type 'com.bootdo.system.log.dao.LogDao' that could not be found.


Action:

Consider defining a bean of type 'com.bootdo.system.log.dao.LogDao' in your configuration.

2018-06-28 03:42:51 -Starting BootdoApplication on localhost with PID 5955 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 03:42:51 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 03:42:51 -The following profiles are active: dev
2018-06-28 03:42:51 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 03:42:51 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 03:42:51 CST 2018]; root of context hierarchy
2018-06-28 03:42:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 03:42:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce9facca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:42:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c0f8db71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:42:53 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:42:53 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:42:53 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 03:42:53 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:42:53 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:42:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:42:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:42:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:42:53 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 03:42:53 -Starting service [Tomcat]
2018-06-28 03:42:53 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 03:42:54 -Initializing Spring embedded WebApplicationContext
2018-06-28 03:42:54 -Root WebApplicationContext: initialization completed in 2678 ms
2018-06-28 03:42:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 03:42:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 03:42:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 03:42:54 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 03:42:54 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 03:42:54 -Filter xssFilter was not registered (disabled)
2018-06-28 03:42:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 03:42:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 03:42:54 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 03:42:54 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 03:42:54 -{dataSource-1} inited
2018-06-28 03:42:56 -ProcessEngine default created
2018-06-28 03:42:56 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryController': Unsatisfied dependency expressed through field 'salaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.bootdo.activiti.dao.SalaryDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-06-28 03:42:56 -{dataSource-1} closed
2018-06-28 03:42:56 -Stopping service [Tomcat]
2018-06-28 03:42:56 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-28 03:42:56 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field salaryDao in com.bootdo.activiti.service.impl.SalaryServiceImpl required a bean of type 'com.bootdo.activiti.dao.SalaryDao' that could not be found.


Action:

Consider defining a bean of type 'com.bootdo.activiti.dao.SalaryDao' in your configuration.

2018-06-28 03:51:43 -Starting BootdoApplication on localhost with PID 5969 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 03:51:43 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 03:51:43 -The following profiles are active: dev
2018-06-28 03:51:43 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 03:51:43 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 03:51:43 CST 2018]; root of context hierarchy
2018-06-28 03:51:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 03:51:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a96fce13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:51:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9bc8fcba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:51:45 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:51:45 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:51:45 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 03:51:45 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:51:45 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:51:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:51:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:51:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 03:51:45 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 03:51:45 -Starting service [Tomcat]
2018-06-28 03:51:45 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 03:51:46 -Initializing Spring embedded WebApplicationContext
2018-06-28 03:51:46 -Root WebApplicationContext: initialization completed in 2617 ms
2018-06-28 03:51:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 03:51:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 03:51:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 03:51:46 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 03:51:46 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 03:51:46 -Filter xssFilter was not registered (disabled)
2018-06-28 03:51:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 03:51:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 03:51:46 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 03:51:46 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 03:51:46 -{dataSource-1} inited
2018-06-28 03:51:48 -ProcessEngine default created
2018-06-28 03:51:49 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 03:51:43 CST 2018]; root of context hierarchy
2018-06-28 03:51:49 -Using default implementation for ThreadExecutor
2018-06-28 03:51:49 -Job execution threads will use class loader of thread: main
2018-06-28 03:51:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 03:51:49 -Quartz Scheduler v.2.2.1 created.
2018-06-28 03:51:49 -RAMJobStore initialized.
2018-06-28 03:51:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 03:51:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 03:51:49 -Quartz scheduler version: 2.2.1
2018-06-28 03:51:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@dd07be8
2018-06-28 03:51:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 03:51:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 03:51:51 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 03:51:51 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 03:51:51 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 03:51:51 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 03:51:51 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 03:51:51 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 03:51:51 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 03:51:51 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 03:51:51 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 03:51:51 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 03:51:51 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 03:51:51 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 03:51:51 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 03:51:51 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 03:51:51 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 03:51:51 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 03:51:51 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 03:51:51 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 03:51:51 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 03:51:51 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 03:51:51 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 03:51:51 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 03:51:51 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 03:51:51 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 03:51:51 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 03:51:51 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 03:51:51 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 03:51:51 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 03:51:51 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 03:51:51 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 03:51:51 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 03:51:51 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 03:51:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 03:51:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 03:51:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 03:51:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 03:51:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 03:51:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 03:51:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 03:51:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 03:51:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 03:51:51 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 03:51:51 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 03:51:51 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 03:51:51 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 03:51:51 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 03:51:51 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 03:51:51 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 03:51:51 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 03:51:51 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 03:51:51 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 03:51:51 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 03:51:51 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 03:51:51 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 03:51:51 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 03:51:51 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 03:51:51 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 03:51:51 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 03:51:51 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 03:51:51 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 03:51:51 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 03:51:51 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 03:51:51 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 03:51:51 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 03:51:51 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 03:51:51 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 03:51:51 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 03:51:51 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 03:51:51 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 03:51:51 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 03:51:51 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 03:51:51 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 03:51:51 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 03:51:51 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 03:51:51 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 03:51:51 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 03:51:51 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 03:51:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 03:51:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 03:51:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 03:51:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 03:51:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 03:51:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 03:51:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 03:51:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 03:51:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 03:51:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 03:51:51 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 03:51:51 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 03:51:51 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 03:51:51 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 03:51:51 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 03:51:51 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 03:51:51 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 03:51:51 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 03:51:51 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 03:51:51 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 03:51:51 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 03:51:51 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 03:51:51 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 03:51:51 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 03:51:51 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 03:51:51 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 03:51:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 03:51:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 03:51:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 03:51:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 03:51:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 03:51:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 03:51:51 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 03:51:52 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 03:51:43 CST 2018]; root of context hierarchy
2018-06-28 03:51:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 03:51:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 03:51:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 03:51:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 03:51:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 03:51:53 -

Using default security password: c22cfc92-b800-4127-b5d2-e5fa3794cf9c

2018-06-28 03:51:53 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 03:51:54 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@639bf405, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@eda7dd3, org.springframework.security.web.context.SecurityContextPersistenceFilter@5f1a3c4, org.springframework.security.web.header.HeaderWriterFilter@1718de70, org.springframework.security.web.csrf.CsrfFilter@28c75c93, org.springframework.security.web.authentication.logout.LogoutFilter@33997e07, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63e40188, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6bd8c398, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9d7a853, org.springframework.security.web.session.SessionManagementFilter@2433bcd4, org.springframework.security.web.access.ExceptionTranslationFilter@3a720ae3]
2018-06-28 03:51:54 -Registering beans for JMX exposure on startup
2018-06-28 03:51:54 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 03:51:54 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 03:51:54 -Starting beans in phase 2147483647
2018-06-28 03:51:54 -Context refreshed
2018-06-28 03:51:54 -Found 1 custom documentation plugin(s)
2018-06-28 03:51:54 -Scanning for api listing references
2018-06-28 03:51:54 -Generating unique operation named: removeUsingPOST_1
2018-06-28 03:51:55 -Generating unique operation named: addUsingGET_1
2018-06-28 03:51:55 -Generating unique operation named: editUsingGET_1
2018-06-28 03:51:55 -Generating unique operation named: listUsingGET_1
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_2
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_3
2018-06-28 03:51:55 -Generating unique operation named: saveUsingPOST_1
2018-06-28 03:51:55 -Generating unique operation named: updateUsingGET_1
2018-06-28 03:51:55 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPOST_1
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPUT_1
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 03:51:55 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 03:51:55 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 03:51:55 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 03:51:55 -Generating unique operation named: addUsingGET_2
2018-06-28 03:51:55 -Generating unique operation named: editUsingGET_2
2018-06-28 03:51:55 -Generating unique operation named: listUsingGET_2
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_4
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_5
2018-06-28 03:51:55 -Generating unique operation named: saveUsingPOST_2
2018-06-28 03:51:55 -Generating unique operation named: updateUsingGET_2
2018-06-28 03:51:55 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPOST_2
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPUT_2
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 03:51:55 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 03:51:55 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 03:51:55 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 03:51:55 -Generating unique operation named: addUsingGET_3
2018-06-28 03:51:55 -Generating unique operation named: editUsingGET_3
2018-06-28 03:51:55 -Generating unique operation named: listUsingGET_3
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_6
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_7
2018-06-28 03:51:55 -Generating unique operation named: saveUsingPOST_3
2018-06-28 03:51:55 -Generating unique operation named: updateUsingGET_3
2018-06-28 03:51:55 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPOST_3
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPUT_3
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 03:51:55 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 03:51:55 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 03:51:55 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 03:51:55 -Generating unique operation named: editUsingGET_4
2018-06-28 03:51:55 -Generating unique operation named: listUsingGET_4
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPOST_4
2018-06-28 03:51:55 -Generating unique operation named: listUsingGET_5
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_8
2018-06-28 03:51:55 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 03:51:55 -Generating unique operation named: addUsingGET_4
2018-06-28 03:51:55 -Generating unique operation named: editUsingGET_5
2018-06-28 03:51:55 -Generating unique operation named: listUsingGET_6
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_9
2018-06-28 03:51:55 -Generating unique operation named: saveUsingPOST_4
2018-06-28 03:51:55 -Generating unique operation named: treeUsingGET_1
2018-06-28 03:51:55 -Generating unique operation named: treeUsingGET_2
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPOST_5
2018-06-28 03:51:55 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 03:51:55 -Generating unique operation named: editUsingGET_6
2018-06-28 03:51:55 -Generating unique operation named: listUsingGET_7
2018-06-28 03:51:55 -Generating unique operation named: addUsingGET_5
2018-06-28 03:51:55 -Generating unique operation named: editUsingGET_7
2018-06-28 03:51:55 -Generating unique operation named: listUsingGET_8
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_10
2018-06-28 03:51:55 -Generating unique operation named: removeUsingPOST_11
2018-06-28 03:51:55 -Generating unique operation named: saveUsingPOST_5
2018-06-28 03:51:55 -Generating unique operation named: updateUsingGET_4
2018-06-28 03:51:55 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPOST_6
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPUT_4
2018-06-28 03:51:55 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 03:51:55 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 03:51:55 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 03:51:55 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 03:51:55 -Generating unique operation named: addUsingGET_6
2018-06-28 03:51:55 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 03:51:56 -Generating unique operation named: deployUsingPOST_1
2018-06-28 03:51:56 -Generating unique operation named: listUsingGET_9
2018-06-28 03:51:56 -Generating unique operation named: removeUsingPOST_12
2018-06-28 03:51:56 -Generating unique operation named: addUsingGET_7
2018-06-28 03:51:56 -Generating unique operation named: editUsingGET_8
2018-06-28 03:51:56 -Generating unique operation named: infoUsingGET_1
2018-06-28 03:51:56 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 03:51:56 -Generating unique operation named: infoUsingPOST_1
2018-06-28 03:51:56 -Generating unique operation named: infoUsingPUT_1
2018-06-28 03:51:56 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 03:51:56 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 03:51:56 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 03:51:56 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 03:51:56 -Generating unique operation named: listUsingGET_10
2018-06-28 03:51:56 -Generating unique operation named: removeUsingPOST_13
2018-06-28 03:51:56 -Generating unique operation named: removeUsingPOST_14
2018-06-28 03:51:56 -Generating unique operation named: saveUsingPOST_6
2018-06-28 03:51:56 -Generating unique operation named: updateUsingPOST_7
2018-06-28 03:51:56 -Generating unique operation named: addUsingGET_8
2018-06-28 03:51:56 -Generating unique operation named: editUsingGET_9
2018-06-28 03:51:56 -Generating unique operation named: listUsingGET_11
2018-06-28 03:51:56 -Generating unique operation named: removeUsingPOST_15
2018-06-28 03:51:56 -Generating unique operation named: removeUsingPOST_16
2018-06-28 03:51:56 -Generating unique operation named: saveUsingPOST_7
2018-06-28 03:51:56 -Generating unique operation named: updateUsingGET_5
2018-06-28 03:51:56 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 03:51:56 -Generating unique operation named: updateUsingPOST_8
2018-06-28 03:51:56 -Generating unique operation named: updateUsingPUT_5
2018-06-28 03:51:56 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 03:51:56 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 03:51:56 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 03:51:56 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 03:51:56 -Generating unique operation named: addUsingGET_9
2018-06-28 03:51:56 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 03:51:56 -Generating unique operation named: editUsingGET_10
2018-06-28 03:51:56 -Generating unique operation named: listUsingGET_12
2018-06-28 03:51:56 -Generating unique operation named: saveUsingPOST_8
2018-06-28 03:51:56 -Generating unique operation named: saveUsingPOST_9
2018-06-28 03:51:56 -Generating unique operation named: updateUsingPOST_9
2018-06-28 03:51:56 -Generating unique operation named: addUsingGET_10
2018-06-28 03:51:56 -Generating unique operation named: editUsingGET_11
2018-06-28 03:51:56 -Generating unique operation named: listUsingGET_13
2018-06-28 03:51:56 -Generating unique operation named: removeUsingPOST_17
2018-06-28 03:51:56 -Generating unique operation named: removeUsingPOST_18
2018-06-28 03:51:56 -Generating unique operation named: updateUsingGET_6
2018-06-28 03:51:56 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 03:51:56 -Generating unique operation named: updateUsingPOST_10
2018-06-28 03:51:56 -Generating unique operation named: updateUsingPUT_6
2018-06-28 03:51:56 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 03:51:56 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 03:51:56 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 03:51:56 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 03:51:56 -Generating unique operation named: listUsingGET_14
2018-06-28 03:51:56 -Generating unique operation named: listUsingHEAD_1
2018-06-28 03:51:56 -Generating unique operation named: listUsingPOST_1
2018-06-28 03:51:56 -Generating unique operation named: listUsingPUT_1
2018-06-28 03:51:56 -Generating unique operation named: listUsingPATCH_1
2018-06-28 03:51:56 -Generating unique operation named: listUsingDELETE_1
2018-06-28 03:51:56 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 03:51:56 -Generating unique operation named: listUsingTRACE_1
2018-06-28 03:51:56 -Generating unique operation named: listUsingGET_15
2018-06-28 03:51:56 -Generating unique operation named: addUsingGET_11
2018-06-28 03:51:56 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 03:51:56 -Generating unique operation named: editUsingGET_12
2018-06-28 03:51:56 -Generating unique operation named: listUsingGET_16
2018-06-28 03:51:56 -Generating unique operation named: removeUsingPOST_19
2018-06-28 03:51:56 -Generating unique operation named: saveUsingPOST_10
2018-06-28 03:51:56 -Generating unique operation named: treeUsingGET_3
2018-06-28 03:51:56 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 03:51:56 -Generating unique operation named: updateUsingPOST_11
2018-06-28 03:51:56 -Starting Quartz Scheduler now
2018-06-28 03:51:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 03:51:56 -Starting...
2018-06-28 03:51:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 03:51:56 -Started.
2018-06-28 03:51:56 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 03:51:56 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 03:51:56 -Using a shared selector for servlet write/read
2018-06-28 03:51:56 -Tomcat started on port(s): 8099 (http)
2018-06-28 03:51:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 03:51:56 -==> Parameters: 
2018-06-28 03:51:56 -<==      Total: 1
2018-06-28 03:51:56 -Started BootdoApplication in 14.175 seconds (JVM running for 14.737)
2018-06-28 03:52:51 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-06-28 03:54:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 03:54:11 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 03:54:11 -FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-06-28 03:54:11 -Enabling session validation scheduler...
2018-06-28 03:54:11 -请求地址 : http://127.0.0.1:8099/
2018-06-28 03:54:11 -HTTP METHOD : GET
2018-06-28 03:54:11 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.welcome
2018-06-28 03:54:11 -参数 : [{}]
2018-06-28 03:54:11 -耗时 : 2
2018-06-28 03:54:11 -返回值 : redirect:/blog
2018-06-28 03:54:11 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 03:54:11 -HTTP METHOD : GET
2018-06-28 03:54:11 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 03:54:11 -参数 : []
2018-06-28 03:54:11 -耗时 : 1
2018-06-28 03:54:11 -返回值 : blog/index/main
2018-06-28 03:54:11 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 03:54:11 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 03:54:11 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 03:54:11 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 03:54:11 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 03:54:11 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 03:54:11 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 03:54:12 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 03:54:12 -HTTP METHOD : GET
2018-06-28 03:54:12 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 03:54:12 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 03:54:12 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 03:54:12 -==> Parameters: article(String)
2018-06-28 03:54:12 -<==      Total: 10
2018-06-28 03:54:12 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 03:54:12 -==> Parameters: article(String)
2018-06-28 03:54:12 -<==      Total: 1
2018-06-28 03:54:12 -耗时 : 31
2018-06-28 03:54:12 -返回值 : com.bootdo.common.utils.PageUtils@7826a96
2018-06-28 03:54:17 -请求地址 : http://127.0.0.1:8099/blog/open/page/communication
2018-06-28 03:54:17 -HTTP METHOD : GET
2018-06-28 03:54:17 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.about
2018-06-28 03:54:17 -参数 : [communication, {}]
2018-06-28 03:54:17 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE categories = ? order by cid desc 
2018-06-28 03:54:17 -==> Parameters: communication(String)
2018-06-28 03:54:17 -<==      Total: 1
2018-06-28 03:54:17 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE categories = ? order by cid desc 
2018-06-28 03:54:17 -==> Parameters: communication(String)
2018-06-28 03:54:17 -<==      Total: 1
2018-06-28 03:54:17 -耗时 : 6
2018-06-28 03:54:17 -返回值 : blog/index/post
2018-06-28 03:54:19 -请求地址 : http://127.0.0.1:8099/blog/open/page/about
2018-06-28 03:54:19 -HTTP METHOD : GET
2018-06-28 03:54:19 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.about
2018-06-28 03:54:19 -参数 : [about, {}]
2018-06-28 03:54:19 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE categories = ? order by cid desc 
2018-06-28 03:54:19 -==> Parameters: about(String)
2018-06-28 03:54:19 -<==      Total: 1
2018-06-28 03:54:19 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE categories = ? order by cid desc 
2018-06-28 03:54:19 -==> Parameters: about(String)
2018-06-28 03:54:19 -<==      Total: 1
2018-06-28 03:54:19 -耗时 : 6
2018-06-28 03:54:19 -返回值 : blog/index/post
2018-06-28 03:54:21 -请求地址 : http://127.0.0.1:8099/
2018-06-28 03:54:21 -HTTP METHOD : GET
2018-06-28 03:54:21 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.welcome
2018-06-28 03:54:21 -参数 : [{}]
2018-06-28 03:54:21 -耗时 : 1
2018-06-28 03:54:21 -返回值 : redirect:/blog
2018-06-28 03:54:21 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 03:54:21 -HTTP METHOD : GET
2018-06-28 03:54:21 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 03:54:21 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 03:54:21 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 03:54:21 -==> Parameters: article(String)
2018-06-28 03:54:21 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 03:54:21 -HTTP METHOD : GET
2018-06-28 03:54:21 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 03:54:21 -参数 : []
2018-06-28 03:54:21 -耗时 : 0
2018-06-28 03:54:21 -返回值 : blog/index/main
2018-06-28 03:54:21 -<==      Total: 10
2018-06-28 03:54:21 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 03:54:21 -==> Parameters: article(String)
2018-06-28 03:54:21 -<==      Total: 1
2018-06-28 03:54:21 -耗时 : 12
2018-06-28 03:54:21 -返回值 : com.bootdo.common.utils.PageUtils@1ffcfcf9
2018-06-28 03:54:25 -请求地址 : http://127.0.0.1:8099/blog/open/post/121
2018-06-28 03:54:25 -HTTP METHOD : GET
2018-06-28 03:54:25 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.post
2018-06-28 03:54:25 -参数 : [121, {}]
2018-06-28 03:54:25 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content where cid = ? 
2018-06-28 03:54:25 -==> Parameters: 121(Long)
2018-06-28 03:54:25 -<==      Total: 1
2018-06-28 03:54:25 -耗时 : 5
2018-06-28 03:54:25 -返回值 : blog/index/post
2018-06-28 03:54:30 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 03:54:30 -HTTP METHOD : GET
2018-06-28 03:54:30 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 03:54:30 -参数 : []
2018-06-28 03:54:30 -耗时 : 0
2018-06-28 03:54:30 -返回值 : login
2018-06-28 03:54:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 03:54:31 -==> Parameters: admin(String)
2018-06-28 03:54:31 -<==      Total: 1
2018-06-28 03:54:31 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 03:54:31 -HTTP METHOD : POST
2018-06-28 03:54:31 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 03:54:31 -参数 : [admin, 111111]
2018-06-28 03:54:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 03:54:31 -==> Parameters: admin(String)
2018-06-28 03:54:31 -<==      Total: 1
2018-06-28 03:54:31 -耗时 : 31
2018-06-28 03:54:31 -返回值 : {msg=操作成功, code=0}
2018-06-28 03:54:31 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 03:54:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 03:54:31 -==> Parameters: 1(Long), admin(String), 登录(String), 31(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 03:54:31.967(Timestamp)
2018-06-28 03:54:31 -<==    Updates: 1
2018-06-28 03:54:31 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 03:54:31 -HTTP METHOD : GET
2018-06-28 03:54:31 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 03:54:31 -参数 : [{}]
2018-06-28 03:54:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 03:54:32 -==> Parameters: 1(Long)
2018-06-28 03:54:32 -<==      Total: 29
2018-06-28 03:54:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 03:54:32 -==> Parameters: 150(Long)
2018-06-28 03:54:32 -<==      Total: 1
2018-06-28 03:54:32 -耗时 : 21
2018-06-28 03:54:32 -返回值 : index_v1
2018-06-28 03:54:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 03:54:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 03:54:32.049(Timestamp)
2018-06-28 03:54:32 -<==    Updates: 1
2018-06-28 03:54:32 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 03:54:32 -HTTP METHOD : GET
2018-06-28 03:54:32 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 03:54:32 -参数 : []
2018-06-28 03:54:32 -耗时 : 0
2018-06-28 03:54:32 -返回值 : main
2018-06-28 03:54:32 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 03:54:32 -HTTP METHOD : GET
2018-06-28 03:54:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 03:54:32 -参数 : []
2018-06-28 03:54:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 03:54:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 03:54:32 -<==      Total: 0
2018-06-28 03:54:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 03:54:32 -==> Parameters: 1(Long), 0(String)
2018-06-28 03:54:32 -<==      Total: 1
2018-06-28 03:54:32 -耗时 : 10
2018-06-28 03:54:32 -返回值 : com.bootdo.common.utils.PageUtils@6c76fea7
2018-06-28 03:54:32 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 03:54:32 -HTTP METHOD : GET
2018-06-28 03:54:32 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 03:54:32 -参数 : []
2018-06-28 03:54:32 -耗时 : 1
2018-06-28 03:54:32 -返回值 : main
2018-06-28 03:54:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 03:54:36 -==> Parameters: 1(Long)
2018-06-28 03:54:36 -<==      Total: 51
2018-06-28 03:54:36 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:36 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 03:54:36 -HTTP METHOD : GET
2018-06-28 03:54:36 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 03:54:36 -参数 : []
2018-06-28 03:54:36 -耗时 : 0
2018-06-28 03:54:36 -返回值 : system/regexp/regexp
2018-06-28 03:54:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:36 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 03:54:36 -HTTP METHOD : GET
2018-06-28 03:54:36 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 03:54:36 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 03:54:36 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 03:54:36 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 03:54:36 -<==      Total: 10
2018-06-28 03:54:36 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 03:54:36 -==> Parameters: 
2018-06-28 03:54:36 -<==      Total: 1
2018-06-28 03:54:36 -耗时 : 10
2018-06-28 03:54:36 -返回值 : com.bootdo.common.utils.PageUtils@6e58b9f3
2018-06-28 03:54:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:43 -请求地址 : http://127.0.0.1:8099/sys/role
2018-06-28 03:54:43 -HTTP METHOD : GET
2018-06-28 03:54:43 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 03:54:43 -参数 : []
2018-06-28 03:54:43 -耗时 : 1
2018-06-28 03:54:43 -返回值 : system/role/role
2018-06-28 03:54:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:58 -请求地址 : http://127.0.0.1:8099/oa/notify
2018-06-28 03:54:58 -HTTP METHOD : GET
2018-06-28 03:54:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.oaNotify
2018-06-28 03:54:58 -参数 : []
2018-06-28 03:54:58 -耗时 : 0
2018-06-28 03:54:58 -返回值 : oa/notify/notify
2018-06-28 03:54:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:54:58 -请求地址 : http://127.0.0.1:8099/oa/notify/list
2018-06-28 03:54:58 -HTTP METHOD : GET
2018-06-28 03:54:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2018-06-28 03:54:58 -参数 : [{limit=10, offset=0}]
2018-06-28 03:54:58 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2018-06-28 03:54:58 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 03:54:58 -<==      Total: 5
2018-06-28 03:54:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 03:54:58 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 03:54:58 -<==      Total: 1
2018-06-28 03:54:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 03:54:58 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 03:54:58 -<==      Total: 1
2018-06-28 03:54:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 03:54:58 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 03:54:58 -<==      Total: 1
2018-06-28 03:54:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 03:54:58 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 03:54:58 -<==      Total: 1
2018-06-28 03:54:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 03:54:58 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 03:54:58 -<==      Total: 1
2018-06-28 03:54:58 -==>  Preparing: select count(*) from oa_notify 
2018-06-28 03:54:58 -==> Parameters: 
2018-06-28 03:54:58 -<==      Total: 1
2018-06-28 03:54:58 -耗时 : 22
2018-06-28 03:54:58 -返回值 : com.bootdo.common.utils.PageUtils@3da38a4
2018-06-28 03:55:00 -请求地址 : http://127.0.0.1:8099/oa/notify/selfNotify
2018-06-28 03:55:00 -HTTP METHOD : GET
2018-06-28 03:55:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2018-06-28 03:55:00 -参数 : []
2018-06-28 03:55:00 -耗时 : 0
2018-06-28 03:55:00 -返回值 : oa/notify/selfNotify
2018-06-28 03:55:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:00 -请求地址 : http://127.0.0.1:8099/oa/notify/selfList
2018-06-28 03:55:00 -HTTP METHOD : GET
2018-06-28 03:55:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2018-06-28 03:55:00 -参数 : [{limit=10, offset=0}]
2018-06-28 03:55:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 03:55:00 -==> Parameters: 1(Long), 0(Integer), 10(Integer)
2018-06-28 03:55:00 -<==      Total: 5
2018-06-28 03:55:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 03:55:00 -==> Parameters: 1(Long)
2018-06-28 03:55:00 -<==      Total: 1
2018-06-28 03:55:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 03:55:00 -==> Parameters: 1(Long)
2018-06-28 03:55:00 -<==      Total: 1
2018-06-28 03:55:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 03:55:00 -==> Parameters: 1(Long)
2018-06-28 03:55:00 -<==      Total: 1
2018-06-28 03:55:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 03:55:00 -==> Parameters: 1(Long)
2018-06-28 03:55:00 -<==      Total: 1
2018-06-28 03:55:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 03:55:00 -==> Parameters: 1(Long)
2018-06-28 03:55:00 -<==      Total: 1
2018-06-28 03:55:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 03:55:00 -==> Parameters: 1(Long), null
2018-06-28 03:55:00 -<==      Total: 1
2018-06-28 03:55:00 -耗时 : 15
2018-06-28 03:55:00 -返回值 : com.bootdo.common.utils.PageUtils@583f6e07
2018-06-28 03:55:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:02 -请求地址 : http://127.0.0.1:8099/blog/bContent/add
2018-06-28 03:55:02 -HTTP METHOD : GET
2018-06-28 03:55:02 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.add
2018-06-28 03:55:02 -参数 : []
2018-06-28 03:55:02 -耗时 : 0
2018-06-28 03:55:02 -返回值 : blog/bContent/add
2018-06-28 03:55:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:03 -请求地址 : http://127.0.0.1:8099/blog/bContent
2018-06-28 03:55:03 -HTTP METHOD : GET
2018-06-28 03:55:03 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.bContent
2018-06-28 03:55:03 -参数 : []
2018-06-28 03:55:03 -耗时 : 0
2018-06-28 03:55:03 -返回值 : blog/bContent/bContent
2018-06-28 03:55:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:03 -请求地址 : http://127.0.0.1:8099/blog/bContent/list
2018-06-28 03:55:03 -HTTP METHOD : GET
2018-06-28 03:55:03 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.list
2018-06-28 03:55:03 -参数 : [{limit=10, offset=0}]
2018-06-28 03:55:03 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content order by cid desc limit 0, 10 
2018-06-28 03:55:03 -==> Parameters: 
2018-06-28 03:55:03 -<==      Total: 10
2018-06-28 03:55:03 -==>  Preparing: select count(*) from blog_content 
2018-06-28 03:55:03 -==> Parameters: 
2018-06-28 03:55:03 -<==      Total: 1
2018-06-28 03:55:03 -耗时 : 15
2018-06-28 03:55:03 -返回值 : com.bootdo.common.utils.PageUtils@2164e768
2018-06-28 03:55:06 -请求地址 : http://127.0.0.1:8099/activiti/process
2018-06-28 03:55:06 -HTTP METHOD : GET
2018-06-28 03:55:06 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.process
2018-06-28 03:55:06 -参数 : []
2018-06-28 03:55:06 -耗时 : 0
2018-06-28 03:55:06 -返回值 : ModelAndView: reference to view with name 'act/process/process'; model is null
2018-06-28 03:55:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:06 -请求地址 : http://127.0.0.1:8099/activiti/process/list
2018-06-28 03:55:06 -HTTP METHOD : GET
2018-06-28 03:55:06 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.list
2018-06-28 03:55:06 -参数 : [0, 10]
2018-06-28 03:55:06 -耗时 : 18
2018-06-28 03:55:06 -返回值 : com.bootdo.common.utils.PageUtils@5d73daf0
2018-06-28 03:55:08 -请求地址 : http://127.0.0.1:8099/activiti/task/todo
2018-06-28 03:55:08 -HTTP METHOD : GET
2018-06-28 03:55:08 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todo
2018-06-28 03:55:08 -参数 : []
2018-06-28 03:55:08 -耗时 : 0
2018-06-28 03:55:08 -返回值 : ModelAndView: reference to view with name 'act/task/todoTask'; model is null
2018-06-28 03:55:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:08 -请求地址 : http://127.0.0.1:8099/activiti/task/todoList
2018-06-28 03:55:08 -HTTP METHOD : GET
2018-06-28 03:55:08 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todoList
2018-06-28 03:55:08 -参数 : []
2018-06-28 03:55:08 -请求地址 : http://127.0.0.1:8099/activiti/task/gotoList
2018-06-28 03:55:08 -HTTP METHOD : GET
2018-06-28 03:55:08 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.list
2018-06-28 03:55:08 -参数 : [0, 10]
2018-06-28 03:55:08 -耗时 : 9
2018-06-28 03:55:08 -返回值 : com.bootdo.common.utils.PageUtils@73e4277f
2018-06-28 03:55:08 -耗时 : 25
2018-06-28 03:55:08 -返回值 : []
2018-06-28 03:55:16 -请求地址 : http://127.0.0.1:8099/activiti/model
2018-06-28 03:55:16 -HTTP METHOD : GET
2018-06-28 03:55:16 -CLASS_METHOD : com.bootdo.activiti.controller.ModelController.model
2018-06-28 03:55:16 -参数 : []
2018-06-28 03:55:16 -耗时 : 1
2018-06-28 03:55:16 -返回值 : ModelAndView: reference to view with name 'act/model/model'; model is null
2018-06-28 03:55:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 03:55:16 -请求地址 : http://127.0.0.1:8099/activiti/model/list
2018-06-28 03:55:16 -HTTP METHOD : GET
2018-06-28 03:55:16 -CLASS_METHOD : com.bootdo.activiti.controller.ModelController.list
2018-06-28 03:55:16 -参数 : [0, 10]
2018-06-28 03:55:16 -耗时 : 9
2018-06-28 03:55:16 -返回值 : com.bootdo.common.utils.PageUtils@b4c9451
2018-06-28 04:22:51 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 408]
2018-06-28 04:52:51 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 841]
2018-06-28 04:54:11 -Validating all active sessions...
2018-06-28 04:54:11 -Finished session validation.  No sessions were stopped.
2018-06-28 09:38:50 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 1274]
2018-06-28 10:08:50 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 1707]
2018-06-28 10:10:10 -Validating all active sessions...
2018-06-28 10:10:10 -Finished session validation.  No sessions were stopped.
2018-06-28 10:28:18 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 03:51:43 CST 2018]; root of context hierarchy
2018-06-28 10:28:18 -Stopping beans in phase 2147483647
2018-06-28 10:28:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 10:28:18 -Stopping...
2018-06-28 10:28:18 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 10:28:18 -Stopped.
2018-06-28 10:28:18 -Unregistering JMX-exposed beans on shutdown
2018-06-28 10:28:18 -Unregistering JMX-exposed beans
2018-06-28 10:28:18 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 10:28:18 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 10:28:18 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 10:28:18 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 10:28:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 10:28:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 10:28:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 10:28:18 -Shutting down Quartz Scheduler
2018-06-28 10:28:18 -{dataSource-1} closed
2018-06-28 10:28:18 -Disabled session validation scheduler.
2018-06-28 10:29:11 -Starting BootdoApplication on localhost with PID 6721 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 10:29:11 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 10:29:11 -The following profiles are active: dev
2018-06-28 10:29:12 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 10:29:12 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:29:12 CST 2018]; root of context hierarchy
2018-06-28 10:29:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 10:29:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a5450b07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:29:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$979e39ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:29:14 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:29:14 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:29:14 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 10:29:14 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:29:14 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:29:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:29:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:29:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:29:14 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 10:29:14 -Starting service [Tomcat]
2018-06-28 10:29:14 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 10:29:14 -Initializing Spring embedded WebApplicationContext
2018-06-28 10:29:15 -Root WebApplicationContext: initialization completed in 2891 ms
2018-06-28 10:29:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 10:29:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 10:29:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 10:29:15 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 10:29:15 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 10:29:15 -Filter xssFilter was not registered (disabled)
2018-06-28 10:29:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 10:29:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 10:29:15 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 10:29:15 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 10:29:15 -{dataSource-1} inited
2018-06-28 10:29:17 -ProcessEngine default created
2018-06-28 10:29:18 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:29:12 CST 2018]; root of context hierarchy
2018-06-28 10:29:18 -Using default implementation for ThreadExecutor
2018-06-28 10:29:18 -Job execution threads will use class loader of thread: main
2018-06-28 10:29:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 10:29:18 -Quartz Scheduler v.2.2.1 created.
2018-06-28 10:29:18 -RAMJobStore initialized.
2018-06-28 10:29:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 10:29:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 10:29:18 -Quartz scheduler version: 2.2.1
2018-06-28 10:29:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2b0d85bd
2018-06-28 10:29:18 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 10:29:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 10:29:20 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 10:29:20 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 10:29:20 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 10:29:20 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 10:29:20 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 10:29:20 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 10:29:20 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 10:29:20 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 10:29:20 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 10:29:20 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 10:29:20 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 10:29:20 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 10:29:20 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 10:29:20 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 10:29:20 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 10:29:20 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 10:29:20 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 10:29:20 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 10:29:20 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 10:29:20 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 10:29:20 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 10:29:20 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 10:29:20 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 10:29:20 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 10:29:20 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 10:29:20 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 10:29:20 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 10:29:20 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 10:29:20 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 10:29:20 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 10:29:20 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 10:29:20 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 10:29:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 10:29:20 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 10:29:20 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 10:29:20 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 10:29:20 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 10:29:20 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 10:29:20 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 10:29:20 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 10:29:20 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 10:29:20 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 10:29:20 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 10:29:20 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 10:29:20 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 10:29:20 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 10:29:20 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 10:29:20 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 10:29:20 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 10:29:20 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 10:29:20 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 10:29:20 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 10:29:20 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 10:29:20 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 10:29:20 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 10:29:20 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 10:29:20 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 10:29:20 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 10:29:20 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 10:29:20 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 10:29:20 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 10:29:20 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 10:29:20 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 10:29:20 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 10:29:20 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 10:29:20 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 10:29:20 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 10:29:20 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 10:29:20 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 10:29:20 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 10:29:20 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 10:29:20 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 10:29:20 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 10:29:20 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 10:29:20 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 10:29:20 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 10:29:20 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 10:29:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 10:29:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 10:29:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 10:29:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 10:29:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 10:29:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 10:29:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 10:29:20 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 10:29:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 10:29:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 10:29:20 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 10:29:20 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 10:29:20 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 10:29:20 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 10:29:20 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 10:29:20 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:29:20 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 10:29:20 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 10:29:20 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 10:29:20 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 10:29:20 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 10:29:20 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 10:29:20 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 10:29:20 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 10:29:20 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 10:29:20 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 10:29:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 10:29:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 10:29:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 10:29:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 10:29:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 10:29:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 10:29:20 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 10:29:21 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:29:12 CST 2018]; root of context hierarchy
2018-06-28 10:29:21 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 10:29:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 10:29:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 10:29:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 10:29:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 10:29:22 -

Using default security password: 69057b03-1fd0-407a-8dfc-86c46b05516e

2018-06-28 10:29:22 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 10:29:22 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@5f346355, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@66e62e19, org.springframework.security.web.context.SecurityContextPersistenceFilter@5f3c866c, org.springframework.security.web.header.HeaderWriterFilter@4d3bde85, org.springframework.security.web.csrf.CsrfFilter@63541cd4, org.springframework.security.web.authentication.logout.LogoutFilter@2daa5092, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b9b6a56, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c7d675c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50fe5df2, org.springframework.security.web.session.SessionManagementFilter@2319c1e0, org.springframework.security.web.access.ExceptionTranslationFilter@5e8a678a]
2018-06-28 10:29:23 -Registering beans for JMX exposure on startup
2018-06-28 10:29:23 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 10:29:23 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 10:29:23 -Starting beans in phase 2147483647
2018-06-28 10:29:23 -Context refreshed
2018-06-28 10:29:23 -Found 1 custom documentation plugin(s)
2018-06-28 10:29:23 -Scanning for api listing references
2018-06-28 10:29:23 -Generating unique operation named: removeUsingPOST_1
2018-06-28 10:29:23 -Generating unique operation named: addUsingGET_1
2018-06-28 10:29:23 -Generating unique operation named: editUsingGET_1
2018-06-28 10:29:23 -Generating unique operation named: listUsingGET_1
2018-06-28 10:29:23 -Generating unique operation named: removeUsingPOST_2
2018-06-28 10:29:23 -Generating unique operation named: removeUsingPOST_3
2018-06-28 10:29:23 -Generating unique operation named: saveUsingPOST_1
2018-06-28 10:29:23 -Generating unique operation named: updateUsingGET_1
2018-06-28 10:29:23 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 10:29:23 -Generating unique operation named: updateUsingPOST_1
2018-06-28 10:29:23 -Generating unique operation named: updateUsingPUT_1
2018-06-28 10:29:23 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 10:29:23 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 10:29:23 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 10:29:23 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 10:29:23 -Generating unique operation named: addUsingGET_2
2018-06-28 10:29:23 -Generating unique operation named: editUsingGET_2
2018-06-28 10:29:24 -Generating unique operation named: listUsingGET_2
2018-06-28 10:29:24 -Generating unique operation named: removeUsingPOST_4
2018-06-28 10:29:24 -Generating unique operation named: removeUsingPOST_5
2018-06-28 10:29:24 -Generating unique operation named: saveUsingPOST_2
2018-06-28 10:29:24 -Generating unique operation named: updateUsingGET_2
2018-06-28 10:29:24 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPOST_2
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPUT_2
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 10:29:24 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 10:29:24 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 10:29:24 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 10:29:24 -Generating unique operation named: addUsingGET_3
2018-06-28 10:29:24 -Generating unique operation named: editUsingGET_3
2018-06-28 10:29:24 -Generating unique operation named: listUsingGET_3
2018-06-28 10:29:24 -Generating unique operation named: removeUsingPOST_6
2018-06-28 10:29:24 -Generating unique operation named: removeUsingPOST_7
2018-06-28 10:29:24 -Generating unique operation named: saveUsingPOST_3
2018-06-28 10:29:24 -Generating unique operation named: updateUsingGET_3
2018-06-28 10:29:24 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPOST_3
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPUT_3
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 10:29:24 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 10:29:24 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 10:29:24 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 10:29:24 -Generating unique operation named: editUsingGET_4
2018-06-28 10:29:24 -Generating unique operation named: listUsingGET_4
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPOST_4
2018-06-28 10:29:24 -Generating unique operation named: listUsingGET_5
2018-06-28 10:29:24 -Generating unique operation named: removeUsingPOST_8
2018-06-28 10:29:24 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 10:29:24 -Generating unique operation named: addUsingGET_4
2018-06-28 10:29:24 -Generating unique operation named: editUsingGET_5
2018-06-28 10:29:24 -Generating unique operation named: listUsingGET_6
2018-06-28 10:29:24 -Generating unique operation named: removeUsingPOST_9
2018-06-28 10:29:24 -Generating unique operation named: saveUsingPOST_4
2018-06-28 10:29:24 -Generating unique operation named: treeUsingGET_1
2018-06-28 10:29:24 -Generating unique operation named: treeUsingGET_2
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPOST_5
2018-06-28 10:29:24 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 10:29:24 -Generating unique operation named: editUsingGET_6
2018-06-28 10:29:24 -Generating unique operation named: listUsingGET_7
2018-06-28 10:29:24 -Generating unique operation named: addUsingGET_5
2018-06-28 10:29:24 -Generating unique operation named: editUsingGET_7
2018-06-28 10:29:24 -Generating unique operation named: listUsingGET_8
2018-06-28 10:29:24 -Generating unique operation named: removeUsingPOST_10
2018-06-28 10:29:24 -Generating unique operation named: removeUsingPOST_11
2018-06-28 10:29:24 -Generating unique operation named: saveUsingPOST_5
2018-06-28 10:29:24 -Generating unique operation named: updateUsingGET_4
2018-06-28 10:29:24 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPOST_6
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPUT_4
2018-06-28 10:29:24 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 10:29:24 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 10:29:24 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 10:29:24 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 10:29:24 -Generating unique operation named: addUsingGET_6
2018-06-28 10:29:24 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 10:29:24 -Generating unique operation named: deployUsingPOST_1
2018-06-28 10:29:24 -Generating unique operation named: listUsingGET_9
2018-06-28 10:29:24 -Generating unique operation named: removeUsingPOST_12
2018-06-28 10:29:24 -Generating unique operation named: addUsingGET_7
2018-06-28 10:29:24 -Generating unique operation named: editUsingGET_8
2018-06-28 10:29:24 -Generating unique operation named: infoUsingGET_1
2018-06-28 10:29:25 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 10:29:25 -Generating unique operation named: infoUsingPOST_1
2018-06-28 10:29:25 -Generating unique operation named: infoUsingPUT_1
2018-06-28 10:29:25 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 10:29:25 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 10:29:25 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 10:29:25 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 10:29:25 -Generating unique operation named: listUsingGET_10
2018-06-28 10:29:25 -Generating unique operation named: removeUsingPOST_13
2018-06-28 10:29:25 -Generating unique operation named: removeUsingPOST_14
2018-06-28 10:29:25 -Generating unique operation named: saveUsingPOST_6
2018-06-28 10:29:25 -Generating unique operation named: updateUsingPOST_7
2018-06-28 10:29:25 -Generating unique operation named: addUsingGET_8
2018-06-28 10:29:25 -Generating unique operation named: editUsingGET_9
2018-06-28 10:29:25 -Generating unique operation named: listUsingGET_11
2018-06-28 10:29:25 -Generating unique operation named: removeUsingPOST_15
2018-06-28 10:29:25 -Generating unique operation named: removeUsingPOST_16
2018-06-28 10:29:25 -Generating unique operation named: saveUsingPOST_7
2018-06-28 10:29:25 -Generating unique operation named: updateUsingGET_5
2018-06-28 10:29:25 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 10:29:25 -Generating unique operation named: updateUsingPOST_8
2018-06-28 10:29:25 -Generating unique operation named: updateUsingPUT_5
2018-06-28 10:29:25 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 10:29:25 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 10:29:25 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 10:29:25 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 10:29:25 -Generating unique operation named: addUsingGET_9
2018-06-28 10:29:25 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 10:29:25 -Generating unique operation named: editUsingGET_10
2018-06-28 10:29:25 -Generating unique operation named: listUsingGET_12
2018-06-28 10:29:25 -Generating unique operation named: saveUsingPOST_8
2018-06-28 10:29:25 -Generating unique operation named: saveUsingPOST_9
2018-06-28 10:29:25 -Generating unique operation named: updateUsingPOST_9
2018-06-28 10:29:25 -Generating unique operation named: addUsingGET_10
2018-06-28 10:29:25 -Generating unique operation named: editUsingGET_11
2018-06-28 10:29:25 -Generating unique operation named: listUsingGET_13
2018-06-28 10:29:25 -Generating unique operation named: removeUsingPOST_17
2018-06-28 10:29:25 -Generating unique operation named: removeUsingPOST_18
2018-06-28 10:29:25 -Generating unique operation named: updateUsingGET_6
2018-06-28 10:29:25 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 10:29:25 -Generating unique operation named: updateUsingPOST_10
2018-06-28 10:29:25 -Generating unique operation named: updateUsingPUT_6
2018-06-28 10:29:25 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 10:29:25 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 10:29:25 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 10:29:25 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 10:29:25 -Generating unique operation named: listUsingGET_14
2018-06-28 10:29:25 -Generating unique operation named: listUsingHEAD_1
2018-06-28 10:29:25 -Generating unique operation named: listUsingPOST_1
2018-06-28 10:29:25 -Generating unique operation named: listUsingPUT_1
2018-06-28 10:29:25 -Generating unique operation named: listUsingPATCH_1
2018-06-28 10:29:25 -Generating unique operation named: listUsingDELETE_1
2018-06-28 10:29:25 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 10:29:25 -Generating unique operation named: listUsingTRACE_1
2018-06-28 10:29:25 -Generating unique operation named: listUsingGET_15
2018-06-28 10:29:25 -Generating unique operation named: addUsingGET_11
2018-06-28 10:29:25 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 10:29:25 -Generating unique operation named: editUsingGET_12
2018-06-28 10:29:25 -Generating unique operation named: listUsingGET_16
2018-06-28 10:29:25 -Generating unique operation named: removeUsingPOST_19
2018-06-28 10:29:25 -Generating unique operation named: saveUsingPOST_10
2018-06-28 10:29:25 -Generating unique operation named: treeUsingGET_3
2018-06-28 10:29:25 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 10:29:25 -Generating unique operation named: updateUsingPOST_11
2018-06-28 10:29:25 -Starting Quartz Scheduler now
2018-06-28 10:29:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 10:29:25 -Starting...
2018-06-28 10:29:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 10:29:25 -Started.
2018-06-28 10:29:25 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 10:29:25 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 10:29:25 -Using a shared selector for servlet write/read
2018-06-28 10:29:25 -Tomcat started on port(s): 8099 (http)
2018-06-28 10:29:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 10:29:25 -==> Parameters: 
2018-06-28 10:29:25 -<==      Total: 1
2018-06-28 10:29:25 -Started BootdoApplication in 14.742 seconds (JVM running for 15.338)
2018-06-28 10:29:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 10:29:59 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 10:29:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-06-28 10:29:59 -Enabling session validation scheduler...
2018-06-28 10:29:59 -请求地址 : http://127.0.0.1:8099/
2018-06-28 10:29:59 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 10:29:59 -HTTP METHOD : GET
2018-06-28 10:29:59 -HTTP METHOD : GET
2018-06-28 10:29:59 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 10:29:59 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.welcome
2018-06-28 10:29:59 -参数 : [{}]
2018-06-28 10:29:59 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 10:29:59 -耗时 : 2
2018-06-28 10:29:59 -返回值 : redirect:/blog
2018-06-28 10:29:59 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 10:29:59 -==> Parameters: article(String)
2018-06-28 10:29:59 -<==      Total: 10
2018-06-28 10:29:59 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 10:29:59 -==> Parameters: article(String)
2018-06-28 10:29:59 -<==      Total: 1
2018-06-28 10:29:59 -耗时 : 33
2018-06-28 10:29:59 -返回值 : com.bootdo.common.utils.PageUtils@6aac7a75
2018-06-28 10:29:59 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 10:29:59 -HTTP METHOD : GET
2018-06-28 10:29:59 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 10:29:59 -参数 : []
2018-06-28 10:29:59 -耗时 : 1
2018-06-28 10:29:59 -返回值 : blog/index/main
2018-06-28 10:29:59 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 10:29:59 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 10:29:59 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 10:29:59 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 10:29:59 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 10:29:59 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 10:29:59 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 10:30:03 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 10:30:03 -HTTP METHOD : GET
2018-06-28 10:30:03 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 10:30:03 -参数 : []
2018-06-28 10:30:03 -耗时 : 0
2018-06-28 10:30:03 -返回值 : login
2018-06-28 10:30:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 10:30:05 -==> Parameters: admin(String)
2018-06-28 10:30:05 -<==      Total: 1
2018-06-28 10:30:05 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 10:30:05 -HTTP METHOD : POST
2018-06-28 10:30:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 10:30:05 -参数 : [admin, 111111]
2018-06-28 10:30:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 10:30:05 -==> Parameters: admin(String)
2018-06-28 10:30:05 -<==      Total: 1
2018-06-28 10:30:05 -耗时 : 28
2018-06-28 10:30:05 -返回值 : {msg=操作成功, code=0}
2018-06-28 10:30:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 10:30:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 10:30:05 -==> Parameters: 1(Long), admin(String), 登录(String), 28(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 10:30:05.376(Timestamp)
2018-06-28 10:30:05 -<==    Updates: 1
2018-06-28 10:30:05 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 10:30:05 -HTTP METHOD : GET
2018-06-28 10:30:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 10:30:05 -参数 : [{}]
2018-06-28 10:30:05 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 10:30:05 -HTTP METHOD : GET
2018-06-28 10:30:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 10:30:05 -参数 : []
2018-06-28 10:30:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 10:30:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 10:30:05 -<==      Total: 0
2018-06-28 10:30:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 10:30:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 10:30:05 -==> Parameters: 1(Long), 0(String)
2018-06-28 10:30:05 -<==      Total: 1
2018-06-28 10:30:05 -==> Parameters: 1(Long)
2018-06-28 10:30:05 -耗时 : 11
2018-06-28 10:30:05 -返回值 : com.bootdo.common.utils.PageUtils@760e199f
2018-06-28 10:30:05 -<==      Total: 29
2018-06-28 10:30:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 10:30:05 -==> Parameters: 150(Long)
2018-06-28 10:30:05 -<==      Total: 1
2018-06-28 10:30:05 -耗时 : 25
2018-06-28 10:30:05 -返回值 : index_v1
2018-06-28 10:30:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 10:30:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 10:30:05.461(Timestamp)
2018-06-28 10:30:05 -<==    Updates: 1
2018-06-28 10:30:05 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 10:30:05 -HTTP METHOD : GET
2018-06-28 10:30:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 10:30:05 -参数 : []
2018-06-28 10:30:05 -耗时 : 0
2018-06-28 10:30:05 -返回值 : main
2018-06-28 10:30:05 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 10:30:05 -HTTP METHOD : GET
2018-06-28 10:30:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 10:30:05 -参数 : []
2018-06-28 10:30:05 -耗时 : 0
2018-06-28 10:30:05 -返回值 : main
2018-06-28 10:30:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:09 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 10:30:09 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 10:30:09 -==> Parameters: 1(Long)
2018-06-28 10:30:09 -==> Parameters: 1(Long)
2018-06-28 10:30:09 -<==      Total: 51
2018-06-28 10:30:09 -<==      Total: 51
2018-06-28 10:30:09 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:09 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:09 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 10:30:09 -HTTP METHOD : GET
2018-06-28 10:30:09 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 10:30:09 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 10:30:09 -参数 : []
2018-06-28 10:30:09 -耗时 : 1
2018-06-28 10:30:09 -返回值 : system/regexp/regexp
2018-06-28 10:30:09 -HTTP METHOD : GET
2018-06-28 10:30:09 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 10:30:09 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 10:30:09 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 10:30:09 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 10:30:09 -<==      Total: 10
2018-06-28 10:30:09 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 10:30:09 -==> Parameters: 
2018-06-28 10:30:09 -<==      Total: 1
2018-06-28 10:30:09 -耗时 : 10
2018-06-28 10:30:09 -返回值 : com.bootdo.common.utils.PageUtils@3208b66f
2018-06-28 10:30:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:20 -请求地址 : http://127.0.0.1:8099/sys/role
2018-06-28 10:30:20 -HTTP METHOD : GET
2018-06-28 10:30:20 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 10:30:20 -参数 : []
2018-06-28 10:30:20 -耗时 : 0
2018-06-28 10:30:20 -返回值 : system/role/role
2018-06-28 10:30:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 7, active threads = 1, queued tasks = 2, completed tasks = 3]
2018-06-28 10:30:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:48 -请求地址 : http://127.0.0.1:8099/oa/notify
2018-06-28 10:30:48 -HTTP METHOD : GET
2018-06-28 10:30:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.oaNotify
2018-06-28 10:30:48 -参数 : []
2018-06-28 10:30:48 -请求地址 : http://127.0.0.1:8099/oa/notify/list
2018-06-28 10:30:48 -HTTP METHOD : GET
2018-06-28 10:30:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2018-06-28 10:30:48 -耗时 : 0
2018-06-28 10:30:48 -参数 : [{limit=10, offset=0}]
2018-06-28 10:30:48 -返回值 : oa/notify/notify
2018-06-28 10:30:48 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2018-06-28 10:30:48 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 10:30:48 -<==      Total: 5
2018-06-28 10:30:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 10:30:48 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 10:30:48 -<==      Total: 1
2018-06-28 10:30:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 10:30:48 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 10:30:48 -<==      Total: 1
2018-06-28 10:30:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 10:30:48 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 10:30:48 -<==      Total: 1
2018-06-28 10:30:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 10:30:48 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 10:30:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:48 -<==      Total: 1
2018-06-28 10:30:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 10:30:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:48 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 10:30:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:48 -<==      Total: 1
2018-06-28 10:30:48 -==>  Preparing: select count(*) from oa_notify 
2018-06-28 10:30:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:48 -==> Parameters: 
2018-06-28 10:30:48 -<==      Total: 1
2018-06-28 10:30:48 -耗时 : 27
2018-06-28 10:30:48 -返回值 : com.bootdo.common.utils.PageUtils@197d0d7a
2018-06-28 10:30:50 -请求地址 : http://127.0.0.1:8099/oa/notify/selfNotify
2018-06-28 10:30:50 -HTTP METHOD : GET
2018-06-28 10:30:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2018-06-28 10:30:50 -参数 : []
2018-06-28 10:30:50 -耗时 : 0
2018-06-28 10:30:50 -返回值 : oa/notify/selfNotify
2018-06-28 10:30:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:50 -请求地址 : http://127.0.0.1:8099/oa/notify/selfList
2018-06-28 10:30:50 -HTTP METHOD : GET
2018-06-28 10:30:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2018-06-28 10:30:50 -参数 : [{limit=10, offset=0}]
2018-06-28 10:30:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 10:30:50 -==> Parameters: 1(Long), 0(Integer), 10(Integer)
2018-06-28 10:30:50 -<==      Total: 5
2018-06-28 10:30:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 10:30:50 -==> Parameters: 1(Long)
2018-06-28 10:30:50 -<==      Total: 1
2018-06-28 10:30:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 10:30:50 -==> Parameters: 1(Long)
2018-06-28 10:30:50 -<==      Total: 1
2018-06-28 10:30:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 10:30:50 -==> Parameters: 1(Long)
2018-06-28 10:30:50 -<==      Total: 1
2018-06-28 10:30:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 10:30:50 -==> Parameters: 1(Long)
2018-06-28 10:30:50 -<==      Total: 1
2018-06-28 10:30:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 10:30:50 -==> Parameters: 1(Long)
2018-06-28 10:30:50 -<==      Total: 1
2018-06-28 10:30:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 10:30:50 -==> Parameters: 1(Long), null
2018-06-28 10:30:50 -<==      Total: 1
2018-06-28 10:30:50 -耗时 : 20
2018-06-28 10:30:50 -返回值 : com.bootdo.common.utils.PageUtils@6b4a2236
2018-06-28 10:30:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:52 -请求地址 : http://127.0.0.1:8099/blog/bContent/add
2018-06-28 10:30:52 -HTTP METHOD : GET
2018-06-28 10:30:52 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.add
2018-06-28 10:30:52 -参数 : []
2018-06-28 10:30:52 -耗时 : 0
2018-06-28 10:30:52 -返回值 : blog/bContent/add
2018-06-28 10:30:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:53 -请求地址 : http://127.0.0.1:8099/blog/bContent
2018-06-28 10:30:53 -请求地址 : http://127.0.0.1:8099/blog/bContent/list
2018-06-28 10:30:53 -HTTP METHOD : GET
2018-06-28 10:30:53 -HTTP METHOD : GET
2018-06-28 10:30:53 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.list
2018-06-28 10:30:53 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.bContent
2018-06-28 10:30:53 -参数 : []
2018-06-28 10:30:53 -参数 : [{limit=10, offset=0}]
2018-06-28 10:30:53 -耗时 : 0
2018-06-28 10:30:53 -返回值 : blog/bContent/bContent
2018-06-28 10:30:53 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content order by cid desc limit 0, 10 
2018-06-28 10:30:53 -==> Parameters: 
2018-06-28 10:30:53 -<==      Total: 10
2018-06-28 10:30:53 -==>  Preparing: select count(*) from blog_content 
2018-06-28 10:30:53 -==> Parameters: 
2018-06-28 10:30:53 -<==      Total: 1
2018-06-28 10:30:53 -耗时 : 15
2018-06-28 10:30:53 -返回值 : com.bootdo.common.utils.PageUtils@2cad03b5
2018-06-28 10:30:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:57 -请求地址 : http://127.0.0.1:8099/activiti/process
2018-06-28 10:30:57 -HTTP METHOD : GET
2018-06-28 10:30:57 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.process
2018-06-28 10:30:57 -参数 : []
2018-06-28 10:30:57 -耗时 : 0
2018-06-28 10:30:57 -返回值 : ModelAndView: reference to view with name 'act/process/process'; model is null
2018-06-28 10:30:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:57 -请求地址 : http://127.0.0.1:8099/activiti/process/list
2018-06-28 10:30:57 -HTTP METHOD : GET
2018-06-28 10:30:57 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.list
2018-06-28 10:30:57 -参数 : [0, 10]
2018-06-28 10:30:57 -耗时 : 17
2018-06-28 10:30:57 -返回值 : com.bootdo.common.utils.PageUtils@4897ae4a
2018-06-28 10:30:59 -请求地址 : http://127.0.0.1:8099/activiti/task/todo
2018-06-28 10:30:59 -HTTP METHOD : GET
2018-06-28 10:30:59 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todo
2018-06-28 10:30:59 -参数 : []
2018-06-28 10:30:59 -耗时 : 0
2018-06-28 10:30:59 -返回值 : ModelAndView: reference to view with name 'act/task/todoTask'; model is null
2018-06-28 10:30:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:30:59 -请求地址 : http://127.0.0.1:8099/activiti/task/todoList
2018-06-28 10:30:59 -HTTP METHOD : GET
2018-06-28 10:30:59 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todoList
2018-06-28 10:30:59 -参数 : []
2018-06-28 10:30:59 -请求地址 : http://127.0.0.1:8099/activiti/task/gotoList
2018-06-28 10:30:59 -HTTP METHOD : GET
2018-06-28 10:30:59 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.list
2018-06-28 10:30:59 -参数 : [0, 10]
2018-06-28 10:30:59 -耗时 : 6
2018-06-28 10:30:59 -返回值 : com.bootdo.common.utils.PageUtils@7ddbbff3
2018-06-28 10:30:59 -耗时 : 23
2018-06-28 10:30:59 -返回值 : []
2018-06-28 10:31:00 -请求地址 : http://127.0.0.1:8099/activiti/model
2018-06-28 10:31:00 -HTTP METHOD : GET
2018-06-28 10:31:00 -CLASS_METHOD : com.bootdo.activiti.controller.ModelController.model
2018-06-28 10:31:00 -参数 : []
2018-06-28 10:31:00 -耗时 : 1
2018-06-28 10:31:00 -返回值 : ModelAndView: reference to view with name 'act/model/model'; model is null
2018-06-28 10:31:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:31:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:31:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:31:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:31:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:31:00 -请求地址 : http://127.0.0.1:8099/activiti/model/list
2018-06-28 10:31:00 -HTTP METHOD : GET
2018-06-28 10:31:00 -CLASS_METHOD : com.bootdo.activiti.controller.ModelController.list
2018-06-28 10:31:00 -参数 : [0, 10]
2018-06-28 10:31:00 -耗时 : 11
2018-06-28 10:31:00 -返回值 : com.bootdo.common.utils.PageUtils@6c35378f
2018-06-28 10:41:43 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:29:12 CST 2018]; root of context hierarchy
2018-06-28 10:41:43 -Stopping beans in phase 2147483647
2018-06-28 10:41:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 10:41:43 -Stopping...
2018-06-28 10:41:43 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 10:41:43 -Stopped.
2018-06-28 10:41:43 -Unregistering JMX-exposed beans on shutdown
2018-06-28 10:41:43 -Unregistering JMX-exposed beans
2018-06-28 10:41:43 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 10:41:43 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 10:41:43 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 10:41:43 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 10:41:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 10:41:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 10:41:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 10:41:43 -Shutting down Quartz Scheduler
2018-06-28 10:41:43 -{dataSource-1} closed
2018-06-28 10:41:43 -Disabled session validation scheduler.
2018-06-28 10:41:48 -Starting BootdoApplication on localhost with PID 6748 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 10:41:48 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 10:41:48 -The following profiles are active: dev
2018-06-28 10:41:48 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 10:41:48 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:41:48 CST 2018]; root of context hierarchy
2018-06-28 10:41:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 10:41:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29728fb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:41:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1bcbbe5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:41:50 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:41:50 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:41:50 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 10:41:51 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:41:51 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:41:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:41:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:41:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:41:51 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 10:41:51 -Starting service [Tomcat]
2018-06-28 10:41:51 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 10:41:51 -Initializing Spring embedded WebApplicationContext
2018-06-28 10:41:51 -Root WebApplicationContext: initialization completed in 2865 ms
2018-06-28 10:41:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 10:41:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 10:41:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 10:41:52 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 10:41:52 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 10:41:52 -Filter xssFilter was not registered (disabled)
2018-06-28 10:41:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 10:41:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 10:41:52 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 10:41:52 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 10:41:52 -{dataSource-1} inited
2018-06-28 10:41:54 -ProcessEngine default created
2018-06-28 10:41:55 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:41:48 CST 2018]; root of context hierarchy
2018-06-28 10:41:55 -Using default implementation for ThreadExecutor
2018-06-28 10:41:55 -Job execution threads will use class loader of thread: main
2018-06-28 10:41:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 10:41:55 -Quartz Scheduler v.2.2.1 created.
2018-06-28 10:41:55 -RAMJobStore initialized.
2018-06-28 10:41:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 10:41:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 10:41:55 -Quartz scheduler version: 2.2.1
2018-06-28 10:41:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@71fb1da3
2018-06-28 10:41:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 10:41:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 10:41:56 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 10:41:56 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 10:41:56 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 10:41:56 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 10:41:56 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 10:41:56 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 10:41:56 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 10:41:56 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 10:41:56 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 10:41:56 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 10:41:56 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 10:41:56 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 10:41:56 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 10:41:56 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 10:41:56 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 10:41:56 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 10:41:56 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 10:41:56 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 10:41:56 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 10:41:56 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 10:41:56 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 10:41:56 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 10:41:56 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 10:41:56 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 10:41:56 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 10:41:56 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 10:41:56 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 10:41:56 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 10:41:56 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 10:41:56 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 10:41:56 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 10:41:56 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 10:41:56 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 10:41:56 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 10:41:56 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 10:41:56 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 10:41:56 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 10:41:56 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 10:41:56 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 10:41:56 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 10:41:56 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 10:41:56 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 10:41:56 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 10:41:56 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 10:41:56 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 10:41:56 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 10:41:56 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 10:41:56 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 10:41:56 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 10:41:56 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 10:41:56 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 10:41:56 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 10:41:56 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 10:41:56 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 10:41:56 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 10:41:56 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 10:41:56 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 10:41:56 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 10:41:56 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 10:41:56 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 10:41:56 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 10:41:56 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 10:41:56 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 10:41:56 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 10:41:56 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 10:41:56 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 10:41:56 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 10:41:56 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 10:41:56 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 10:41:56 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 10:41:56 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 10:41:56 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 10:41:56 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 10:41:56 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 10:41:56 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 10:41:56 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 10:41:56 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 10:41:56 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 10:41:56 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 10:41:56 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 10:41:56 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 10:41:56 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 10:41:56 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 10:41:56 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 10:41:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 10:41:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 10:41:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 10:41:56 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 10:41:56 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 10:41:56 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 10:41:56 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 10:41:56 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 10:41:56 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 10:41:56 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 10:41:56 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 10:41:56 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 10:41:56 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 10:41:56 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 10:41:56 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 10:41:56 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 10:41:56 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 10:41:56 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 10:41:56 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 10:41:56 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 10:41:56 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 10:41:56 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 10:41:56 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 10:41:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 10:41:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 10:41:57 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 10:41:57 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:41:48 CST 2018]; root of context hierarchy
2018-06-28 10:41:58 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 10:41:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 10:41:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 10:41:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 10:41:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 10:41:59 -

Using default security password: 25e426ae-cce5-4a16-bbf9-2407d602aa46

2018-06-28 10:41:59 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 10:41:59 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@52a605c3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@13fad0c7, org.springframework.security.web.context.SecurityContextPersistenceFilter@6334c0d8, org.springframework.security.web.header.HeaderWriterFilter@762db992, org.springframework.security.web.csrf.CsrfFilter@639bf405, org.springframework.security.web.authentication.logout.LogoutFilter@43414b88, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48224381, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5aa5b3af, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24fb8317, org.springframework.security.web.session.SessionManagementFilter@5b1cedfd, org.springframework.security.web.access.ExceptionTranslationFilter@542aec6]
2018-06-28 10:42:00 -Registering beans for JMX exposure on startup
2018-06-28 10:42:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 10:42:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 10:42:00 -Starting beans in phase 2147483647
2018-06-28 10:42:00 -Context refreshed
2018-06-28 10:42:00 -Found 1 custom documentation plugin(s)
2018-06-28 10:42:00 -Scanning for api listing references
2018-06-28 10:42:00 -Generating unique operation named: removeUsingPOST_1
2018-06-28 10:42:00 -Generating unique operation named: addUsingGET_1
2018-06-28 10:42:00 -Generating unique operation named: editUsingGET_1
2018-06-28 10:42:00 -Generating unique operation named: listUsingGET_1
2018-06-28 10:42:00 -Generating unique operation named: removeUsingPOST_2
2018-06-28 10:42:00 -Generating unique operation named: removeUsingPOST_3
2018-06-28 10:42:00 -Generating unique operation named: saveUsingPOST_1
2018-06-28 10:42:00 -Generating unique operation named: updateUsingGET_1
2018-06-28 10:42:00 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 10:42:00 -Generating unique operation named: updateUsingPOST_1
2018-06-28 10:42:00 -Generating unique operation named: updateUsingPUT_1
2018-06-28 10:42:00 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 10:42:00 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 10:42:00 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 10:42:00 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 10:42:00 -Generating unique operation named: addUsingGET_2
2018-06-28 10:42:00 -Generating unique operation named: editUsingGET_2
2018-06-28 10:42:00 -Generating unique operation named: listUsingGET_2
2018-06-28 10:42:00 -Generating unique operation named: removeUsingPOST_4
2018-06-28 10:42:00 -Generating unique operation named: removeUsingPOST_5
2018-06-28 10:42:00 -Generating unique operation named: saveUsingPOST_2
2018-06-28 10:42:00 -Generating unique operation named: updateUsingGET_2
2018-06-28 10:42:00 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 10:42:00 -Generating unique operation named: updateUsingPOST_2
2018-06-28 10:42:00 -Generating unique operation named: updateUsingPUT_2
2018-06-28 10:42:00 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 10:42:00 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 10:42:00 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 10:42:00 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 10:42:00 -Generating unique operation named: addUsingGET_3
2018-06-28 10:42:00 -Generating unique operation named: editUsingGET_3
2018-06-28 10:42:01 -Generating unique operation named: listUsingGET_3
2018-06-28 10:42:01 -Generating unique operation named: removeUsingPOST_6
2018-06-28 10:42:01 -Generating unique operation named: removeUsingPOST_7
2018-06-28 10:42:01 -Generating unique operation named: saveUsingPOST_3
2018-06-28 10:42:01 -Generating unique operation named: updateUsingGET_3
2018-06-28 10:42:01 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 10:42:01 -Generating unique operation named: updateUsingPOST_3
2018-06-28 10:42:01 -Generating unique operation named: updateUsingPUT_3
2018-06-28 10:42:01 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 10:42:01 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 10:42:01 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 10:42:01 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 10:42:01 -Generating unique operation named: editUsingGET_4
2018-06-28 10:42:01 -Generating unique operation named: listUsingGET_4
2018-06-28 10:42:01 -Generating unique operation named: updateUsingPOST_4
2018-06-28 10:42:01 -Generating unique operation named: listUsingGET_5
2018-06-28 10:42:01 -Generating unique operation named: removeUsingPOST_8
2018-06-28 10:42:01 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 10:42:01 -Generating unique operation named: addUsingGET_4
2018-06-28 10:42:01 -Generating unique operation named: editUsingGET_5
2018-06-28 10:42:01 -Generating unique operation named: listUsingGET_6
2018-06-28 10:42:01 -Generating unique operation named: removeUsingPOST_9
2018-06-28 10:42:01 -Generating unique operation named: saveUsingPOST_4
2018-06-28 10:42:01 -Generating unique operation named: treeUsingGET_1
2018-06-28 10:42:01 -Generating unique operation named: treeUsingGET_2
2018-06-28 10:42:01 -Generating unique operation named: updateUsingPOST_5
2018-06-28 10:42:01 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 10:42:01 -Generating unique operation named: editUsingGET_6
2018-06-28 10:42:01 -Generating unique operation named: listUsingGET_7
2018-06-28 10:42:01 -Generating unique operation named: addUsingGET_5
2018-06-28 10:42:01 -Generating unique operation named: editUsingGET_7
2018-06-28 10:42:01 -Generating unique operation named: listUsingGET_8
2018-06-28 10:42:01 -Generating unique operation named: removeUsingPOST_10
2018-06-28 10:42:01 -Generating unique operation named: removeUsingPOST_11
2018-06-28 10:42:01 -Generating unique operation named: saveUsingPOST_5
2018-06-28 10:42:01 -Generating unique operation named: updateUsingGET_4
2018-06-28 10:42:01 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 10:42:01 -Generating unique operation named: updateUsingPOST_6
2018-06-28 10:42:01 -Generating unique operation named: updateUsingPUT_4
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 10:42:02 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 10:42:02 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 10:42:02 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 10:42:02 -Generating unique operation named: addUsingGET_6
2018-06-28 10:42:02 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 10:42:02 -Generating unique operation named: deployUsingPOST_1
2018-06-28 10:42:02 -Generating unique operation named: listUsingGET_9
2018-06-28 10:42:02 -Generating unique operation named: removeUsingPOST_12
2018-06-28 10:42:02 -Generating unique operation named: addUsingGET_7
2018-06-28 10:42:02 -Generating unique operation named: editUsingGET_8
2018-06-28 10:42:02 -Generating unique operation named: infoUsingGET_1
2018-06-28 10:42:02 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 10:42:02 -Generating unique operation named: infoUsingPOST_1
2018-06-28 10:42:02 -Generating unique operation named: infoUsingPUT_1
2018-06-28 10:42:02 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 10:42:02 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 10:42:02 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 10:42:02 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 10:42:02 -Generating unique operation named: listUsingGET_10
2018-06-28 10:42:02 -Generating unique operation named: removeUsingPOST_13
2018-06-28 10:42:02 -Generating unique operation named: removeUsingPOST_14
2018-06-28 10:42:02 -Generating unique operation named: saveUsingPOST_6
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPOST_7
2018-06-28 10:42:02 -Generating unique operation named: addUsingGET_8
2018-06-28 10:42:02 -Generating unique operation named: editUsingGET_9
2018-06-28 10:42:02 -Generating unique operation named: listUsingGET_11
2018-06-28 10:42:02 -Generating unique operation named: removeUsingPOST_15
2018-06-28 10:42:02 -Generating unique operation named: removeUsingPOST_16
2018-06-28 10:42:02 -Generating unique operation named: saveUsingPOST_7
2018-06-28 10:42:02 -Generating unique operation named: updateUsingGET_5
2018-06-28 10:42:02 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPOST_8
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPUT_5
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 10:42:02 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 10:42:02 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 10:42:02 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 10:42:02 -Generating unique operation named: addUsingGET_9
2018-06-28 10:42:02 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 10:42:02 -Generating unique operation named: editUsingGET_10
2018-06-28 10:42:02 -Generating unique operation named: listUsingGET_12
2018-06-28 10:42:02 -Generating unique operation named: saveUsingPOST_8
2018-06-28 10:42:02 -Generating unique operation named: saveUsingPOST_9
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPOST_9
2018-06-28 10:42:02 -Generating unique operation named: addUsingGET_10
2018-06-28 10:42:02 -Generating unique operation named: editUsingGET_11
2018-06-28 10:42:02 -Generating unique operation named: listUsingGET_13
2018-06-28 10:42:02 -Generating unique operation named: removeUsingPOST_17
2018-06-28 10:42:02 -Generating unique operation named: removeUsingPOST_18
2018-06-28 10:42:02 -Generating unique operation named: updateUsingGET_6
2018-06-28 10:42:02 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPOST_10
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPUT_6
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 10:42:02 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 10:42:02 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 10:42:02 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 10:42:02 -Generating unique operation named: listUsingGET_14
2018-06-28 10:42:02 -Generating unique operation named: listUsingHEAD_1
2018-06-28 10:42:02 -Generating unique operation named: listUsingPOST_1
2018-06-28 10:42:02 -Generating unique operation named: listUsingPUT_1
2018-06-28 10:42:02 -Generating unique operation named: listUsingPATCH_1
2018-06-28 10:42:02 -Generating unique operation named: listUsingDELETE_1
2018-06-28 10:42:02 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 10:42:02 -Generating unique operation named: listUsingTRACE_1
2018-06-28 10:42:02 -Generating unique operation named: listUsingGET_15
2018-06-28 10:42:02 -Generating unique operation named: addUsingGET_11
2018-06-28 10:42:02 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 10:42:02 -Generating unique operation named: editUsingGET_12
2018-06-28 10:42:02 -Generating unique operation named: listUsingGET_16
2018-06-28 10:42:02 -Generating unique operation named: removeUsingPOST_19
2018-06-28 10:42:02 -Generating unique operation named: saveUsingPOST_10
2018-06-28 10:42:02 -Generating unique operation named: treeUsingGET_3
2018-06-28 10:42:02 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 10:42:02 -Generating unique operation named: updateUsingPOST_11
2018-06-28 10:42:02 -Starting Quartz Scheduler now
2018-06-28 10:42:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 10:42:02 -Starting...
2018-06-28 10:42:02 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 10:42:02 -Started.
2018-06-28 10:42:02 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 10:42:02 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 10:42:02 -Using a shared selector for servlet write/read
2018-06-28 10:42:02 -Tomcat started on port(s): 8099 (http)
2018-06-28 10:42:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 10:42:02 -==> Parameters: 
2018-06-28 10:42:02 -<==      Total: 1
2018-06-28 10:42:02 -Started BootdoApplication in 14.771 seconds (JVM running for 15.375)
2018-06-28 10:42:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 10:42:15 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 10:42:16 -FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2018-06-28 10:42:16 -Enabling session validation scheduler...
2018-06-28 10:42:16 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 10:42:16 -HTTP METHOD : GET
2018-06-28 10:42:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 10:42:16 -参数 : []
2018-06-28 10:42:16 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 10:42:16 -HTTP METHOD : GET
2018-06-28 10:42:16 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 10:42:16 -参数 : [{}]
2018-06-28 10:42:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 10:42:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 10:42:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 10:42:16 -<==      Total: 0
2018-06-28 10:42:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 10:42:16 -==> Parameters: 1(Long)
2018-06-28 10:42:16 -==> Parameters: 1(Long), 0(String)
2018-06-28 10:42:16 -<==      Total: 1
2018-06-28 10:42:16 -耗时 : 36
2018-06-28 10:42:16 -返回值 : com.bootdo.common.utils.PageUtils@2c8c625e
2018-06-28 10:42:16 -<==      Total: 29
2018-06-28 10:42:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 10:42:16 -==> Parameters: 150(Long)
2018-06-28 10:42:16 -<==      Total: 1
2018-06-28 10:42:16 -耗时 : 48
2018-06-28 10:42:16 -返回值 : index_v1
2018-06-28 10:42:16 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 10:42:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 10:42:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 48(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 10:42:16.24(Timestamp)
2018-06-28 10:42:16 -<==    Updates: 1
2018-06-28 10:42:16 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 10:42:16 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 10:42:16 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 10:42:16 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 10:42:16 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 10:42:16 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 10:42:16 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 10:42:16 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 10:42:16 -HTTP METHOD : GET
2018-06-28 10:42:16 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 10:42:16 -参数 : []
2018-06-28 10:42:16 -耗时 : 0
2018-06-28 10:42:16 -返回值 : main
2018-06-28 10:42:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:19 -Subject does not have permission [system:dict:dict]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [system:dict:dict]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$844e4a19.dict(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.dict.controller.DictController.dict()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-06-28 10:42:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:22 -Subject does not have permission [system:file:file]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [system:file:file]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.file.controller.FileController$$EnhancerBySpringCGLIB$$27459b3d.sysFile(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-06-28 10:42:25 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:25 -请求地址 : http://127.0.0.1:8099/system/user/
2018-06-28 10:42:25 -HTTP METHOD : GET
2018-06-28 10:42:25 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.user
2018-06-28 10:42:25 -参数 : [{}]
2018-06-28 10:42:25 -耗时 : 0
2018-06-28 10:42:25 -返回值 : system/user/user
2018-06-28 10:42:25 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:25 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:25 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:25 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:25 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:25 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 10:42:25 -HTTP METHOD : GET
2018-06-28 10:42:25 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 10:42:25 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 10:42:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 10:42:25 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 10:42:25 -<==      Total: 10
2018-06-28 10:42:25 -==>  Preparing: select count(*) from sys_user 
2018-06-28 10:42:25 -==> Parameters: 
2018-06-28 10:42:25 -<==      Total: 1
2018-06-28 10:42:25 -耗时 : 17
2018-06-28 10:42:25 -返回值 : com.bootdo.common.utils.PageUtils@5bfe95be
2018-06-28 10:42:28 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 10:42:28 -HTTP METHOD : GET
2018-06-28 10:42:28 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 10:42:28 -参数 : [{limit=10, offset=0, name=, deptId=j1_1}]
2018-06-28 10:42:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE dept_id = ? order by user_id desc limit ?, ? 
2018-06-28 10:42:28 -==> Parameters: j1_1(String), 0(Integer), 10(Integer)
2018-06-28 10:42:28 -<==      Total: 0
2018-06-28 10:42:28 -==>  Preparing: select count(*) from sys_user WHERE dept_id = ? 
2018-06-28 10:42:28 -==> Parameters: j1_1(String)
2018-06-28 10:42:28 -<==      Total: 1
2018-06-28 10:42:28 -耗时 : 8
2018-06-28 10:42:28 -返回值 : com.bootdo.common.utils.PageUtils@2561d134
2018-06-28 10:42:29 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 10:42:29 -HTTP METHOD : GET
2018-06-28 10:42:29 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 10:42:29 -参数 : [{limit=10, offset=0, name=, deptId=j1_1}]
2018-06-28 10:42:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE dept_id = ? order by user_id desc limit ?, ? 
2018-06-28 10:42:29 -==> Parameters: j1_1(String), 0(Integer), 10(Integer)
2018-06-28 10:42:29 -<==      Total: 0
2018-06-28 10:42:29 -==>  Preparing: select count(*) from sys_user WHERE dept_id = ? 
2018-06-28 10:42:29 -==> Parameters: j1_1(String)
2018-06-28 10:42:29 -<==      Total: 1
2018-06-28 10:42:29 -耗时 : 6
2018-06-28 10:42:29 -返回值 : com.bootdo.common.utils.PageUtils@30125701
2018-06-28 10:42:30 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 10:42:30 -HTTP METHOD : GET
2018-06-28 10:42:30 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 10:42:30 -参数 : [{limit=10, offset=0, name=, deptId=j1_1}]
2018-06-28 10:42:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE dept_id = ? order by user_id desc limit ?, ? 
2018-06-28 10:42:30 -==> Parameters: j1_1(String), 0(Integer), 10(Integer)
2018-06-28 10:42:30 -<==      Total: 0
2018-06-28 10:42:30 -==>  Preparing: select count(*) from sys_user WHERE dept_id = ? 
2018-06-28 10:42:30 -==> Parameters: j1_1(String)
2018-06-28 10:42:30 -<==      Total: 1
2018-06-28 10:42:30 -耗时 : 5
2018-06-28 10:42:30 -返回值 : com.bootdo.common.utils.PageUtils@16b3bfab
2018-06-28 10:42:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:33 -Subject does not have permission [system:menu:menu]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [system:menu:menu]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.menu.controller.MenuController$$EnhancerBySpringCGLIB$$d24076da.menu(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-06-28 10:42:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:42:34 -Subject does not have permission [system:dept:dept]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [system:dept:dept]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dept.controller.DeptController$$EnhancerBySpringCGLIB$$5b0989b3.dept(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-06-28 10:42:57 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 10]
2018-06-28 10:43:43 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:43:43 -Subject does not have permission [system:quartzjob:quartzjob]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [system:quartzjob:quartzjob]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.quartzjob.controller.QuartzJobController$$EnhancerBySpringCGLIB$$b9a3145d.QuartzJobController(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-06-28 10:43:45 -请求地址 : http://127.0.0.1:8099/system/generator
2018-06-28 10:43:45 -HTTP METHOD : GET
2018-06-28 10:43:45 -CLASS_METHOD : com.bootdo.system.generator.controller.GeneratorController.generator
2018-06-28 10:43:45 -参数 : []
2018-06-28 10:43:45 -耗时 : 1
2018-06-28 10:43:45 -返回值 : system/generator/list
2018-06-28 10:43:45 -[THYMELEAF][http-nio-8099-exec-8] Exception processing template "system/generator/list": Error resolving template "system/generator/list", template might not exist or might not be accessible by any of the configured Template Resolvers
2018-06-28 10:43:45 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "system/generator/list", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "system/generator/list", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 10:44:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:44:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:44:04 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 10:44:04 -HTTP METHOD : GET
2018-06-28 10:44:04 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 10:44:04 -参数 : []
2018-06-28 10:44:04 -耗时 : 0
2018-06-28 10:44:04 -返回值 : system/regexp/regexp
2018-06-28 10:44:04 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 10:44:04 -HTTP METHOD : GET
2018-06-28 10:44:04 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 10:44:04 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 10:44:04 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 10:44:04 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 10:44:04 -<==      Total: 10
2018-06-28 10:44:04 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 10:44:04 -==> Parameters: 
2018-06-28 10:44:04 -<==      Total: 1
2018-06-28 10:44:04 -耗时 : 11
2018-06-28 10:44:04 -返回值 : com.bootdo.common.utils.PageUtils@1f1057bc
2018-06-28 10:44:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:44:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:44:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:44:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:44:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:49:04 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 10:49:04 -HTTP METHOD : GET
2018-06-28 10:49:04 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 10:49:04 -参数 : [{}]
2018-06-28 10:49:04 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 10:49:04 -HTTP METHOD : GET
2018-06-28 10:49:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 10:49:04 -参数 : []
2018-06-28 10:49:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 10:49:04 -==> Parameters: 1(Long)
2018-06-28 10:49:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 10:49:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 10:49:04 -<==      Total: 0
2018-06-28 10:49:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 10:49:04 -==> Parameters: 1(Long), 0(String)
2018-06-28 10:49:04 -<==      Total: 1
2018-06-28 10:49:04 -耗时 : 31
2018-06-28 10:49:04 -返回值 : com.bootdo.common.utils.PageUtils@675f9a00
2018-06-28 10:49:04 -<==      Total: 29
2018-06-28 10:49:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 10:49:04 -==> Parameters: 150(Long)
2018-06-28 10:49:04 -<==      Total: 1
2018-06-28 10:49:04 -耗时 : 81
2018-06-28 10:49:04 -返回值 : index_v1
2018-06-28 10:49:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 10:49:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 10:49:04.887(Timestamp)
2018-06-28 10:49:04 -<==    Updates: 1
2018-06-28 10:49:05 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 10:49:05 -HTTP METHOD : GET
2018-06-28 10:49:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 10:49:05 -参数 : []
2018-06-28 10:49:05 -耗时 : 3
2018-06-28 10:49:05 -返回值 : main
2018-06-28 10:49:05 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 10:49:05 -HTTP METHOD : GET
2018-06-28 10:49:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 10:49:05 -参数 : []
2018-06-28 10:49:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 10:49:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 10:49:05 -<==      Total: 0
2018-06-28 10:49:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 10:49:05 -==> Parameters: 1(Long), 0(String)
2018-06-28 10:49:05 -<==      Total: 1
2018-06-28 10:49:05 -耗时 : 30
2018-06-28 10:49:05 -返回值 : com.bootdo.common.utils.PageUtils@797c8d3c
2018-06-28 10:49:05 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 10:49:05 -HTTP METHOD : GET
2018-06-28 10:49:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 10:49:05 -参数 : []
2018-06-28 10:49:05 -耗时 : 5
2018-06-28 10:49:05 -返回值 : main
2018-06-28 10:49:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:49:09 -Subject does not have permission [system:dept:dept]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [system:dept:dept]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dept.controller.DeptController$$EnhancerBySpringCGLIB$$5b0989b3.dept(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-06-28 10:51:10 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 10:51:10 -HTTP METHOD : GET
2018-06-28 10:51:10 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 10:51:10 -参数 : [{}]
2018-06-28 10:51:10 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 10:51:10 -HTTP METHOD : GET
2018-06-28 10:51:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 10:51:10 -参数 : []
2018-06-28 10:51:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 10:51:10 -==> Parameters: 1(Long)
2018-06-28 10:51:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 10:51:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 10:51:10 -<==      Total: 0
2018-06-28 10:51:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 10:51:10 -==> Parameters: 1(Long), 0(String)
2018-06-28 10:51:10 -<==      Total: 1
2018-06-28 10:51:10 -耗时 : 19
2018-06-28 10:51:10 -返回值 : com.bootdo.common.utils.PageUtils@30aaa9e3
2018-06-28 10:51:10 -<==      Total: 29
2018-06-28 10:51:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 10:51:10 -==> Parameters: 150(Long)
2018-06-28 10:51:10 -<==      Total: 1
2018-06-28 10:51:10 -耗时 : 76
2018-06-28 10:51:10 -返回值 : index_v1
2018-06-28 10:51:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 10:51:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 77(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 10:51:10.716(Timestamp)
2018-06-28 10:51:10 -<==    Updates: 1
2018-06-28 10:51:11 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 10:51:11 -HTTP METHOD : GET
2018-06-28 10:51:11 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 10:51:11 -参数 : []
2018-06-28 10:51:11 -耗时 : 3
2018-06-28 10:51:11 -返回值 : main
2018-06-28 10:51:11 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 10:51:11 -HTTP METHOD : GET
2018-06-28 10:51:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 10:51:11 -参数 : []
2018-06-28 10:51:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 10:51:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 10:51:11 -<==      Total: 0
2018-06-28 10:51:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 10:51:11 -==> Parameters: 1(Long), 0(String)
2018-06-28 10:51:11 -<==      Total: 1
2018-06-28 10:51:11 -耗时 : 32
2018-06-28 10:51:11 -返回值 : com.bootdo.common.utils.PageUtils@f7d4fcf
2018-06-28 10:51:11 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 10:51:11 -HTTP METHOD : GET
2018-06-28 10:51:11 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 10:51:11 -参数 : []
2018-06-28 10:51:11 -耗时 : 4
2018-06-28 10:51:11 -返回值 : main
2018-06-28 10:51:13 -从redis中删除 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:13 -请求地址 : http://127.0.0.1:8099/
2018-06-28 10:51:13 -HTTP METHOD : GET
2018-06-28 10:51:13 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.welcome
2018-06-28 10:51:13 -参数 : [{}]
2018-06-28 10:51:13 -耗时 : 2
2018-06-28 10:51:13 -返回值 : redirect:/blog
2018-06-28 10:51:13 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 10:51:13 -HTTP METHOD : GET
2018-06-28 10:51:13 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 10:51:13 -参数 : []
2018-06-28 10:51:13 -耗时 : 2
2018-06-28 10:51:13 -返回值 : blog/index/main
2018-06-28 10:51:14 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 10:51:14 -HTTP METHOD : GET
2018-06-28 10:51:14 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 10:51:14 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 10:51:14 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 10:51:14 -==> Parameters: article(String)
2018-06-28 10:51:14 -<==      Total: 10
2018-06-28 10:51:14 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 10:51:14 -==> Parameters: article(String)
2018-06-28 10:51:14 -<==      Total: 1
2018-06-28 10:51:14 -耗时 : 260
2018-06-28 10:51:14 -返回值 : com.bootdo.common.utils.PageUtils@755b6d41
2018-06-28 10:51:15 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 10:51:15 -HTTP METHOD : GET
2018-06-28 10:51:15 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 10:51:15 -参数 : []
2018-06-28 10:51:15 -耗时 : 3
2018-06-28 10:51:15 -返回值 : login
2018-06-28 10:51:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 10:51:17 -==> Parameters: admin(String)
2018-06-28 10:51:17 -<==      Total: 1
2018-06-28 10:51:17 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 10:51:17 -HTTP METHOD : POST
2018-06-28 10:51:17 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 10:51:17 -参数 : [admin, 111111]
2018-06-28 10:51:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 10:51:17 -==> Parameters: admin(String)
2018-06-28 10:51:17 -<==      Total: 1
2018-06-28 10:51:17 -耗时 : 70
2018-06-28 10:51:17 -返回值 : {msg=操作成功, code=0}
2018-06-28 10:51:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 10:51:17 -==> Parameters: 1(Long), admin(String), 登录(String), 72(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 10:51:17.328(Timestamp)
2018-06-28 10:51:17 -<==    Updates: 1
2018-06-28 10:51:17 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 10:51:17 -HTTP METHOD : GET
2018-06-28 10:51:17 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 10:51:17 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 10:51:17 -参数 : [{}]
2018-06-28 10:51:17 -HTTP METHOD : GET
2018-06-28 10:51:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 10:51:17 -参数 : []
2018-06-28 10:51:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 10:51:17 -==> Parameters: 1(Long)
2018-06-28 10:51:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 10:51:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 10:51:17 -<==      Total: 0
2018-06-28 10:51:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 10:51:17 -==> Parameters: 1(Long), 0(String)
2018-06-28 10:51:17 -<==      Total: 1
2018-06-28 10:51:17 -耗时 : 28
2018-06-28 10:51:17 -返回值 : com.bootdo.common.utils.PageUtils@2950adc7
2018-06-28 10:51:17 -<==      Total: 29
2018-06-28 10:51:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 10:51:17 -==> Parameters: 150(Long)
2018-06-28 10:51:17 -<==      Total: 1
2018-06-28 10:51:17 -耗时 : 100
2018-06-28 10:51:17 -返回值 : index_v1
2018-06-28 10:51:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 10:51:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 101(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 10:51:17.552(Timestamp)
2018-06-28 10:51:17 -<==    Updates: 1
2018-06-28 10:51:17 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 10:51:17 -HTTP METHOD : GET
2018-06-28 10:51:17 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 10:51:17 -参数 : []
2018-06-28 10:51:17 -耗时 : 4
2018-06-28 10:51:17 -返回值 : main
2018-06-28 10:51:18 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 10:51:18 -HTTP METHOD : GET
2018-06-28 10:51:18 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 10:51:18 -参数 : []
2018-06-28 10:51:18 -耗时 : 3
2018-06-28 10:51:18 -返回值 : main
2018-06-28 10:51:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 10:51:20 -==> Parameters: 1(Long)
2018-06-28 10:51:20 -<==      Total: 51
2018-06-28 10:51:20 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:20 -Subject does not have permission [sys:user:user]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:user:user]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.UserController$$EnhancerBySpringCGLIB$$618cf262.user(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-06-28 10:51:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:39 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 10:51:39 -HTTP METHOD : GET
2018-06-28 10:51:39 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 10:51:39 -参数 : [{}]
2018-06-28 10:51:39 -耗时 : 2
2018-06-28 10:51:39 -返回值 : system/menu/menu
2018-06-28 10:51:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:40 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 10:51:40 -HTTP METHOD : GET
2018-06-28 10:51:40 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 10:51:40 -参数 : [{sort=order_num}]
2018-06-28 10:51:40 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 10:51:40 -==> Parameters: 
2018-06-28 10:51:40 -<==      Total: 66
2018-06-28 10:51:40 -耗时 : 108
2018-06-28 10:51:40 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='systemmenu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 10:51:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:45 -请求地址 : http://127.0.0.1:8099/system/dept
2018-06-28 10:51:45 -HTTP METHOD : GET
2018-06-28 10:51:45 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.dept
2018-06-28 10:51:45 -参数 : []
2018-06-28 10:51:45 -耗时 : 2
2018-06-28 10:51:45 -返回值 : system/dept/dept
2018-06-28 10:51:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 10:51:46 -请求地址 : http://127.0.0.1:8099/system/dept/list
2018-06-28 10:51:46 -HTTP METHOD : GET
2018-06-28 10:51:46 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.list
2018-06-28 10:51:46 -参数 : []
2018-06-28 10:51:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 10:51:46 -==> Parameters: 
2018-06-28 10:51:46 -<==      Total: 10
2018-06-28 10:51:46 -耗时 : 144
2018-06-28 10:51:46 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-06-28 10:52:41 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:41:48 CST 2018]; root of context hierarchy
2018-06-28 10:52:41 -Stopping beans in phase 2147483647
2018-06-28 10:52:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 10:52:41 -Stopping...
2018-06-28 10:52:41 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 10:52:41 -Stopped.
2018-06-28 10:52:41 -Unregistering JMX-exposed beans on shutdown
2018-06-28 10:52:41 -Unregistering JMX-exposed beans
2018-06-28 10:52:41 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 10:52:41 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 10:52:41 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 10:52:41 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 10:52:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 10:52:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 10:52:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 10:52:41 -Shutting down Quartz Scheduler
2018-06-28 10:52:41 -{dataSource-1} closed
2018-06-28 10:52:41 -Disabled session validation scheduler.
2018-06-28 10:52:44 -Starting BootdoApplication on localhost with PID 6764 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 10:52:44 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 10:52:44 -The following profiles are active: dev
2018-06-28 10:52:44 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 10:52:44 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:52:44 CST 2018]; root of context hierarchy
2018-06-28 10:52:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 10:52:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7d523340] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:52:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6fab61e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:52:46 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:52:46 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:52:46 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 10:52:46 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:52:46 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:52:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:52:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:52:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 10:52:47 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 10:52:47 -Starting service [Tomcat]
2018-06-28 10:52:47 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 10:52:47 -Initializing Spring embedded WebApplicationContext
2018-06-28 10:52:47 -Root WebApplicationContext: initialization completed in 2877 ms
2018-06-28 10:52:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 10:52:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 10:52:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 10:52:48 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 10:52:48 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 10:52:48 -Filter xssFilter was not registered (disabled)
2018-06-28 10:52:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 10:52:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 10:52:48 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 10:52:48 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 10:52:48 -{dataSource-1} inited
2018-06-28 10:52:49 -ProcessEngine default created
2018-06-28 10:52:50 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 10:52:44 CST 2018]; root of context hierarchy
2018-06-28 10:52:51 -Using default implementation for ThreadExecutor
2018-06-28 10:52:51 -Job execution threads will use class loader of thread: main
2018-06-28 10:52:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 10:52:51 -Quartz Scheduler v.2.2.1 created.
2018-06-28 10:52:51 -RAMJobStore initialized.
2018-06-28 10:52:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 10:52:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 10:52:51 -Quartz scheduler version: 2.2.1
2018-06-28 10:52:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a917017
2018-06-28 10:52:51 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 10:52:51 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 11:04:49 -Starting BootdoApplication on localhost with PID 6783 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 11:04:49 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 11:04:49 -The following profiles are active: dev
2018-06-28 11:04:49 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 11:04:49 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:04:49 CST 2018]; root of context hierarchy
2018-06-28 11:04:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 11:04:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca90f4da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:04:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bcea2381] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:04:51 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:04:51 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:04:51 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 11:04:51 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:04:51 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:04:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:04:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:04:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:04:52 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 11:04:52 -Starting service [Tomcat]
2018-06-28 11:04:52 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 11:04:52 -Initializing Spring embedded WebApplicationContext
2018-06-28 11:04:52 -Root WebApplicationContext: initialization completed in 3058 ms
2018-06-28 11:04:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 11:04:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 11:04:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 11:04:52 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 11:04:52 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 11:04:52 -Filter xssFilter was not registered (disabled)
2018-06-28 11:04:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 11:04:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 11:04:52 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 11:04:52 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 11:04:53 -{dataSource-1} inited
2018-06-28 11:04:54 -ProcessEngine default created
2018-06-28 11:04:55 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:04:49 CST 2018]; root of context hierarchy
2018-06-28 11:04:55 -Using default implementation for ThreadExecutor
2018-06-28 11:04:55 -Job execution threads will use class loader of thread: main
2018-06-28 11:04:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 11:04:55 -Quartz Scheduler v.2.2.1 created.
2018-06-28 11:04:55 -RAMJobStore initialized.
2018-06-28 11:04:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 11:04:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 11:04:55 -Quartz scheduler version: 2.2.1
2018-06-28 11:04:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7cd25bf5
2018-06-28 11:04:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 11:04:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 11:04:57 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 11:04:57 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 11:04:57 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 11:04:57 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 11:04:57 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 11:04:57 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 11:04:57 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 11:04:57 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 11:04:57 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 11:04:57 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 11:04:57 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 11:04:57 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 11:04:57 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:04:57 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 11:04:57 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 11:04:57 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 11:04:57 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 11:04:57 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 11:04:57 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 11:04:57 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 11:04:57 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 11:04:57 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 11:04:57 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 11:04:57 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 11:04:57 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 11:04:57 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:04:57 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 11:04:57 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 11:04:57 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 11:04:57 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 11:04:57 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 11:04:57 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 11:04:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:04:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:04:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 11:04:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 11:04:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 11:04:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 11:04:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 11:04:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 11:04:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 11:04:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 11:04:57 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 11:04:57 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 11:04:57 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 11:04:57 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 11:04:57 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 11:04:57 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 11:04:57 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 11:04:57 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 11:04:57 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 11:04:57 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 11:04:57 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 11:04:57 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 11:04:57 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 11:04:57 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 11:04:57 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 11:04:57 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 11:04:57 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 11:04:57 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 11:04:57 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 11:04:57 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 11:04:57 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 11:04:57 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 11:04:57 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 11:04:57 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 11:04:57 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 11:04:57 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 11:04:57 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 11:04:57 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 11:04:57 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 11:04:57 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 11:04:57 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 11:04:57 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 11:04:57 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 11:04:57 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 11:04:57 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 11:04:57 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 11:04:57 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 11:04:57 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 11:04:57 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 11:04:57 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 11:04:57 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 11:04:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 11:04:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 11:04:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 11:04:57 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 11:04:57 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 11:04:57 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 11:04:57 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 11:04:57 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 11:04:57 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:04:57 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 11:04:57 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 11:04:57 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 11:04:57 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 11:04:57 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 11:04:57 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 11:04:57 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:04:57 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 11:04:57 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 11:04:57 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 11:04:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 11:04:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 11:04:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 11:04:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 11:04:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 11:04:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 11:04:58 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 11:04:58 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:04:49 CST 2018]; root of context hierarchy
2018-06-28 11:04:58 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:04:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:04:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:04:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 11:04:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:05:00 -

Using default security password: 9388f6d7-5d14-4d78-94a5-1a5b208c14b5

2018-06-28 11:05:00 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 11:05:00 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@df04d12, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@757f47f0, org.springframework.security.web.context.SecurityContextPersistenceFilter@151f1734, org.springframework.security.web.header.HeaderWriterFilter@4779df3d, org.springframework.security.web.csrf.CsrfFilter@2cdb53d6, org.springframework.security.web.authentication.logout.LogoutFilter@7d0e43d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c8ed958, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75f446df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7ff7e353, org.springframework.security.web.session.SessionManagementFilter@4c941d19, org.springframework.security.web.access.ExceptionTranslationFilter@63fde7ca]
2018-06-28 11:05:01 -Registering beans for JMX exposure on startup
2018-06-28 11:05:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 11:05:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 11:05:01 -Starting beans in phase 2147483647
2018-06-28 11:05:01 -Context refreshed
2018-06-28 11:05:01 -Found 1 custom documentation plugin(s)
2018-06-28 11:05:01 -Scanning for api listing references
2018-06-28 11:05:01 -Generating unique operation named: removeUsingPOST_1
2018-06-28 11:05:01 -Generating unique operation named: addUsingGET_1
2018-06-28 11:05:01 -Generating unique operation named: editUsingGET_1
2018-06-28 11:05:01 -Generating unique operation named: listUsingGET_1
2018-06-28 11:05:01 -Generating unique operation named: removeUsingPOST_2
2018-06-28 11:05:01 -Generating unique operation named: removeUsingPOST_3
2018-06-28 11:05:01 -Generating unique operation named: saveUsingPOST_1
2018-06-28 11:05:01 -Generating unique operation named: updateUsingGET_1
2018-06-28 11:05:01 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 11:05:01 -Generating unique operation named: updateUsingPOST_1
2018-06-28 11:05:01 -Generating unique operation named: updateUsingPUT_1
2018-06-28 11:05:01 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 11:05:01 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 11:05:01 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 11:05:01 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 11:05:01 -Generating unique operation named: addUsingGET_2
2018-06-28 11:05:01 -Generating unique operation named: editUsingGET_2
2018-06-28 11:05:01 -Generating unique operation named: listUsingGET_2
2018-06-28 11:05:01 -Generating unique operation named: removeUsingPOST_4
2018-06-28 11:05:01 -Generating unique operation named: removeUsingPOST_5
2018-06-28 11:05:01 -Generating unique operation named: saveUsingPOST_2
2018-06-28 11:05:01 -Generating unique operation named: updateUsingGET_2
2018-06-28 11:05:02 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPOST_2
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPUT_2
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 11:05:02 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 11:05:02 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 11:05:02 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 11:05:02 -Generating unique operation named: addUsingGET_3
2018-06-28 11:05:02 -Generating unique operation named: editUsingGET_3
2018-06-28 11:05:02 -Generating unique operation named: listUsingGET_3
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_6
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_7
2018-06-28 11:05:02 -Generating unique operation named: saveUsingPOST_3
2018-06-28 11:05:02 -Generating unique operation named: updateUsingGET_3
2018-06-28 11:05:02 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPOST_3
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPUT_3
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 11:05:02 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 11:05:02 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 11:05:02 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 11:05:02 -Generating unique operation named: editUsingGET_4
2018-06-28 11:05:02 -Generating unique operation named: listUsingGET_4
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPOST_4
2018-06-28 11:05:02 -Generating unique operation named: listUsingGET_5
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_8
2018-06-28 11:05:02 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 11:05:02 -Generating unique operation named: addUsingGET_4
2018-06-28 11:05:02 -Generating unique operation named: editUsingGET_5
2018-06-28 11:05:02 -Generating unique operation named: listUsingGET_6
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_9
2018-06-28 11:05:02 -Generating unique operation named: saveUsingPOST_4
2018-06-28 11:05:02 -Generating unique operation named: treeUsingGET_1
2018-06-28 11:05:02 -Generating unique operation named: treeUsingGET_2
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPOST_5
2018-06-28 11:05:02 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 11:05:02 -Generating unique operation named: editUsingGET_6
2018-06-28 11:05:02 -Generating unique operation named: listUsingGET_7
2018-06-28 11:05:02 -Generating unique operation named: addUsingGET_5
2018-06-28 11:05:02 -Generating unique operation named: editUsingGET_7
2018-06-28 11:05:02 -Generating unique operation named: listUsingGET_8
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_10
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_11
2018-06-28 11:05:02 -Generating unique operation named: saveUsingPOST_5
2018-06-28 11:05:02 -Generating unique operation named: updateUsingGET_4
2018-06-28 11:05:02 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPOST_6
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPUT_4
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 11:05:02 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 11:05:02 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 11:05:02 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 11:05:02 -Generating unique operation named: addUsingGET_6
2018-06-28 11:05:02 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 11:05:02 -Generating unique operation named: deployUsingPOST_1
2018-06-28 11:05:02 -Generating unique operation named: listUsingGET_9
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_12
2018-06-28 11:05:02 -Generating unique operation named: addUsingGET_7
2018-06-28 11:05:02 -Generating unique operation named: editUsingGET_8
2018-06-28 11:05:02 -Generating unique operation named: infoUsingGET_1
2018-06-28 11:05:02 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 11:05:02 -Generating unique operation named: infoUsingPOST_1
2018-06-28 11:05:02 -Generating unique operation named: infoUsingPUT_1
2018-06-28 11:05:02 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 11:05:02 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 11:05:02 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 11:05:02 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 11:05:02 -Generating unique operation named: listUsingGET_10
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_13
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_14
2018-06-28 11:05:02 -Generating unique operation named: saveUsingPOST_6
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPOST_7
2018-06-28 11:05:02 -Generating unique operation named: addUsingGET_8
2018-06-28 11:05:02 -Generating unique operation named: editUsingGET_9
2018-06-28 11:05:02 -Generating unique operation named: listUsingGET_11
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_15
2018-06-28 11:05:02 -Generating unique operation named: removeUsingPOST_16
2018-06-28 11:05:02 -Generating unique operation named: saveUsingPOST_7
2018-06-28 11:05:02 -Generating unique operation named: updateUsingGET_5
2018-06-28 11:05:02 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPOST_8
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPUT_5
2018-06-28 11:05:02 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 11:05:02 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 11:05:02 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 11:05:02 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 11:05:02 -Generating unique operation named: addUsingGET_9
2018-06-28 11:05:03 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 11:05:03 -Generating unique operation named: editUsingGET_10
2018-06-28 11:05:03 -Generating unique operation named: listUsingGET_12
2018-06-28 11:05:03 -Generating unique operation named: saveUsingPOST_8
2018-06-28 11:05:03 -Generating unique operation named: saveUsingPOST_9
2018-06-28 11:05:03 -Generating unique operation named: updateUsingPOST_9
2018-06-28 11:05:03 -Generating unique operation named: addUsingGET_10
2018-06-28 11:05:03 -Generating unique operation named: editUsingGET_11
2018-06-28 11:05:03 -Generating unique operation named: listUsingGET_13
2018-06-28 11:05:03 -Generating unique operation named: removeUsingPOST_17
2018-06-28 11:05:03 -Generating unique operation named: removeUsingPOST_18
2018-06-28 11:05:03 -Generating unique operation named: updateUsingGET_6
2018-06-28 11:05:03 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 11:05:03 -Generating unique operation named: updateUsingPOST_10
2018-06-28 11:05:03 -Generating unique operation named: updateUsingPUT_6
2018-06-28 11:05:03 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 11:05:03 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 11:05:03 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 11:05:03 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 11:05:03 -Generating unique operation named: listUsingGET_14
2018-06-28 11:05:03 -Generating unique operation named: listUsingHEAD_1
2018-06-28 11:05:03 -Generating unique operation named: listUsingPOST_1
2018-06-28 11:05:03 -Generating unique operation named: listUsingPUT_1
2018-06-28 11:05:03 -Generating unique operation named: listUsingPATCH_1
2018-06-28 11:05:03 -Generating unique operation named: listUsingDELETE_1
2018-06-28 11:05:03 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 11:05:03 -Generating unique operation named: listUsingTRACE_1
2018-06-28 11:05:03 -Generating unique operation named: listUsingGET_15
2018-06-28 11:05:03 -Generating unique operation named: addUsingGET_11
2018-06-28 11:05:03 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 11:05:03 -Generating unique operation named: editUsingGET_12
2018-06-28 11:05:03 -Generating unique operation named: listUsingGET_16
2018-06-28 11:05:03 -Generating unique operation named: removeUsingPOST_19
2018-06-28 11:05:03 -Generating unique operation named: saveUsingPOST_10
2018-06-28 11:05:03 -Generating unique operation named: treeUsingGET_3
2018-06-28 11:05:03 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 11:05:03 -Generating unique operation named: updateUsingPOST_11
2018-06-28 11:05:03 -Starting Quartz Scheduler now
2018-06-28 11:05:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 11:05:03 -Starting...
2018-06-28 11:05:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 11:05:03 -Started.
2018-06-28 11:05:03 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 11:05:03 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 11:05:03 -Using a shared selector for servlet write/read
2018-06-28 11:05:03 -Tomcat started on port(s): 8099 (http)
2018-06-28 11:05:03 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 11:05:03 -==> Parameters: 
2018-06-28 11:05:03 -<==      Total: 1
2018-06-28 11:05:03 -Started BootdoApplication in 15.08 seconds (JVM running for 15.77)
2018-06-28 11:05:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-06-28 11:06:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 11:06:05 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 11:06:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-06-28 11:06:05 -Enabling session validation scheduler...
2018-06-28 11:06:05 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 11:06:05 -HTTP METHOD : GET
2018-06-28 11:06:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 11:06:05 -参数 : [{}]
2018-06-28 11:06:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 11:06:05 -==> Parameters: 1(Long)
2018-06-28 11:06:05 -<==      Total: 29
2018-06-28 11:06:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 11:06:05 -==> Parameters: 150(Long)
2018-06-28 11:06:05 -<==      Total: 1
2018-06-28 11:06:05 -耗时 : 35
2018-06-28 11:06:05 -返回值 : index_v1
2018-06-28 11:06:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 11:06:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:06:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 11:06:05.991(Timestamp)
2018-06-28 11:06:06 -<==    Updates: 1
2018-06-28 11:06:06 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 11:06:06 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 11:06:06 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 11:06:06 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 11:06:06 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 11:06:06 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 11:06:06 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 11:06:06 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:06:06 -HTTP METHOD : GET
2018-06-28 11:06:06 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:06:06 -参数 : []
2018-06-28 11:06:06 -耗时 : 1
2018-06-28 11:06:06 -返回值 : main
2018-06-28 11:06:06 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 11:06:06 -HTTP METHOD : GET
2018-06-28 11:06:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 11:06:06 -参数 : []
2018-06-28 11:06:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 11:06:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 11:06:06 -<==      Total: 0
2018-06-28 11:06:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 11:06:06 -==> Parameters: 1(Long), 0(String)
2018-06-28 11:06:06 -<==      Total: 1
2018-06-28 11:06:06 -耗时 : 17
2018-06-28 11:06:06 -返回值 : com.bootdo.common.utils.PageUtils@261433f2
2018-06-28 11:06:06 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:06:06 -HTTP METHOD : GET
2018-06-28 11:06:06 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:06:06 -参数 : []
2018-06-28 11:06:06 -耗时 : 0
2018-06-28 11:06:06 -返回值 : main
2018-06-28 11:06:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:10 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 11:06:10 -HTTP METHOD : GET
2018-06-28 11:06:10 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 11:06:10 -参数 : []
2018-06-28 11:06:10 -耗时 : 0
2018-06-28 11:06:10 -返回值 : system/dict/dict
2018-06-28 11:06:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:11 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 11:06:11 -HTTP METHOD : GET
2018-06-28 11:06:11 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 11:06:11 -参数 : []
2018-06-28 11:06:11 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 11:06:11 -HTTP METHOD : GET
2018-06-28 11:06:11 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 11:06:11 -参数 : []
2018-06-28 11:06:11 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 11:06:11 -==> Parameters: 
2018-06-28 11:06:11 -<==      Total: 31
2018-06-28 11:06:11 -耗时 : 9
2018-06-28 11:06:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:06:11 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 11:06:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 11:06:11.128(Timestamp)
2018-06-28 11:06:11 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$29622560.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 11:06:11 -<==    Updates: 1
2018-06-28 11:06:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:11 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 11:06:11 -HTTP METHOD : GET
2018-06-28 11:06:11 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 11:06:11 -参数 : [{limit=10, offset=0}]
2018-06-28 11:06:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 11:06:11 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:06:11 -<==      Total: 10
2018-06-28 11:06:11 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 11:06:11 -==> Parameters: 
2018-06-28 11:06:11 -<==      Total: 1
2018-06-28 11:06:11 -耗时 : 10
2018-06-28 11:06:11 -返回值 : com.bootdo.common.utils.PageUtils@49120ca0
2018-06-28 11:06:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:21 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 11:06:21 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 11:06:21 -HTTP METHOD : GET
2018-06-28 11:06:21 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 11:06:21 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 11:06:21 -HTTP METHOD : GET
2018-06-28 11:06:21 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 11:06:21 -参数 : []
2018-06-28 11:06:21 -耗时 : 1
2018-06-28 11:06:21 -返回值 : system/regexp/regexp
2018-06-28 11:06:21 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 11:06:21 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:06:21 -<==      Total: 10
2018-06-28 11:06:21 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 11:06:21 -==> Parameters: 
2018-06-28 11:06:21 -<==      Total: 1
2018-06-28 11:06:21 -耗时 : 11
2018-06-28 11:06:21 -返回值 : com.bootdo.common.utils.PageUtils@1a729e8a
2018-06-28 11:06:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:23 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:23 -请求地址 : http://127.0.0.1:8099/system/file
2018-06-28 11:06:23 -HTTP METHOD : GET
2018-06-28 11:06:23 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.sysFile
2018-06-28 11:06:23 -参数 : [{}]
2018-06-28 11:06:23 -耗时 : 1
2018-06-28 11:06:23 -返回值 : system/file/file
2018-06-28 11:06:23 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:23 -请求地址 : http://127.0.0.1:8099/system/file/list
2018-06-28 11:06:23 -HTTP METHOD : GET
2018-06-28 11:06:23 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.list
2018-06-28 11:06:23 -参数 : [{limit=12, offset=0, type=}]
2018-06-28 11:06:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-06-28 11:06:23 -==> Parameters: 0(Integer), 12(Integer)
2018-06-28 11:06:23 -<==      Total: 11
2018-06-28 11:06:23 -==>  Preparing: select count(*) from sys_file 
2018-06-28 11:06:23 -==> Parameters: 
2018-06-28 11:06:23 -<==      Total: 1
2018-06-28 11:06:23 -耗时 : 8
2018-06-28 11:06:23 -返回值 : com.bootdo.common.utils.PageUtils@519fa191
2018-06-28 11:06:30 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:30 -Subject does not have permission [sys:user:user]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:user:user]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.UserController$$EnhancerBySpringCGLIB$$2e1c5ab1.user(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2018-06-28 11:06:31 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:31 -请求地址 : http://127.0.0.1:8099/system/role
2018-06-28 11:06:31 -HTTP METHOD : GET
2018-06-28 11:06:31 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 11:06:31 -参数 : []
2018-06-28 11:06:31 -耗时 : 0
2018-06-28 11:06:31 -返回值 : system/role/role
2018-06-28 11:06:31 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:31 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:31 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:31 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:32 -请求地址 : http://127.0.0.1:8099/system/role/list
2018-06-28 11:06:32 -HTTP METHOD : GET
2018-06-28 11:06:32 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.list
2018-06-28 11:06:32 -参数 : []
2018-06-28 11:06:32 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 11:06:32 -==> Parameters: 
2018-06-28 11:06:32 -<==      Total: 2
2018-06-28 11:06:32 -耗时 : 7
2018-06-28 11:06:32 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-06-28 11:06:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:35 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 11:06:35 -HTTP METHOD : GET
2018-06-28 11:06:35 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 11:06:35 -参数 : [{}]
2018-06-28 11:06:35 -耗时 : 1
2018-06-28 11:06:35 -返回值 : system/menu/menu
2018-06-28 11:06:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:35 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 11:06:35 -HTTP METHOD : GET
2018-06-28 11:06:35 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 11:06:35 -参数 : [{sort=order_num}]
2018-06-28 11:06:35 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 11:06:35 -==> Parameters: 
2018-06-28 11:06:35 -<==      Total: 66
2018-06-28 11:06:35 -耗时 : 21
2018-06-28 11:06:35 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='systemmenu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 11:06:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:41 -请求地址 : http://127.0.0.1:8099/system/dept
2018-06-28 11:06:41 -HTTP METHOD : GET
2018-06-28 11:06:41 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.dept
2018-06-28 11:06:41 -参数 : []
2018-06-28 11:06:41 -耗时 : 0
2018-06-28 11:06:41 -返回值 : system/dept/dept
2018-06-28 11:06:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:06:41 -请求地址 : http://127.0.0.1:8099/system/dept/list
2018-06-28 11:06:41 -HTTP METHOD : GET
2018-06-28 11:06:41 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.list
2018-06-28 11:06:41 -参数 : []
2018-06-28 11:06:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 11:06:41 -==> Parameters: 
2018-06-28 11:06:41 -<==      Total: 10
2018-06-28 11:06:41 -耗时 : 7
2018-06-28 11:06:41 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-06-28 11:06:59 -请求地址 : http://127.0.0.1:8099/system/generator
2018-06-28 11:06:59 -HTTP METHOD : GET
2018-06-28 11:06:59 -CLASS_METHOD : com.bootdo.system.generator.controller.GeneratorController.generator
2018-06-28 11:06:59 -参数 : []
2018-06-28 11:06:59 -耗时 : 0
2018-06-28 11:06:59 -返回值 : system/generator/list
2018-06-28 11:06:59 -[THYMELEAF][http-nio-8099-exec-2] Exception processing template "system/generator/list": Error resolving template "system/generator/list", template might not exist or might not be accessible by any of the configured Template Resolvers
2018-06-28 11:06:59 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "system/generator/list", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "system/generator/list", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 11:07:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:07:02 -请求地址 : http://127.0.0.1:8099/system/quartzjob
2018-06-28 11:07:02 -HTTP METHOD : GET
2018-06-28 11:07:02 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController
2018-06-28 11:07:02 -参数 : []
2018-06-28 11:07:02 -耗时 : 0
2018-06-28 11:07:02 -返回值 : system/quartzjob/quartzjob
2018-06-28 11:07:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:07:02 -请求地址 : http://127.0.0.1:8099/system/quartzjob/list
2018-06-28 11:07:02 -HTTP METHOD : GET
2018-06-28 11:07:02 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.list
2018-06-28 11:07:02 -参数 : [{limit=10, offset=0}]
2018-06-28 11:07:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2018-06-28 11:07:02 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:07:02 -<==      Total: 1
2018-06-28 11:07:02 -==>  Preparing: select count(*) from sys_task 
2018-06-28 11:07:02 -==> Parameters: 
2018-06-28 11:07:02 -<==      Total: 1
2018-06-28 11:07:02 -耗时 : 12
2018-06-28 11:07:02 -返回值 : com.bootdo.common.utils.PageUtils@2e3f6489
2018-06-28 11:10:23 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:04:49 CST 2018]; root of context hierarchy
2018-06-28 11:10:23 -Stopping beans in phase 2147483647
2018-06-28 11:10:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 11:10:23 -Stopping...
2018-06-28 11:10:23 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 11:10:23 -Stopped.
2018-06-28 11:10:23 -Unregistering JMX-exposed beans on shutdown
2018-06-28 11:10:23 -Unregistering JMX-exposed beans
2018-06-28 11:10:23 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 11:10:23 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 11:10:23 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 11:10:23 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 11:10:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 11:10:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 11:10:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 11:10:23 -Shutting down Quartz Scheduler
2018-06-28 11:10:23 -{dataSource-1} closed
2018-06-28 11:10:23 -Disabled session validation scheduler.
2018-06-28 11:10:26 -Starting BootdoApplication on localhost with PID 6853 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 11:10:26 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 11:10:26 -The following profiles are active: dev
2018-06-28 11:10:27 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:10:27 CST 2018]; root of context hierarchy
2018-06-28 11:10:27 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 11:10:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 11:10:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$68ad8ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:10:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5b06be9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:10:29 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:10:29 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:10:29 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 11:10:29 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:10:29 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:10:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:10:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:10:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:10:29 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 11:10:29 -Starting service [Tomcat]
2018-06-28 11:10:29 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 11:10:30 -Initializing Spring embedded WebApplicationContext
2018-06-28 11:10:30 -Root WebApplicationContext: initialization completed in 2864 ms
2018-06-28 11:10:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 11:10:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 11:10:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 11:10:30 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 11:10:30 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 11:10:30 -Filter xssFilter was not registered (disabled)
2018-06-28 11:10:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 11:10:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 11:10:30 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 11:10:30 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 11:10:31 -{dataSource-1} inited
2018-06-28 11:10:32 -ProcessEngine default created
2018-06-28 11:10:33 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:10:27 CST 2018]; root of context hierarchy
2018-06-28 11:10:33 -Using default implementation for ThreadExecutor
2018-06-28 11:10:33 -Job execution threads will use class loader of thread: main
2018-06-28 11:10:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 11:10:33 -Quartz Scheduler v.2.2.1 created.
2018-06-28 11:10:33 -RAMJobStore initialized.
2018-06-28 11:10:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 11:10:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 11:10:33 -Quartz scheduler version: 2.2.1
2018-06-28 11:10:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@61246109
2018-06-28 11:10:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 11:10:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 11:10:35 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 11:10:35 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 11:10:35 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 11:10:35 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 11:10:35 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 11:10:35 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 11:10:35 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 11:10:35 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 11:10:35 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 11:10:35 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 11:10:35 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 11:10:35 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 11:10:35 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:10:35 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 11:10:35 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 11:10:35 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 11:10:35 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 11:10:35 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 11:10:35 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 11:10:35 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 11:10:35 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 11:10:35 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 11:10:35 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 11:10:35 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 11:10:35 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 11:10:35 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:10:35 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 11:10:35 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 11:10:35 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 11:10:35 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 11:10:35 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 11:10:35 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 11:10:35 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:10:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:10:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 11:10:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 11:10:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 11:10:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 11:10:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 11:10:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 11:10:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 11:10:35 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 11:10:35 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 11:10:35 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 11:10:35 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 11:10:35 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 11:10:35 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 11:10:35 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 11:10:35 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 11:10:35 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 11:10:35 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 11:10:35 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 11:10:35 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 11:10:35 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 11:10:35 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 11:10:35 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 11:10:35 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 11:10:35 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 11:10:35 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 11:10:35 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 11:10:35 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 11:10:35 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 11:10:35 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 11:10:35 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 11:10:35 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 11:10:35 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 11:10:35 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 11:10:35 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 11:10:35 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 11:10:35 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 11:10:35 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 11:10:35 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 11:10:35 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 11:10:35 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 11:10:35 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 11:10:35 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 11:10:35 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 11:10:35 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 11:10:35 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 11:10:35 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 11:10:35 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 11:10:35 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 11:10:35 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 11:10:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 11:10:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 11:10:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 11:10:35 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 11:10:35 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 11:10:35 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 11:10:35 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 11:10:35 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 11:10:35 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:10:35 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 11:10:35 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 11:10:35 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 11:10:35 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 11:10:35 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 11:10:35 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 11:10:35 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 11:10:35 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 11:10:35 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 11:10:35 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 11:10:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 11:10:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 11:10:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 11:10:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 11:10:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 11:10:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 11:10:35 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 11:10:36 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:10:27 CST 2018]; root of context hierarchy
2018-06-28 11:10:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:10:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:10:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:10:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 11:10:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:10:37 -

Using default security password: 36a1944f-4ded-4e51-a321-765e077af56b

2018-06-28 11:10:38 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 11:10:38 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3d8b9dee, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45cddfd3, org.springframework.security.web.context.SecurityContextPersistenceFilter@34525143, org.springframework.security.web.header.HeaderWriterFilter@4131261, org.springframework.security.web.csrf.CsrfFilter@3549c070, org.springframework.security.web.authentication.logout.LogoutFilter@5608e254, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1529d534, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a7c8cb7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40dc2ade, org.springframework.security.web.session.SessionManagementFilter@1002f859, org.springframework.security.web.access.ExceptionTranslationFilter@48224381]
2018-06-28 11:10:38 -Registering beans for JMX exposure on startup
2018-06-28 11:10:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 11:10:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 11:10:38 -Starting beans in phase 2147483647
2018-06-28 11:10:38 -Context refreshed
2018-06-28 11:10:38 -Found 1 custom documentation plugin(s)
2018-06-28 11:10:38 -Scanning for api listing references
2018-06-28 11:10:39 -Generating unique operation named: removeUsingPOST_1
2018-06-28 11:10:39 -Generating unique operation named: addUsingGET_1
2018-06-28 11:10:39 -Generating unique operation named: editUsingGET_1
2018-06-28 11:10:39 -Generating unique operation named: listUsingGET_1
2018-06-28 11:10:39 -Generating unique operation named: removeUsingPOST_2
2018-06-28 11:10:39 -Generating unique operation named: removeUsingPOST_3
2018-06-28 11:10:39 -Generating unique operation named: saveUsingPOST_1
2018-06-28 11:10:39 -Generating unique operation named: updateUsingGET_1
2018-06-28 11:10:39 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPOST_1
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPUT_1
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 11:10:39 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 11:10:39 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 11:10:39 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 11:10:39 -Generating unique operation named: addUsingGET_2
2018-06-28 11:10:39 -Generating unique operation named: editUsingGET_2
2018-06-28 11:10:39 -Generating unique operation named: listUsingGET_2
2018-06-28 11:10:39 -Generating unique operation named: removeUsingPOST_4
2018-06-28 11:10:39 -Generating unique operation named: removeUsingPOST_5
2018-06-28 11:10:39 -Generating unique operation named: saveUsingPOST_2
2018-06-28 11:10:39 -Generating unique operation named: updateUsingGET_2
2018-06-28 11:10:39 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPOST_2
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPUT_2
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 11:10:39 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 11:10:39 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 11:10:39 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 11:10:39 -Generating unique operation named: addUsingGET_3
2018-06-28 11:10:39 -Generating unique operation named: editUsingGET_3
2018-06-28 11:10:39 -Generating unique operation named: listUsingGET_3
2018-06-28 11:10:39 -Generating unique operation named: removeUsingPOST_6
2018-06-28 11:10:39 -Generating unique operation named: removeUsingPOST_7
2018-06-28 11:10:39 -Generating unique operation named: saveUsingPOST_3
2018-06-28 11:10:39 -Generating unique operation named: updateUsingGET_3
2018-06-28 11:10:39 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPOST_3
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPUT_3
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 11:10:39 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 11:10:39 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 11:10:39 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 11:10:39 -Generating unique operation named: editUsingGET_4
2018-06-28 11:10:39 -Generating unique operation named: listUsingGET_4
2018-06-28 11:10:39 -Generating unique operation named: updateUsingPOST_4
2018-06-28 11:10:39 -Generating unique operation named: listUsingGET_5
2018-06-28 11:10:39 -Generating unique operation named: removeUsingPOST_8
2018-06-28 11:10:39 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 11:10:39 -Generating unique operation named: addUsingGET_4
2018-06-28 11:10:39 -Generating unique operation named: editUsingGET_5
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_6
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_9
2018-06-28 11:10:40 -Generating unique operation named: saveUsingPOST_4
2018-06-28 11:10:40 -Generating unique operation named: treeUsingGET_1
2018-06-28 11:10:40 -Generating unique operation named: treeUsingGET_2
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPOST_5
2018-06-28 11:10:40 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 11:10:40 -Generating unique operation named: editUsingGET_6
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_7
2018-06-28 11:10:40 -Generating unique operation named: addUsingGET_5
2018-06-28 11:10:40 -Generating unique operation named: editUsingGET_7
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_8
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_10
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_11
2018-06-28 11:10:40 -Generating unique operation named: saveUsingPOST_5
2018-06-28 11:10:40 -Generating unique operation named: updateUsingGET_4
2018-06-28 11:10:40 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPOST_6
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPUT_4
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 11:10:40 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 11:10:40 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 11:10:40 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 11:10:40 -Generating unique operation named: addUsingGET_6
2018-06-28 11:10:40 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 11:10:40 -Generating unique operation named: deployUsingPOST_1
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_9
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_12
2018-06-28 11:10:40 -Generating unique operation named: addUsingGET_7
2018-06-28 11:10:40 -Generating unique operation named: editUsingGET_8
2018-06-28 11:10:40 -Generating unique operation named: infoUsingGET_1
2018-06-28 11:10:40 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 11:10:40 -Generating unique operation named: infoUsingPOST_1
2018-06-28 11:10:40 -Generating unique operation named: infoUsingPUT_1
2018-06-28 11:10:40 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 11:10:40 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 11:10:40 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 11:10:40 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_10
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_13
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_14
2018-06-28 11:10:40 -Generating unique operation named: saveUsingPOST_6
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPOST_7
2018-06-28 11:10:40 -Generating unique operation named: addUsingGET_8
2018-06-28 11:10:40 -Generating unique operation named: editUsingGET_9
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_11
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_15
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_16
2018-06-28 11:10:40 -Generating unique operation named: saveUsingPOST_7
2018-06-28 11:10:40 -Generating unique operation named: updateUsingGET_5
2018-06-28 11:10:40 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPOST_8
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPUT_5
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 11:10:40 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 11:10:40 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 11:10:40 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 11:10:40 -Generating unique operation named: addUsingGET_9
2018-06-28 11:10:40 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 11:10:40 -Generating unique operation named: editUsingGET_10
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_12
2018-06-28 11:10:40 -Generating unique operation named: saveUsingPOST_8
2018-06-28 11:10:40 -Generating unique operation named: saveUsingPOST_9
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPOST_9
2018-06-28 11:10:40 -Generating unique operation named: addUsingGET_10
2018-06-28 11:10:40 -Generating unique operation named: editUsingGET_11
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_13
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_17
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_18
2018-06-28 11:10:40 -Generating unique operation named: updateUsingGET_6
2018-06-28 11:10:40 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPOST_10
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPUT_6
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 11:10:40 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 11:10:40 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 11:10:40 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_14
2018-06-28 11:10:40 -Generating unique operation named: listUsingHEAD_1
2018-06-28 11:10:40 -Generating unique operation named: listUsingPOST_1
2018-06-28 11:10:40 -Generating unique operation named: listUsingPUT_1
2018-06-28 11:10:40 -Generating unique operation named: listUsingPATCH_1
2018-06-28 11:10:40 -Generating unique operation named: listUsingDELETE_1
2018-06-28 11:10:40 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 11:10:40 -Generating unique operation named: listUsingTRACE_1
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_15
2018-06-28 11:10:40 -Generating unique operation named: addUsingGET_11
2018-06-28 11:10:40 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 11:10:40 -Generating unique operation named: editUsingGET_12
2018-06-28 11:10:40 -Generating unique operation named: listUsingGET_16
2018-06-28 11:10:40 -Generating unique operation named: removeUsingPOST_19
2018-06-28 11:10:40 -Generating unique operation named: saveUsingPOST_10
2018-06-28 11:10:40 -Generating unique operation named: treeUsingGET_3
2018-06-28 11:10:40 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 11:10:40 -Generating unique operation named: updateUsingPOST_11
2018-06-28 11:10:40 -Starting Quartz Scheduler now
2018-06-28 11:10:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 11:10:40 -Starting...
2018-06-28 11:10:40 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 11:10:40 -Started.
2018-06-28 11:10:40 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 11:10:40 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 11:10:40 -Using a shared selector for servlet write/read
2018-06-28 11:10:40 -Tomcat started on port(s): 8099 (http)
2018-06-28 11:10:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 11:10:41 -==> Parameters: 
2018-06-28 11:10:41 -<==      Total: 1
2018-06-28 11:10:41 -Started BootdoApplication in 14.713 seconds (JVM running for 15.372)
2018-06-28 11:11:35 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-06-28 11:11:44 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 11:11:44 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 11:11:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-06-28 11:11:44 -Enabling session validation scheduler...
2018-06-28 11:11:44 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 11:11:44 -HTTP METHOD : GET
2018-06-28 11:11:44 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 11:11:44 -参数 : [{}]
2018-06-28 11:11:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 11:11:44 -==> Parameters: 1(Long)
2018-06-28 11:11:44 -<==      Total: 29
2018-06-28 11:11:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 11:11:44 -==> Parameters: 150(Long)
2018-06-28 11:11:44 -<==      Total: 1
2018-06-28 11:11:44 -耗时 : 36
2018-06-28 11:11:44 -返回值 : index_v1
2018-06-28 11:11:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 11:11:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:11:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 11:11:44.225(Timestamp)
2018-06-28 11:11:44 -<==    Updates: 1
2018-06-28 11:11:44 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 11:11:44 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 11:11:44 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 11:11:44 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 11:11:44 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 11:11:44 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 11:11:44 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 11:11:44 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 11:11:44 -HTTP METHOD : GET
2018-06-28 11:11:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 11:11:44 -参数 : []
2018-06-28 11:11:44 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:11:44 -HTTP METHOD : GET
2018-06-28 11:11:44 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:11:44 -参数 : []
2018-06-28 11:11:44 -耗时 : 1
2018-06-28 11:11:44 -返回值 : main
2018-06-28 11:11:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 11:11:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 11:11:44 -<==      Total: 0
2018-06-28 11:11:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 11:11:44 -==> Parameters: 1(Long), 0(String)
2018-06-28 11:11:44 -<==      Total: 1
2018-06-28 11:11:44 -耗时 : 14
2018-06-28 11:11:44 -返回值 : com.bootdo.common.utils.PageUtils@584a2c25
2018-06-28 11:11:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:47 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 11:11:47 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 11:11:47 -HTTP METHOD : GET
2018-06-28 11:11:47 -HTTP METHOD : GET
2018-06-28 11:11:47 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 11:11:47 -参数 : []
2018-06-28 11:11:47 -耗时 : 1
2018-06-28 11:11:47 -返回值 : system/regexp/regexp
2018-06-28 11:11:47 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 11:11:47 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 11:11:47 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 11:11:47 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:11:47 -<==      Total: 10
2018-06-28 11:11:47 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 11:11:47 -==> Parameters: 
2018-06-28 11:11:47 -<==      Total: 1
2018-06-28 11:11:47 -耗时 : 11
2018-06-28 11:11:47 -返回值 : com.bootdo.common.utils.PageUtils@223ff281
2018-06-28 11:11:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:48 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 11:11:48 -HTTP METHOD : GET
2018-06-28 11:11:48 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 11:11:48 -参数 : []
2018-06-28 11:11:48 -耗时 : 0
2018-06-28 11:11:48 -返回值 : system/dict/dict
2018-06-28 11:11:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:48 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 11:11:48 -HTTP METHOD : GET
2018-06-28 11:11:48 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 11:11:48 -参数 : []
2018-06-28 11:11:48 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 11:11:48 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 11:11:48 -HTTP METHOD : GET
2018-06-28 11:11:48 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 11:11:48 -参数 : []
2018-06-28 11:11:48 -==> Parameters: 
2018-06-28 11:11:48 -<==      Total: 31
2018-06-28 11:11:48 -耗时 : 12
2018-06-28 11:11:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:11:48 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 11:11:48 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 11:11:48.558(Timestamp)
2018-06-28 11:11:48 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$188c6ab4.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 11:11:48 -<==    Updates: 1
2018-06-28 11:11:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:48 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 11:11:48 -HTTP METHOD : GET
2018-06-28 11:11:48 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 11:11:48 -参数 : [{limit=10, offset=0}]
2018-06-28 11:11:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 11:11:48 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:11:48 -<==      Total: 10
2018-06-28 11:11:48 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 11:11:48 -==> Parameters: 
2018-06-28 11:11:48 -<==      Total: 1
2018-06-28 11:11:48 -耗时 : 11
2018-06-28 11:11:48 -返回值 : com.bootdo.common.utils.PageUtils@57b30a6f
2018-06-28 11:11:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:50 -请求地址 : http://127.0.0.1:8099/system/file
2018-06-28 11:11:50 -HTTP METHOD : GET
2018-06-28 11:11:50 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.sysFile
2018-06-28 11:11:50 -参数 : [{}]
2018-06-28 11:11:50 -耗时 : 0
2018-06-28 11:11:50 -返回值 : system/file/file
2018-06-28 11:11:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:50 -请求地址 : http://127.0.0.1:8099/system/file/list
2018-06-28 11:11:50 -HTTP METHOD : GET
2018-06-28 11:11:50 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.list
2018-06-28 11:11:50 -参数 : [{limit=12, offset=0, type=}]
2018-06-28 11:11:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-06-28 11:11:50 -==> Parameters: 0(Integer), 12(Integer)
2018-06-28 11:11:50 -<==      Total: 11
2018-06-28 11:11:50 -==>  Preparing: select count(*) from sys_file 
2018-06-28 11:11:50 -==> Parameters: 
2018-06-28 11:11:50 -<==      Total: 1
2018-06-28 11:11:50 -耗时 : 12
2018-06-28 11:11:50 -返回值 : com.bootdo.common.utils.PageUtils@61ac7e4a
2018-06-28 11:11:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:53 -请求地址 : http://127.0.0.1:8099/system/user/
2018-06-28 11:11:53 -HTTP METHOD : GET
2018-06-28 11:11:53 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.user
2018-06-28 11:11:53 -参数 : [{}]
2018-06-28 11:11:53 -耗时 : 0
2018-06-28 11:11:53 -返回值 : system/user/user
2018-06-28 11:11:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:53 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 11:11:53 -HTTP METHOD : GET
2018-06-28 11:11:53 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 11:11:53 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 11:11:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 11:11:53 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:11:53 -<==      Total: 10
2018-06-28 11:11:53 -==>  Preparing: select count(*) from sys_user 
2018-06-28 11:11:53 -==> Parameters: 
2018-06-28 11:11:53 -<==      Total: 1
2018-06-28 11:11:53 -耗时 : 17
2018-06-28 11:11:53 -返回值 : com.bootdo.common.utils.PageUtils@1a6201d9
2018-06-28 11:11:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:56 -请求地址 : http://127.0.0.1:8099/system/role
2018-06-28 11:11:56 -HTTP METHOD : GET
2018-06-28 11:11:56 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 11:11:56 -参数 : []
2018-06-28 11:11:56 -耗时 : 0
2018-06-28 11:11:56 -返回值 : system/role/role
2018-06-28 11:11:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:56 -请求地址 : http://127.0.0.1:8099/system/role/list
2018-06-28 11:11:56 -HTTP METHOD : GET
2018-06-28 11:11:56 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.list
2018-06-28 11:11:56 -参数 : []
2018-06-28 11:11:56 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 11:11:56 -==> Parameters: 
2018-06-28 11:11:56 -<==      Total: 2
2018-06-28 11:11:56 -耗时 : 8
2018-06-28 11:11:56 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-06-28 11:11:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:58 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 11:11:58 -HTTP METHOD : GET
2018-06-28 11:11:58 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 11:11:58 -参数 : [{}]
2018-06-28 11:11:58 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 11:11:58 -耗时 : 1
2018-06-28 11:11:58 -返回值 : system/menu/menu
2018-06-28 11:11:58 -HTTP METHOD : GET
2018-06-28 11:11:58 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 11:11:58 -参数 : [{sort=order_num}]
2018-06-28 11:11:58 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 11:11:58 -==> Parameters: 
2018-06-28 11:11:59 -<==      Total: 66
2018-06-28 11:11:59 -耗时 : 21
2018-06-28 11:11:59 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='systemmenu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 11:11:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:11:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:13:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:13:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:13:33 -请求地址 : http://127.0.0.1:8099/system/dept/list
2018-06-28 11:13:33 -请求地址 : http://127.0.0.1:8099/system/dept
2018-06-28 11:13:33 -HTTP METHOD : GET
2018-06-28 11:13:33 -HTTP METHOD : GET
2018-06-28 11:13:33 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.list
2018-06-28 11:13:33 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.dept
2018-06-28 11:13:33 -参数 : []
2018-06-28 11:13:33 -参数 : []
2018-06-28 11:13:33 -耗时 : 0
2018-06-28 11:13:33 -返回值 : system/dept/dept
2018-06-28 11:13:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 11:13:33 -==> Parameters: 
2018-06-28 11:13:33 -<==      Total: 10
2018-06-28 11:13:33 -耗时 : 7
2018-06-28 11:13:33 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-06-28 11:13:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:13:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:13:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:13:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:13:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:13:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:17:58 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:10:27 CST 2018]; root of context hierarchy
2018-06-28 11:17:58 -Stopping beans in phase 2147483647
2018-06-28 11:17:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 11:17:58 -Stopping...
2018-06-28 11:17:58 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 11:17:58 -Stopped.
2018-06-28 11:17:58 -Unregistering JMX-exposed beans on shutdown
2018-06-28 11:17:58 -Unregistering JMX-exposed beans
2018-06-28 11:17:58 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 11:17:58 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 11:17:58 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 11:17:58 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 11:17:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 11:17:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 11:17:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 11:17:58 -Shutting down Quartz Scheduler
2018-06-28 11:17:58 -{dataSource-1} closed
2018-06-28 11:17:58 -Disabled session validation scheduler.
2018-06-28 11:18:00 -Starting BootdoApplication on localhost with PID 6861 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 11:18:00 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 11:18:00 -The following profiles are active: dev
2018-06-28 11:18:00 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 11:18:00 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:18:00 CST 2018]; root of context hierarchy
2018-06-28 11:18:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 11:18:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f84bdba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:18:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$41ddec61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:18:03 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:18:03 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:18:03 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 11:18:03 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:18:03 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:18:03 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:18:03 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:18:03 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:18:03 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 11:18:03 -Starting service [Tomcat]
2018-06-28 11:18:03 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 11:18:03 -Initializing Spring embedded WebApplicationContext
2018-06-28 11:18:03 -Root WebApplicationContext: initialization completed in 2855 ms
2018-06-28 11:18:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 11:18:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 11:18:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 11:18:04 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 11:18:04 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 11:18:04 -Filter xssFilter was not registered (disabled)
2018-06-28 11:18:04 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 11:18:04 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 11:18:04 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 11:18:04 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 11:18:04 -{dataSource-1} inited
2018-06-28 11:18:06 -ProcessEngine default created
2018-06-28 11:18:07 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:18:00 CST 2018]; root of context hierarchy
2018-06-28 11:18:07 -Using default implementation for ThreadExecutor
2018-06-28 11:18:07 -Job execution threads will use class loader of thread: main
2018-06-28 11:18:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 11:18:07 -Quartz Scheduler v.2.2.1 created.
2018-06-28 11:18:07 -RAMJobStore initialized.
2018-06-28 11:18:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 11:18:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 11:18:07 -Quartz scheduler version: 2.2.1
2018-06-28 11:18:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6fd97fd1
2018-06-28 11:18:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 11:18:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 11:18:08 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 11:18:08 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 11:18:08 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 11:18:08 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 11:18:08 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 11:18:08 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 11:18:08 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 11:18:08 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 11:18:08 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 11:18:08 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 11:18:08 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 11:18:08 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 11:18:08 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 11:18:08 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 11:18:08 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 11:18:08 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 11:18:08 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 11:18:08 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:18:08 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 11:18:08 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 11:18:08 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 11:18:08 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 11:18:08 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 11:18:08 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:08 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 11:18:08 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 11:18:08 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 11:18:08 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 11:18:08 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 11:18:08 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 11:18:08 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 11:18:08 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 11:18:08 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 11:18:08 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:18:08 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 11:18:08 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:08 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 11:18:08 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:08 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 11:18:08 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 11:18:08 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 11:18:08 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 11:18:08 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:08 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 11:18:08 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:08 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 11:18:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:18:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:18:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 11:18:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 11:18:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 11:18:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 11:18:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 11:18:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 11:18:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 11:18:09 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 11:18:09 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 11:18:09 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 11:18:09 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 11:18:09 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 11:18:09 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 11:18:09 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 11:18:09 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 11:18:09 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 11:18:09 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 11:18:09 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 11:18:09 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:09 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 11:18:09 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 11:18:09 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 11:18:09 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 11:18:09 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 11:18:09 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 11:18:09 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 11:18:09 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 11:18:09 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 11:18:09 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 11:18:09 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 11:18:09 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 11:18:09 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:09 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 11:18:09 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 11:18:09 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:09 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 11:18:09 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 11:18:09 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 11:18:09 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 11:18:09 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 11:18:09 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:09 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 11:18:09 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 11:18:09 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:09 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 11:18:09 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 11:18:09 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 11:18:09 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 11:18:09 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 11:18:09 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 11:18:09 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 11:18:09 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 11:18:09 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:09 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 11:18:09 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 11:18:09 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 11:18:09 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 11:18:09 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 11:18:09 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 11:18:09 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 11:18:09 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 11:18:09 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 11:18:09 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 11:18:09 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 11:18:09 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 11:18:09 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 11:18:09 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 11:18:09 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 11:18:09 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 11:18:09 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:09 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 11:18:09 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 11:18:09 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 11:18:09 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 11:18:09 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 11:18:09 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 11:18:09 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 11:18:09 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 11:18:09 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 11:18:09 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 11:18:09 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 11:18:09 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 11:18:09 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 11:18:09 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 11:18:09 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 11:18:09 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 11:18:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 11:18:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 11:18:09 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 11:18:10 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:18:00 CST 2018]; root of context hierarchy
2018-06-28 11:18:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:18:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:18:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:18:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 11:18:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 11:18:11 -

Using default security password: 7bcb446f-48cd-45fd-9827-3c6307d5f2e1

2018-06-28 11:18:11 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 11:18:11 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@438a65a7, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@543c887, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a6409ec, org.springframework.security.web.header.HeaderWriterFilter@7be86438, org.springframework.security.web.csrf.CsrfFilter@1dae9e61, org.springframework.security.web.authentication.logout.LogoutFilter@1e4b9592, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@32b8992e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c941d19, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75f446df, org.springframework.security.web.session.SessionManagementFilter@77604a86, org.springframework.security.web.access.ExceptionTranslationFilter@b4c89b6]
2018-06-28 11:18:12 -Registering beans for JMX exposure on startup
2018-06-28 11:18:12 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 11:18:12 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 11:18:12 -Starting beans in phase 2147483647
2018-06-28 11:18:12 -Context refreshed
2018-06-28 11:18:12 -Found 1 custom documentation plugin(s)
2018-06-28 11:18:12 -Scanning for api listing references
2018-06-28 11:18:12 -Generating unique operation named: removeUsingPOST_1
2018-06-28 11:18:12 -Generating unique operation named: addUsingGET_1
2018-06-28 11:18:12 -Generating unique operation named: editUsingGET_1
2018-06-28 11:18:12 -Generating unique operation named: listUsingGET_1
2018-06-28 11:18:12 -Generating unique operation named: removeUsingPOST_2
2018-06-28 11:18:12 -Generating unique operation named: removeUsingPOST_3
2018-06-28 11:18:12 -Generating unique operation named: saveUsingPOST_1
2018-06-28 11:18:12 -Generating unique operation named: updateUsingGET_1
2018-06-28 11:18:12 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 11:18:12 -Generating unique operation named: updateUsingPOST_1
2018-06-28 11:18:12 -Generating unique operation named: updateUsingPUT_1
2018-06-28 11:18:12 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 11:18:12 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 11:18:12 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 11:18:12 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 11:18:12 -Generating unique operation named: addUsingGET_2
2018-06-28 11:18:12 -Generating unique operation named: editUsingGET_2
2018-06-28 11:18:12 -Generating unique operation named: listUsingGET_2
2018-06-28 11:18:12 -Generating unique operation named: removeUsingPOST_4
2018-06-28 11:18:12 -Generating unique operation named: removeUsingPOST_5
2018-06-28 11:18:12 -Generating unique operation named: saveUsingPOST_2
2018-06-28 11:18:12 -Generating unique operation named: updateUsingGET_2
2018-06-28 11:18:12 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 11:18:12 -Generating unique operation named: updateUsingPOST_2
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPUT_2
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 11:18:13 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 11:18:13 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 11:18:13 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 11:18:13 -Generating unique operation named: addUsingGET_3
2018-06-28 11:18:13 -Generating unique operation named: editUsingGET_3
2018-06-28 11:18:13 -Generating unique operation named: listUsingGET_3
2018-06-28 11:18:13 -Generating unique operation named: removeUsingPOST_6
2018-06-28 11:18:13 -Generating unique operation named: removeUsingPOST_7
2018-06-28 11:18:13 -Generating unique operation named: saveUsingPOST_3
2018-06-28 11:18:13 -Generating unique operation named: updateUsingGET_3
2018-06-28 11:18:13 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPOST_3
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPUT_3
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 11:18:13 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 11:18:13 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 11:18:13 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 11:18:13 -Generating unique operation named: editUsingGET_4
2018-06-28 11:18:13 -Generating unique operation named: listUsingGET_4
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPOST_4
2018-06-28 11:18:13 -Generating unique operation named: listUsingGET_5
2018-06-28 11:18:13 -Generating unique operation named: removeUsingPOST_8
2018-06-28 11:18:13 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 11:18:13 -Generating unique operation named: addUsingGET_4
2018-06-28 11:18:13 -Generating unique operation named: editUsingGET_5
2018-06-28 11:18:13 -Generating unique operation named: listUsingGET_6
2018-06-28 11:18:13 -Generating unique operation named: removeUsingPOST_9
2018-06-28 11:18:13 -Generating unique operation named: saveUsingPOST_4
2018-06-28 11:18:13 -Generating unique operation named: treeUsingGET_1
2018-06-28 11:18:13 -Generating unique operation named: treeUsingGET_2
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPOST_5
2018-06-28 11:18:13 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 11:18:13 -Generating unique operation named: editUsingGET_6
2018-06-28 11:18:13 -Generating unique operation named: listUsingGET_7
2018-06-28 11:18:13 -Generating unique operation named: addUsingGET_5
2018-06-28 11:18:13 -Generating unique operation named: editUsingGET_7
2018-06-28 11:18:13 -Generating unique operation named: listUsingGET_8
2018-06-28 11:18:13 -Generating unique operation named: removeUsingPOST_10
2018-06-28 11:18:13 -Generating unique operation named: removeUsingPOST_11
2018-06-28 11:18:13 -Generating unique operation named: saveUsingPOST_5
2018-06-28 11:18:13 -Generating unique operation named: updateUsingGET_4
2018-06-28 11:18:13 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPOST_6
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPUT_4
2018-06-28 11:18:13 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 11:18:13 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 11:18:13 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 11:18:13 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 11:18:13 -Generating unique operation named: addUsingGET_6
2018-06-28 11:18:13 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 11:18:14 -Generating unique operation named: deployUsingPOST_1
2018-06-28 11:18:14 -Generating unique operation named: listUsingGET_9
2018-06-28 11:18:14 -Generating unique operation named: removeUsingPOST_12
2018-06-28 11:18:14 -Generating unique operation named: addUsingGET_7
2018-06-28 11:18:14 -Generating unique operation named: editUsingGET_8
2018-06-28 11:18:14 -Generating unique operation named: infoUsingGET_1
2018-06-28 11:18:14 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 11:18:14 -Generating unique operation named: infoUsingPOST_1
2018-06-28 11:18:14 -Generating unique operation named: infoUsingPUT_1
2018-06-28 11:18:14 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 11:18:14 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 11:18:14 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 11:18:14 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 11:18:14 -Generating unique operation named: listUsingGET_10
2018-06-28 11:18:14 -Generating unique operation named: removeUsingPOST_13
2018-06-28 11:18:14 -Generating unique operation named: removeUsingPOST_14
2018-06-28 11:18:14 -Generating unique operation named: saveUsingPOST_6
2018-06-28 11:18:14 -Generating unique operation named: updateUsingPOST_7
2018-06-28 11:18:14 -Generating unique operation named: addUsingGET_8
2018-06-28 11:18:14 -Generating unique operation named: editUsingGET_9
2018-06-28 11:18:14 -Generating unique operation named: listUsingGET_11
2018-06-28 11:18:14 -Generating unique operation named: removeUsingPOST_15
2018-06-28 11:18:14 -Generating unique operation named: removeUsingPOST_16
2018-06-28 11:18:14 -Generating unique operation named: saveUsingPOST_7
2018-06-28 11:18:14 -Generating unique operation named: updateUsingGET_5
2018-06-28 11:18:14 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 11:18:14 -Generating unique operation named: updateUsingPOST_8
2018-06-28 11:18:14 -Generating unique operation named: updateUsingPUT_5
2018-06-28 11:18:14 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 11:18:14 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 11:18:14 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 11:18:14 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 11:18:14 -Generating unique operation named: addUsingGET_9
2018-06-28 11:18:14 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 11:18:14 -Generating unique operation named: editUsingGET_10
2018-06-28 11:18:14 -Generating unique operation named: listUsingGET_12
2018-06-28 11:18:14 -Generating unique operation named: saveUsingPOST_8
2018-06-28 11:18:14 -Generating unique operation named: saveUsingPOST_9
2018-06-28 11:18:14 -Generating unique operation named: updateUsingPOST_9
2018-06-28 11:18:14 -Generating unique operation named: addUsingGET_10
2018-06-28 11:18:14 -Generating unique operation named: editUsingGET_11
2018-06-28 11:18:14 -Generating unique operation named: listUsingGET_13
2018-06-28 11:18:14 -Generating unique operation named: removeUsingPOST_17
2018-06-28 11:18:14 -Generating unique operation named: removeUsingPOST_18
2018-06-28 11:18:14 -Generating unique operation named: updateUsingGET_6
2018-06-28 11:18:14 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 11:18:14 -Generating unique operation named: updateUsingPOST_10
2018-06-28 11:18:14 -Generating unique operation named: updateUsingPUT_6
2018-06-28 11:18:14 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 11:18:14 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 11:18:14 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 11:18:14 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 11:18:14 -Generating unique operation named: listUsingGET_14
2018-06-28 11:18:14 -Generating unique operation named: listUsingHEAD_1
2018-06-28 11:18:14 -Generating unique operation named: listUsingPOST_1
2018-06-28 11:18:14 -Generating unique operation named: listUsingPUT_1
2018-06-28 11:18:14 -Generating unique operation named: listUsingPATCH_1
2018-06-28 11:18:14 -Generating unique operation named: listUsingDELETE_1
2018-06-28 11:18:14 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 11:18:14 -Generating unique operation named: listUsingTRACE_1
2018-06-28 11:18:14 -Generating unique operation named: listUsingGET_15
2018-06-28 11:18:14 -Generating unique operation named: addUsingGET_11
2018-06-28 11:18:14 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 11:18:14 -Generating unique operation named: editUsingGET_12
2018-06-28 11:18:14 -Generating unique operation named: listUsingGET_16
2018-06-28 11:18:14 -Generating unique operation named: removeUsingPOST_19
2018-06-28 11:18:14 -Generating unique operation named: saveUsingPOST_10
2018-06-28 11:18:14 -Generating unique operation named: treeUsingGET_3
2018-06-28 11:18:14 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 11:18:14 -Generating unique operation named: updateUsingPOST_11
2018-06-28 11:18:14 -Starting Quartz Scheduler now
2018-06-28 11:18:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 11:18:14 -Starting...
2018-06-28 11:18:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 11:18:14 -Started.
2018-06-28 11:18:14 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 11:18:14 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 11:18:14 -Using a shared selector for servlet write/read
2018-06-28 11:18:14 -Tomcat started on port(s): 8099 (http)
2018-06-28 11:18:14 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 11:18:14 -==> Parameters: 
2018-06-28 11:18:14 -<==      Total: 1
2018-06-28 11:18:14 -Started BootdoApplication in 14.646 seconds (JVM running for 15.356)
2018-06-28 11:19:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 11:19:05 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 11:19:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-06-28 11:19:05 -Enabling session validation scheduler...
2018-06-28 11:19:05 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 11:19:05 -HTTP METHOD : GET
2018-06-28 11:19:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 11:19:05 -参数 : [{}]
2018-06-28 11:19:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 11:19:05 -==> Parameters: 1(Long)
2018-06-28 11:19:05 -<==      Total: 29
2018-06-28 11:19:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 11:19:05 -==> Parameters: 150(Long)
2018-06-28 11:19:05 -<==      Total: 1
2018-06-28 11:19:05 -耗时 : 39
2018-06-28 11:19:05 -返回值 : index_v1
2018-06-28 11:19:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 11:19:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:19:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 11:19:05.397(Timestamp)
2018-06-28 11:19:05 -<==    Updates: 1
2018-06-28 11:19:05 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 11:19:05 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 11:19:05 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 11:19:05 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 11:19:05 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 11:19:05 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 11:19:05 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 11:19:05 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:19:05 -HTTP METHOD : GET
2018-06-28 11:19:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:19:05 -参数 : []
2018-06-28 11:19:05 -耗时 : 1
2018-06-28 11:19:05 -返回值 : main
2018-06-28 11:19:05 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 11:19:05 -HTTP METHOD : GET
2018-06-28 11:19:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 11:19:05 -参数 : []
2018-06-28 11:19:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 11:19:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 11:19:05 -<==      Total: 0
2018-06-28 11:19:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 11:19:05 -==> Parameters: 1(Long), 0(String)
2018-06-28 11:19:05 -<==      Total: 1
2018-06-28 11:19:05 -耗时 : 19
2018-06-28 11:19:05 -返回值 : com.bootdo.common.utils.PageUtils@357a9b0c
2018-06-28 11:19:05 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:19:05 -HTTP METHOD : GET
2018-06-28 11:19:05 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:19:05 -参数 : []
2018-06-28 11:19:05 -耗时 : 0
2018-06-28 11:19:05 -返回值 : main
2018-06-28 11:19:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:08 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 11:19:08 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 11:19:08 -HTTP METHOD : GET
2018-06-28 11:19:08 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 11:19:08 -HTTP METHOD : GET
2018-06-28 11:19:08 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 11:19:08 -参数 : []
2018-06-28 11:19:08 -耗时 : 1
2018-06-28 11:19:08 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 11:19:08 -返回值 : system/regexp/regexp
2018-06-28 11:19:08 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 11:19:08 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:19:08 -<==      Total: 10
2018-06-28 11:19:08 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 11:19:08 -==> Parameters: 
2018-06-28 11:19:08 -<==      Total: 1
2018-06-28 11:19:08 -耗时 : 12
2018-06-28 11:19:08 -返回值 : com.bootdo.common.utils.PageUtils@f04598a
2018-06-28 11:19:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:09 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 11:19:09 -HTTP METHOD : GET
2018-06-28 11:19:09 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 11:19:09 -参数 : []
2018-06-28 11:19:09 -耗时 : 1
2018-06-28 11:19:09 -返回值 : system/dict/dict
2018-06-28 11:19:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:09 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 11:19:09 -HTTP METHOD : GET
2018-06-28 11:19:09 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 11:19:09 -参数 : []
2018-06-28 11:19:09 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 11:19:09 -HTTP METHOD : GET
2018-06-28 11:19:09 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 11:19:09 -参数 : []
2018-06-28 11:19:09 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 11:19:09 -==> Parameters: 
2018-06-28 11:19:09 -<==      Total: 31
2018-06-28 11:19:09 -耗时 : 11
2018-06-28 11:19:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:19:09 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 11:19:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 11:19:09.385(Timestamp)
2018-06-28 11:19:09 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$cf3abf3e.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 11:19:09 -<==    Updates: 1
2018-06-28 11:19:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:09 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 11:19:09 -HTTP METHOD : GET
2018-06-28 11:19:09 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 11:19:09 -参数 : [{limit=10, offset=0}]
2018-06-28 11:19:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 11:19:09 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:19:09 -<==      Total: 10
2018-06-28 11:19:09 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 11:19:09 -==> Parameters: 
2018-06-28 11:19:09 -<==      Total: 1
2018-06-28 11:19:09 -耗时 : 14
2018-06-28 11:19:09 -返回值 : com.bootdo.common.utils.PageUtils@3229ea22
2018-06-28 11:19:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 5, active threads = 1, queued tasks = 2, completed tasks = 1]
2018-06-28 11:19:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:11 -请求地址 : http://127.0.0.1:8099/system/file
2018-06-28 11:19:11 -HTTP METHOD : GET
2018-06-28 11:19:11 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.sysFile
2018-06-28 11:19:11 -参数 : [{}]
2018-06-28 11:19:11 -耗时 : 0
2018-06-28 11:19:11 -返回值 : system/file/file
2018-06-28 11:19:11 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:11 -请求地址 : http://127.0.0.1:8099/system/file/list
2018-06-28 11:19:11 -HTTP METHOD : GET
2018-06-28 11:19:11 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.list
2018-06-28 11:19:11 -参数 : [{limit=12, offset=0, type=}]
2018-06-28 11:19:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-06-28 11:19:11 -==> Parameters: 0(Integer), 12(Integer)
2018-06-28 11:19:11 -<==      Total: 11
2018-06-28 11:19:11 -==>  Preparing: select count(*) from sys_file 
2018-06-28 11:19:11 -==> Parameters: 
2018-06-28 11:19:11 -<==      Total: 1
2018-06-28 11:19:11 -耗时 : 10
2018-06-28 11:19:11 -返回值 : com.bootdo.common.utils.PageUtils@2d966f1a
2018-06-28 11:19:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:14 -请求地址 : http://127.0.0.1:8099/system/user/
2018-06-28 11:19:14 -HTTP METHOD : GET
2018-06-28 11:19:14 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.user
2018-06-28 11:19:14 -参数 : [{}]
2018-06-28 11:19:14 -耗时 : 0
2018-06-28 11:19:14 -返回值 : system/user/user
2018-06-28 11:19:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:14 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 11:19:14 -HTTP METHOD : GET
2018-06-28 11:19:14 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 11:19:14 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 11:19:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 11:19:14 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:19:14 -<==      Total: 10
2018-06-28 11:19:14 -==>  Preparing: select count(*) from sys_user 
2018-06-28 11:19:14 -==> Parameters: 
2018-06-28 11:19:14 -<==      Total: 1
2018-06-28 11:19:14 -耗时 : 17
2018-06-28 11:19:14 -返回值 : com.bootdo.common.utils.PageUtils@6b84cd25
2018-06-28 11:19:16 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 11:19:16 -HTTP METHOD : GET
2018-06-28 11:19:16 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 11:19:16 -参数 : [{limit=10, offset=0, name=, deptId=j1_1}]
2018-06-28 11:19:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE dept_id = ? order by user_id desc limit ?, ? 
2018-06-28 11:19:16 -==> Parameters: j1_1(String), 0(Integer), 10(Integer)
2018-06-28 11:19:16 -<==      Total: 0
2018-06-28 11:19:16 -==>  Preparing: select count(*) from sys_user WHERE dept_id = ? 
2018-06-28 11:19:16 -==> Parameters: j1_1(String)
2018-06-28 11:19:16 -<==      Total: 1
2018-06-28 11:19:16 -耗时 : 10
2018-06-28 11:19:16 -返回值 : com.bootdo.common.utils.PageUtils@3ed60d38
2018-06-28 11:19:17 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 11:19:17 -HTTP METHOD : GET
2018-06-28 11:19:17 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 11:19:17 -参数 : [{limit=10, offset=0, name=, deptId=j1_1}]
2018-06-28 11:19:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE dept_id = ? order by user_id desc limit ?, ? 
2018-06-28 11:19:17 -==> Parameters: j1_1(String), 0(Integer), 10(Integer)
2018-06-28 11:19:17 -<==      Total: 0
2018-06-28 11:19:17 -==>  Preparing: select count(*) from sys_user WHERE dept_id = ? 
2018-06-28 11:19:17 -==> Parameters: j1_1(String)
2018-06-28 11:19:17 -<==      Total: 1
2018-06-28 11:19:17 -耗时 : 6
2018-06-28 11:19:17 -返回值 : com.bootdo.common.utils.PageUtils@3a97a97e
2018-06-28 11:19:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:20 -请求地址 : http://127.0.0.1:8099/system/role
2018-06-28 11:19:20 -HTTP METHOD : GET
2018-06-28 11:19:20 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 11:19:20 -参数 : []
2018-06-28 11:19:20 -耗时 : 0
2018-06-28 11:19:20 -返回值 : system/role/role
2018-06-28 11:19:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:20 -请求地址 : http://127.0.0.1:8099/system/role/list
2018-06-28 11:19:20 -HTTP METHOD : GET
2018-06-28 11:19:20 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.list
2018-06-28 11:19:20 -参数 : []
2018-06-28 11:19:20 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 11:19:20 -==> Parameters: 
2018-06-28 11:19:20 -<==      Total: 2
2018-06-28 11:19:20 -耗时 : 4
2018-06-28 11:19:20 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-06-28 11:19:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:21 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 11:19:21 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 11:19:21 -HTTP METHOD : GET
2018-06-28 11:19:21 -HTTP METHOD : GET
2018-06-28 11:19:21 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 11:19:21 -参数 : [{}]
2018-06-28 11:19:21 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 11:19:21 -耗时 : 0
2018-06-28 11:19:21 -返回值 : system/menu/menu
2018-06-28 11:19:21 -参数 : [{sort=order_num}]
2018-06-28 11:19:21 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 11:19:21 -==> Parameters: 
2018-06-28 11:19:21 -<==      Total: 66
2018-06-28 11:19:21 -耗时 : 17
2018-06-28 11:19:21 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='systemmenu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 11:19:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:26 -请求地址 : http://127.0.0.1:8099/system/dept
2018-06-28 11:19:26 -HTTP METHOD : GET
2018-06-28 11:19:26 -请求地址 : http://127.0.0.1:8099/system/dept/list
2018-06-28 11:19:26 -HTTP METHOD : GET
2018-06-28 11:19:26 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.list
2018-06-28 11:19:26 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.dept
2018-06-28 11:19:26 -参数 : []
2018-06-28 11:19:26 -参数 : []
2018-06-28 11:19:26 -耗时 : 0
2018-06-28 11:19:26 -返回值 : system/dept/dept
2018-06-28 11:19:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 11:19:26 -==> Parameters: 
2018-06-28 11:19:26 -<==      Total: 10
2018-06-28 11:19:26 -耗时 : 8
2018-06-28 11:19:26 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-06-28 11:19:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:37 -请求地址 : http://127.0.0.1:8099/system/generator
2018-06-28 11:19:37 -HTTP METHOD : GET
2018-06-28 11:19:37 -CLASS_METHOD : com.bootdo.system.generator.controller.GeneratorController.generator
2018-06-28 11:19:37 -参数 : []
2018-06-28 11:19:37 -耗时 : 0
2018-06-28 11:19:37 -返回值 : system/generator/list
2018-06-28 11:19:37 -请求地址 : http://127.0.0.1:8099/system/generator/list
2018-06-28 11:19:37 -HTTP METHOD : GET
2018-06-28 11:19:37 -CLASS_METHOD : com.bootdo.system.generator.controller.GeneratorController.list
2018-06-28 11:19:37 -参数 : []
2018-06-28 11:19:37 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2018-06-28 11:19:37 -==> Parameters: 
2018-06-28 11:19:37 -<==      Total: 43
2018-06-28 11:19:37 -耗时 : 13
2018-06-28 11:19:37 -返回值 : [{engine=InnoDB, createTime=2018-06-22 14:56:25.0, tableComment=数据库字典的索引表, tableName=SYS_DICT}, {engine=InnoDB, createTime=2018-06-22 15:04:56.0, tableComment=数据字典的内容, tableName=SYS_DICT_CONTENT}, {engine=InnoDB, createTime=2018-06-26 12:21:32.0, tableComment=系统正则表达式, tableName=SYS_REGEXP}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_evt_log}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_ge_bytearray}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_ge_property}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_actinst}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_attachment}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_comment}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_detail}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_identitylink}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_procinst}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_taskinst}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_varinst}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_id_group}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_id_info}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_id_membership}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_id_user}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_procdef_info}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_re_deployment}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_re_model}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_re_procdef}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_ru_event_subscr}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_ru_execution}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=, tableName=act_ru_identitylink}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=, tableName=act_ru_job}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=, tableName=act_ru_task}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=, tableName=act_ru_variable}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=文章内容, tableName=blog_content}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=通知通告, tableName=oa_notify}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=通知通告发送记录, tableName=oa_notify_record}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=审批流程测试表, tableName=salary}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2018-06-22 14:56:20.0, tableComment=字典表, tableName=sys_dict3}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=文件上传, tableName=sys_file}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=菜单管理, tableName=sys_menu}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=角色, tableName=sys_role}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=角色与菜单对应关系, tableName=sys_role_menu}, {engine=MyISAM, createTime=2018-06-06 13:25:22.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2018-06-06 13:25:22.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2018-06-06 13:25:22.0, tableComment=, tableName=sys_user_plus}, {engine=InnoDB, createTime=2018-06-06 13:25:22.0, tableComment=用户与角色对应关系, tableName=sys_user_role}]
2018-06-28 11:19:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:41 -请求地址 : http://127.0.0.1:8099/system/quartzjob
2018-06-28 11:19:41 -HTTP METHOD : GET
2018-06-28 11:19:41 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController
2018-06-28 11:19:41 -参数 : []
2018-06-28 11:19:41 -耗时 : 0
2018-06-28 11:19:41 -返回值 : system/quartzjob/quartzjob
2018-06-28 11:19:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:19:41 -请求地址 : http://127.0.0.1:8099/system/quartzjob/list
2018-06-28 11:19:41 -HTTP METHOD : GET
2018-06-28 11:19:41 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.list
2018-06-28 11:19:41 -参数 : [{limit=10, offset=0}]
2018-06-28 11:19:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2018-06-28 11:19:41 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:19:41 -<==      Total: 1
2018-06-28 11:19:41 -==>  Preparing: select count(*) from sys_task 
2018-06-28 11:19:41 -==> Parameters: 
2018-06-28 11:19:41 -<==      Total: 1
2018-06-28 11:19:41 -耗时 : 8
2018-06-28 11:19:41 -返回值 : com.bootdo.common.utils.PageUtils@124a19a3
2018-06-28 11:19:45 -请求地址 : http://127.0.0.1:8099/system/online
2018-06-28 11:19:45 -HTTP METHOD : GET
2018-06-28 11:19:45 -CLASS_METHOD : com.bootdo.system.user.controller.SessionController.online
2018-06-28 11:19:45 -参数 : []
2018-06-28 11:19:45 -耗时 : 3
2018-06-28 11:19:45 -返回值 : system/online/online
2018-06-28 11:19:45 -请求地址 : http://127.0.0.1:8099/system/online/list
2018-06-28 11:19:45 -HTTP METHOD : GET
2018-06-28 11:19:45 -CLASS_METHOD : com.bootdo.system.user.controller.SessionController.list
2018-06-28 11:19:45 -参数 : []
2018-06-28 11:19:45 -耗时 : 3
2018-06-28 11:19:45 -返回值 : [com.bootdo.system.user.domain.UserOnline@51ccb22a]
2018-06-28 11:19:47 -请求地址 : http://127.0.0.1:8099/system/log
2018-06-28 11:19:47 -HTTP METHOD : GET
2018-06-28 11:19:47 -CLASS_METHOD : com.bootdo.system.log.controller.LogController.log
2018-06-28 11:19:47 -参数 : []
2018-06-28 11:19:47 -耗时 : 1
2018-06-28 11:19:47 -返回值 : system/log/log
2018-06-28 11:19:48 -请求地址 : http://127.0.0.1:8099/system/log/list
2018-06-28 11:19:48 -HTTP METHOD : GET
2018-06-28 11:19:48 -CLASS_METHOD : com.bootdo.system.log.controller.LogController.list
2018-06-28 11:19:48 -参数 : [{limit=10, offset=0, sort=gmt_create, order=desc, operation=, username=}]
2018-06-28 11:19:48 -==>  Preparing: select count(*) from sys_log 
2018-06-28 11:19:48 -==> Parameters: 
2018-06-28 11:19:48 -<==      Total: 1
2018-06-28 11:19:48 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log order by gmt_create desc limit ?, ? 
2018-06-28 11:19:48 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:19:48 -<==      Total: 10
2018-06-28 11:19:48 -耗时 : 8
2018-06-28 11:19:48 -返回值 : PageDO{offset=0, limit=10, total=249, params={}, param='', rows=[LogDO{id=858, userId=1, username='admin', operation='error', time=null, method='http://127.0.0.1:8099/system/dict/dicttype', params='org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list', ip='null', gmtCreate=Thu Jun 28 11:19:09 CST 2018}, LogDO{id=857, userId=1, username='admin', operation='请求访问主页', time=39, method='com.bootdo.system.user.controller.LoginController.index()', params='null', ip='127.0.0.1', gmtCreate=Thu Jun 28 11:19:05 CST 2018}, LogDO{id=856, userId=1, username='admin', operation='error', time=null, method='http://127.0.0.1:8099/system/dict/dicttype', params='org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list', ip='null', gmtCreate=Thu Jun 28 11:11:49 CST 2018}, LogDO{id=855, userId=1, username='admin', operation='请求访问主页', time=37, method='com.bootdo.system.user.controller.LoginController.index()', params='null', ip='127.0.0.1', gmtCreate=Thu Jun 28 11:11:44 CST 2018}, LogDO{id=854, userId=1, username='admin', operation='error', time=null, method='http://127.0.0.1:8099/system/dict/dicttype', params='org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list', ip='null', gmtCreate=Thu Jun 28 11:06:11 CST 2018}, LogDO{id=853, userId=1, username='admin', operation='请求访问主页', time=35, method='com.bootdo.system.user.controller.LoginController.index()', params='null', ip='127.0.0.1', gmtCreate=Thu Jun 28 11:06:06 CST 2018}, LogDO{id=852, userId=1, username='admin', operation='请求访问主页', time=101, method='com.bootdo.system.user.controller.LoginController.index()', params='null', ip='127.0.0.1', gmtCreate=Thu Jun 28 10:51:18 CST 2018}, LogDO{id=851, userId=1, username='admin', operation='登录', time=72, method='com.bootdo.system.user.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Thu Jun 28 10:51:17 CST 2018}, LogDO{id=850, userId=1, username='admin', operation='请求访问主页', time=77, method='com.bootdo.system.user.controller.LoginController.index()', params='null', ip='127.0.0.1', gmtCreate=Thu Jun 28 10:51:11 CST 2018}, LogDO{id=849, userId=1, username='admin', operation='请求访问主页', time=82, method='com.bootdo.system.user.controller.LoginController.index()', params='null', ip='127.0.0.1', gmtCreate=Thu Jun 28 10:49:05 CST 2018}]}
2018-06-28 11:20:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:14 -请求地址 : http://127.0.0.1:8099/oa/notify/list
2018-06-28 11:20:14 -HTTP METHOD : GET
2018-06-28 11:20:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2018-06-28 11:20:14 -参数 : [{limit=10, offset=0}]
2018-06-28 11:20:14 -请求地址 : http://127.0.0.1:8099/oa/notify
2018-06-28 11:20:14 -HTTP METHOD : GET
2018-06-28 11:20:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.oaNotify
2018-06-28 11:20:14 -参数 : []
2018-06-28 11:20:14 -耗时 : 0
2018-06-28 11:20:14 -返回值 : oa/notify/notify
2018-06-28 11:20:14 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2018-06-28 11:20:14 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:20:14 -<==      Total: 5
2018-06-28 11:20:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 11:20:14 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 11:20:14 -<==      Total: 1
2018-06-28 11:20:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 11:20:14 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 11:20:14 -<==      Total: 1
2018-06-28 11:20:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 11:20:14 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 11:20:14 -<==      Total: 1
2018-06-28 11:20:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 11:20:14 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 11:20:14 -<==      Total: 1
2018-06-28 11:20:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 11:20:14 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 11:20:14 -<==      Total: 1
2018-06-28 11:20:14 -==>  Preparing: select count(*) from oa_notify 
2018-06-28 11:20:14 -==> Parameters: 
2018-06-28 11:20:14 -<==      Total: 1
2018-06-28 11:20:14 -耗时 : 21
2018-06-28 11:20:14 -返回值 : com.bootdo.common.utils.PageUtils@4bcf3d71
2018-06-28 11:20:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:15 -请求地址 : http://127.0.0.1:8099/oa/notify/selfNotify
2018-06-28 11:20:15 -HTTP METHOD : GET
2018-06-28 11:20:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2018-06-28 11:20:15 -参数 : []
2018-06-28 11:20:15 -耗时 : 0
2018-06-28 11:20:15 -请求地址 : http://127.0.0.1:8099/oa/notify/selfList
2018-06-28 11:20:15 -HTTP METHOD : GET
2018-06-28 11:20:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2018-06-28 11:20:15 -参数 : [{limit=10, offset=0}]
2018-06-28 11:20:15 -返回值 : oa/notify/selfNotify
2018-06-28 11:20:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 11:20:15 -==> Parameters: 1(Long), 0(Integer), 10(Integer)
2018-06-28 11:20:15 -<==      Total: 5
2018-06-28 11:20:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 11:20:15 -==> Parameters: 1(Long)
2018-06-28 11:20:15 -<==      Total: 1
2018-06-28 11:20:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 11:20:15 -==> Parameters: 1(Long)
2018-06-28 11:20:15 -<==      Total: 1
2018-06-28 11:20:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 11:20:15 -==> Parameters: 1(Long)
2018-06-28 11:20:15 -<==      Total: 1
2018-06-28 11:20:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 11:20:15 -==> Parameters: 1(Long)
2018-06-28 11:20:15 -<==      Total: 1
2018-06-28 11:20:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 11:20:15 -==> Parameters: 1(Long)
2018-06-28 11:20:15 -<==      Total: 1
2018-06-28 11:20:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 11:20:15 -==> Parameters: 1(Long), null
2018-06-28 11:20:15 -<==      Total: 1
2018-06-28 11:20:15 -耗时 : 18
2018-06-28 11:20:15 -返回值 : com.bootdo.common.utils.PageUtils@50d640ec
2018-06-28 11:20:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:20:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:23:06 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 11:23:06 -HTTP METHOD : GET
2018-06-28 11:23:06 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 11:23:06 -参数 : [{}]
2018-06-28 11:23:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 11:23:06 -==> Parameters: 1(Long)
2018-06-28 11:23:06 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 11:23:06 -HTTP METHOD : GET
2018-06-28 11:23:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 11:23:06 -参数 : []
2018-06-28 11:23:06 -<==      Total: 29
2018-06-28 11:23:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 11:23:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 11:23:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 11:23:06 -<==      Total: 0
2018-06-28 11:23:06 -==> Parameters: 150(Long)
2018-06-28 11:23:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 11:23:06 -==> Parameters: 1(Long), 0(String)
2018-06-28 11:23:06 -<==      Total: 1
2018-06-28 11:23:06 -<==      Total: 1
2018-06-28 11:23:06 -耗时 : 13
2018-06-28 11:23:06 -返回值 : index_v1
2018-06-28 11:23:06 -耗时 : 6
2018-06-28 11:23:06 -返回值 : com.bootdo.common.utils.PageUtils@4c70069b
2018-06-28 11:23:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:23:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 11:23:06.444(Timestamp)
2018-06-28 11:23:06 -<==    Updates: 1
2018-06-28 11:23:06 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:23:06 -HTTP METHOD : GET
2018-06-28 11:23:06 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:23:06 -参数 : []
2018-06-28 11:23:06 -耗时 : 1
2018-06-28 11:23:06 -返回值 : main
2018-06-28 11:23:06 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 11:23:06 -HTTP METHOD : GET
2018-06-28 11:23:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 11:23:06 -参数 : []
2018-06-28 11:23:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 11:23:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 11:23:06 -<==      Total: 0
2018-06-28 11:23:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 11:23:06 -==> Parameters: 1(Long), 0(String)
2018-06-28 11:23:06 -<==      Total: 1
2018-06-28 11:23:06 -耗时 : 4
2018-06-28 11:23:06 -返回值 : com.bootdo.common.utils.PageUtils@19b199a8
2018-06-28 11:23:06 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:23:06 -HTTP METHOD : GET
2018-06-28 11:23:06 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:23:06 -参数 : []
2018-06-28 11:23:06 -耗时 : 1
2018-06-28 11:23:06 -返回值 : main
2018-06-28 11:23:08 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 11:23:08 -HTTP METHOD : GET
2018-06-28 11:23:08 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 11:23:08 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 11:23:08 -HTTP METHOD : GET
2018-06-28 11:23:08 -参数 : []
2018-06-28 11:23:08 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 11:23:08 -参数 : []
2018-06-28 11:23:08 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 11:23:08 -==> Parameters: 
2018-06-28 11:23:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:23:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:23:08 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$cf3abf3e.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 11:23:08 -<==      Total: 31
2018-06-28 11:23:08 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 11:23:08.965(Timestamp)
2018-06-28 11:23:08 -耗时 : 2
2018-06-28 11:23:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:23:08 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 11:23:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 11:23:08 -<==    Updates: 1
2018-06-28 11:23:08 -==> Parameters: 1(Long)
2018-06-28 11:23:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 11:23:08 -==> Parameters: 1(Long)
2018-06-28 11:23:08 -<==      Total: 51
2018-06-28 11:23:08 -<==      Total: 51
2018-06-28 11:23:08 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:23:08 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:23:08 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 11:23:08 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 11:23:08 -HTTP METHOD : GET
2018-06-28 11:23:08 -HTTP METHOD : GET
2018-06-28 11:23:08 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 11:23:08 -参数 : [{limit=10, offset=0}]
2018-06-28 11:23:08 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 11:23:08 -参数 : []
2018-06-28 11:23:08 -耗时 : 1
2018-06-28 11:23:08 -返回值 : system/dict/dict
2018-06-28 11:23:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 11:23:08 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:23:08 -<==      Total: 10
2018-06-28 11:23:08 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 11:23:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:23:08 -==> Parameters: 
2018-06-28 11:23:08 -<==      Total: 1
2018-06-28 11:23:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:23:08 -耗时 : 7
2018-06-28 11:23:08 -返回值 : com.bootdo.common.utils.PageUtils@62bac153
2018-06-28 11:23:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:23:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:23:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:26:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:26:02 -请求地址 : http://127.0.0.1:8099/system/file
2018-06-28 11:26:02 -HTTP METHOD : GET
2018-06-28 11:26:02 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.sysFile
2018-06-28 11:26:02 -参数 : [{}]
2018-06-28 11:26:02 -耗时 : 0
2018-06-28 11:26:02 -返回值 : system/file/file
2018-06-28 11:26:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:26:02 -请求地址 : http://127.0.0.1:8099/system/file/list
2018-06-28 11:26:02 -HTTP METHOD : GET
2018-06-28 11:26:02 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.list
2018-06-28 11:26:02 -参数 : [{limit=12, offset=0, type=}]
2018-06-28 11:26:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-06-28 11:26:02 -==> Parameters: 0(Integer), 12(Integer)
2018-06-28 11:26:02 -<==      Total: 11
2018-06-28 11:26:02 -==>  Preparing: select count(*) from sys_file 
2018-06-28 11:26:02 -==> Parameters: 
2018-06-28 11:26:02 -<==      Total: 1
2018-06-28 11:26:02 -耗时 : 5
2018-06-28 11:26:02 -返回值 : com.bootdo.common.utils.PageUtils@4f2e4127
2018-06-28 11:26:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:26:05 -请求地址 : http://127.0.0.1:8099/system/user/
2018-06-28 11:26:05 -HTTP METHOD : GET
2018-06-28 11:26:05 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.user
2018-06-28 11:26:05 -参数 : [{}]
2018-06-28 11:26:05 -耗时 : 1
2018-06-28 11:26:05 -返回值 : system/user/user
2018-06-28 11:26:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:26:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:26:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:26:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:26:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:26:06 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 11:26:06 -HTTP METHOD : GET
2018-06-28 11:26:06 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 11:26:06 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 11:26:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 11:26:06 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 11:26:06 -<==      Total: 10
2018-06-28 11:26:06 -==>  Preparing: select count(*) from sys_user 
2018-06-28 11:26:06 -==> Parameters: 
2018-06-28 11:26:06 -<==      Total: 1
2018-06-28 11:26:06 -耗时 : 8
2018-06-28 11:26:06 -返回值 : com.bootdo.common.utils.PageUtils@7ee0bb10
2018-06-28 11:29:23 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 11:29:23 -HTTP METHOD : GET
2018-06-28 11:29:23 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 11:29:23 -参数 : [{limit=10, offset=0, name=, deptId=j1_1}]
2018-06-28 11:29:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE dept_id = ? order by user_id desc limit ?, ? 
2018-06-28 11:29:23 -==> Parameters: j1_1(String), 0(Integer), 10(Integer)
2018-06-28 11:29:23 -<==      Total: 0
2018-06-28 11:29:23 -==>  Preparing: select count(*) from sys_user WHERE dept_id = ? 
2018-06-28 11:29:23 -==> Parameters: j1_1(String)
2018-06-28 11:29:23 -<==      Total: 1
2018-06-28 11:29:23 -耗时 : 5
2018-06-28 11:29:23 -返回值 : com.bootdo.common.utils.PageUtils@6435f08
2018-06-28 11:29:26 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 11:29:26 -HTTP METHOD : GET
2018-06-28 11:29:26 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 11:29:26 -参数 : [{}]
2018-06-28 11:29:26 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 11:29:26 -HTTP METHOD : GET
2018-06-28 11:29:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 11:29:26 -参数 : []
2018-06-28 11:29:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 11:29:26 -==> Parameters: 1(Long)
2018-06-28 11:29:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 11:29:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 11:29:26 -<==      Total: 0
2018-06-28 11:29:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 11:29:26 -==> Parameters: 1(Long), 0(String)
2018-06-28 11:29:26 -<==      Total: 1
2018-06-28 11:29:26 -耗时 : 3
2018-06-28 11:29:26 -返回值 : com.bootdo.common.utils.PageUtils@72c22c2d
2018-06-28 11:29:26 -<==      Total: 29
2018-06-28 11:29:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 11:29:26 -==> Parameters: 150(Long)
2018-06-28 11:29:26 -<==      Total: 1
2018-06-28 11:29:26 -耗时 : 9
2018-06-28 11:29:26 -返回值 : index_v1
2018-06-28 11:29:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:29:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 9(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 11:29:26.667(Timestamp)
2018-06-28 11:29:26 -<==    Updates: 1
2018-06-28 11:29:26 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:29:26 -HTTP METHOD : GET
2018-06-28 11:29:26 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:29:26 -参数 : []
2018-06-28 11:29:26 -耗时 : 0
2018-06-28 11:29:26 -返回值 : main
2018-06-28 11:29:26 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 11:29:26 -HTTP METHOD : GET
2018-06-28 11:29:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 11:29:26 -参数 : []
2018-06-28 11:29:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 11:29:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 11:29:26 -<==      Total: 0
2018-06-28 11:29:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 11:29:26 -==> Parameters: 1(Long), 0(String)
2018-06-28 11:29:26 -<==      Total: 1
2018-06-28 11:29:26 -耗时 : 4
2018-06-28 11:29:26 -返回值 : com.bootdo.common.utils.PageUtils@63f9f148
2018-06-28 11:29:26 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:29:26 -HTTP METHOD : GET
2018-06-28 11:29:26 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:29:26 -参数 : []
2018-06-28 11:29:26 -耗时 : 0
2018-06-28 11:29:26 -返回值 : main
2018-06-28 11:29:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:29:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:29:32 -请求地址 : http://127.0.0.1:8099/system/dept/list
2018-06-28 11:29:32 -HTTP METHOD : GET
2018-06-28 11:29:32 -请求地址 : http://127.0.0.1:8099/system/dept
2018-06-28 11:29:32 -HTTP METHOD : GET
2018-06-28 11:29:32 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.dept
2018-06-28 11:29:32 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.list
2018-06-28 11:29:32 -参数 : []
2018-06-28 11:29:32 -参数 : []
2018-06-28 11:29:32 -耗时 : 0
2018-06-28 11:29:32 -返回值 : system/dept/dept
2018-06-28 11:29:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 11:29:32 -==> Parameters: 
2018-06-28 11:29:32 -<==      Total: 10
2018-06-28 11:29:32 -耗时 : 3
2018-06-28 11:29:32 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-06-28 11:29:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:29:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:29:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:29:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:29:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:29:32 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 11:34:21 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 11:34:21 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 11:34:21 -HTTP METHOD : GET
2018-06-28 11:34:21 -HTTP METHOD : GET
2018-06-28 11:34:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 11:34:21 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 11:34:21 -参数 : []
2018-06-28 11:34:21 -参数 : [{}]
2018-06-28 11:34:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 11:34:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 11:34:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 11:34:21 -==> Parameters: 1(Long)
2018-06-28 11:34:21 -<==      Total: 0
2018-06-28 11:34:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 11:34:21 -==> Parameters: 1(Long), 0(String)
2018-06-28 11:34:21 -<==      Total: 1
2018-06-28 11:34:21 -耗时 : 16
2018-06-28 11:34:21 -返回值 : com.bootdo.common.utils.PageUtils@78d291b4
2018-06-28 11:34:21 -<==      Total: 29
2018-06-28 11:34:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 11:34:21 -==> Parameters: 150(Long)
2018-06-28 11:34:21 -<==      Total: 1
2018-06-28 11:34:21 -耗时 : 31
2018-06-28 11:34:21 -返回值 : index_v1
2018-06-28 11:34:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 11:34:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 11:34:21.464(Timestamp)
2018-06-28 11:34:21 -<==    Updates: 1
2018-06-28 11:34:21 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:34:21 -HTTP METHOD : GET
2018-06-28 11:34:21 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:34:21 -参数 : []
2018-06-28 11:34:21 -耗时 : 1
2018-06-28 11:34:21 -返回值 : main
2018-06-28 11:34:22 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 11:34:22 -HTTP METHOD : GET
2018-06-28 11:34:22 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 11:34:22 -参数 : []
2018-06-28 11:34:22 -耗时 : 2
2018-06-28 11:34:22 -返回值 : main
2018-06-28 13:12:33 -请求地址 : http://127.0.0.1:8099/login;JSESSIONID=143f1671-f95c-4362-a0d3-2b187def8c20
2018-06-28 13:12:33 -HTTP METHOD : GET
2018-06-28 13:12:33 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 13:12:33 -参数 : []
2018-06-28 13:12:33 -耗时 : 0
2018-06-28 13:12:33 -返回值 : login
2018-06-28 13:12:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 13:12:34 -==> Parameters: admin(String)
2018-06-28 13:12:34 -<==      Total: 1
2018-06-28 13:12:34 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 13:12:34 -HTTP METHOD : POST
2018-06-28 13:12:34 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 13:12:34 -参数 : [admin, 111111]
2018-06-28 13:12:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 13:12:34 -==> Parameters: admin(String)
2018-06-28 13:12:34 -<==      Total: 1
2018-06-28 13:12:34 -耗时 : 11
2018-06-28 13:12:34 -返回值 : {msg=操作成功, code=0}
2018-06-28 13:12:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:12:34 -==> Parameters: 1(Long), admin(String), 登录(String), 11(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 13:12:34.589(Timestamp)
2018-06-28 13:12:34 -<==    Updates: 1
2018-06-28 13:12:34 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:12:34 -HTTP METHOD : GET
2018-06-28 13:12:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:12:34 -参数 : []
2018-06-28 13:12:34 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 13:12:34 -HTTP METHOD : GET
2018-06-28 13:12:34 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 13:12:34 -参数 : [{}]
2018-06-28 13:12:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:12:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:12:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 13:12:34 -<==      Total: 0
2018-06-28 13:12:34 -==> Parameters: 1(Long)
2018-06-28 13:12:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:12:34 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:12:34 -<==      Total: 1
2018-06-28 13:12:34 -耗时 : 3
2018-06-28 13:12:34 -返回值 : com.bootdo.common.utils.PageUtils@1a9a3587
2018-06-28 13:12:34 -<==      Total: 29
2018-06-28 13:12:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 13:12:34 -==> Parameters: 150(Long)
2018-06-28 13:12:34 -<==      Total: 1
2018-06-28 13:12:34 -耗时 : 10
2018-06-28 13:12:34 -返回值 : index_v1
2018-06-28 13:12:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:12:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 13:12:34.619(Timestamp)
2018-06-28 13:12:34 -<==    Updates: 1
2018-06-28 13:12:34 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:12:34 -HTTP METHOD : GET
2018-06-28 13:12:34 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:12:34 -参数 : []
2018-06-28 13:12:34 -耗时 : 0
2018-06-28 13:12:34 -返回值 : main
2018-06-28 13:12:34 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:12:34 -HTTP METHOD : GET
2018-06-28 13:12:34 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:12:34 -参数 : []
2018-06-28 13:12:34 -耗时 : 0
2018-06-28 13:12:34 -返回值 : main
2018-06-28 13:12:37 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:37 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 13:12:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 13:12:37 -==> Parameters: 1(Long)
2018-06-28 13:12:37 -==> Parameters: 1(Long)
2018-06-28 13:12:37 -<==      Total: 51
2018-06-28 13:12:37 -<==      Total: 51
2018-06-28 13:12:37 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:37 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:37 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 13:12:37 -HTTP METHOD : GET
2018-06-28 13:12:37 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 13:12:37 -参数 : []
2018-06-28 13:12:37 -耗时 : 0
2018-06-28 13:12:37 -返回值 : system/regexp/regexp
2018-06-28 13:12:37 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 13:12:37 -HTTP METHOD : GET
2018-06-28 13:12:37 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 13:12:37 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 13:12:37 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 13:12:37 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:12:37 -<==      Total: 10
2018-06-28 13:12:37 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 13:12:37 -==> Parameters: 
2018-06-28 13:12:37 -<==      Total: 1
2018-06-28 13:12:37 -耗时 : 5
2018-06-28 13:12:37 -返回值 : com.bootdo.common.utils.PageUtils@3fb575c6
2018-06-28 13:12:37 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:37 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:37 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:37 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:37 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:38 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 13:12:38 -HTTP METHOD : GET
2018-06-28 13:12:38 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 13:12:38 -参数 : []
2018-06-28 13:12:38 -耗时 : 0
2018-06-28 13:12:38 -返回值 : system/dict/dict
2018-06-28 13:12:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:38 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 13:12:38 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 13:12:38 -HTTP METHOD : GET
2018-06-28 13:12:38 -HTTP METHOD : GET
2018-06-28 13:12:38 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 13:12:38 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 13:12:38 -参数 : []
2018-06-28 13:12:38 -参数 : []
2018-06-28 13:12:38 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 13:12:38 -==> Parameters: 
2018-06-28 13:12:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:12:38 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$cf3abf3e.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:12:38 -<==      Total: 31
2018-06-28 13:12:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 13:12:38.392(Timestamp)
2018-06-28 13:12:38 -耗时 : 4
2018-06-28 13:12:38 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 13:12:38 -<==    Updates: 1
2018-06-28 13:12:38 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:38 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:12:38 -HTTP METHOD : GET
2018-06-28 13:12:38 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:12:38 -参数 : [{limit=10, offset=0}]
2018-06-28 13:12:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:12:38 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:12:38 -<==      Total: 10
2018-06-28 13:12:38 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:12:38 -==> Parameters: 
2018-06-28 13:12:38 -<==      Total: 1
2018-06-28 13:12:38 -耗时 : 5
2018-06-28 13:12:38 -返回值 : com.bootdo.common.utils.PageUtils@ed42502
2018-06-28 13:12:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:41 -请求地址 : http://127.0.0.1:8099/system/file
2018-06-28 13:12:41 -HTTP METHOD : GET
2018-06-28 13:12:41 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.sysFile
2018-06-28 13:12:41 -参数 : [{}]
2018-06-28 13:12:41 -耗时 : 0
2018-06-28 13:12:41 -返回值 : system/file/file
2018-06-28 13:12:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:41 -请求地址 : http://127.0.0.1:8099/system/file/list
2018-06-28 13:12:41 -HTTP METHOD : GET
2018-06-28 13:12:41 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.list
2018-06-28 13:12:41 -参数 : [{limit=12, offset=0, type=}]
2018-06-28 13:12:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-06-28 13:12:41 -==> Parameters: 0(Integer), 12(Integer)
2018-06-28 13:12:41 -<==      Total: 11
2018-06-28 13:12:41 -==>  Preparing: select count(*) from sys_file 
2018-06-28 13:12:41 -==> Parameters: 
2018-06-28 13:12:41 -<==      Total: 1
2018-06-28 13:12:41 -耗时 : 3
2018-06-28 13:12:41 -返回值 : com.bootdo.common.utils.PageUtils@11d5991d
2018-06-28 13:12:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:44 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 13:12:44 -HTTP METHOD : GET
2018-06-28 13:12:44 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 13:12:44 -参数 : [{}]
2018-06-28 13:12:44 -耗时 : 0
2018-06-28 13:12:44 -返回值 : system/menu/menu
2018-06-28 13:12:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:44 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 13:12:44 -HTTP METHOD : GET
2018-06-28 13:12:44 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 13:12:44 -参数 : [{sort=order_num}]
2018-06-28 13:12:44 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 13:12:44 -==> Parameters: 
2018-06-28 13:12:44 -<==      Total: 66
2018-06-28 13:12:44 -耗时 : 5
2018-06-28 13:12:44 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='systemmenu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 13:12:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:46 -请求地址 : http://127.0.0.1:8099/system/user/
2018-06-28 13:12:46 -HTTP METHOD : GET
2018-06-28 13:12:46 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.user
2018-06-28 13:12:46 -参数 : [{}]
2018-06-28 13:12:46 -耗时 : 0
2018-06-28 13:12:46 -返回值 : system/user/user
2018-06-28 13:12:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:46 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:46 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 13:12:46 -HTTP METHOD : GET
2018-06-28 13:12:46 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 13:12:46 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 13:12:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 13:12:46 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:12:46 -<==      Total: 10
2018-06-28 13:12:46 -==>  Preparing: select count(*) from sys_user 
2018-06-28 13:12:46 -==> Parameters: 
2018-06-28 13:12:46 -<==      Total: 1
2018-06-28 13:12:46 -耗时 : 5
2018-06-28 13:12:46 -返回值 : com.bootdo.common.utils.PageUtils@19190d4d
2018-06-28 13:12:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:12:52 -请求地址 : http://127.0.0.1:8099/system/user/edit/136
2018-06-28 13:12:52 -HTTP METHOD : GET
2018-06-28 13:12:52 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.edit
2018-06-28 13:12:52 -参数 : [{}, 136]
2018-06-28 13:12:52 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-06-28 13:12:52 -==> Parameters: 136(Long)
2018-06-28 13:12:52 -<==      Total: 0
2018-06-28 13:12:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 13:12:52 -==> Parameters: 136(Long)
2018-06-28 13:12:52 -<==      Total: 1
2018-06-28 13:12:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-06-28 13:12:52 -==> Parameters: 9(Long)
2018-06-28 13:12:52 -<==      Total: 1
2018-06-28 13:12:52 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-06-28 13:12:52 -==> Parameters: 136(Long)
2018-06-28 13:12:52 -<==      Total: 0
2018-06-28 13:12:52 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 13:12:52 -==> Parameters: 
2018-06-28 13:12:52 -<==      Total: 2
2018-06-28 13:12:52 -耗时 : 8
2018-06-28 13:12:52 -返回值 : system/user/edit
2018-06-28 13:12:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:12:52 -==> Parameters: 1(Long), admin(String), 编辑用户(String), 8(Integer), com.bootdo.system.user.controller.UserController.edit()(String), null, 127.0.0.1(String), 2018-06-28 13:12:52.961(Timestamp)
2018-06-28 13:12:52 -<==    Updates: 1
2018-06-28 13:13:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:01 -请求地址 : http://127.0.0.1:8099/system/user/resetPwd/136
2018-06-28 13:13:01 -HTTP METHOD : GET
2018-06-28 13:13:01 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.resetPwd
2018-06-28 13:13:01 -参数 : [136, {}]
2018-06-28 13:13:01 -耗时 : 0
2018-06-28 13:13:01 -返回值 : system/user/reset_pwd
2018-06-28 13:13:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:13:01 -==> Parameters: 1(Long), admin(String), 请求更改用户密码(String), 0(Integer), com.bootdo.system.user.controller.UserController.resetPwd()(String), null, 127.0.0.1(String), 2018-06-28 13:13:01.524(Timestamp)
2018-06-28 13:13:01 -<==    Updates: 1
2018-06-28 13:13:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:05 -请求地址 : http://127.0.0.1:8099/system/role
2018-06-28 13:13:05 -HTTP METHOD : GET
2018-06-28 13:13:05 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 13:13:05 -参数 : []
2018-06-28 13:13:05 -耗时 : 0
2018-06-28 13:13:05 -返回值 : system/role/role
2018-06-28 13:13:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:05 -请求地址 : http://127.0.0.1:8099/system/role/list
2018-06-28 13:13:05 -HTTP METHOD : GET
2018-06-28 13:13:05 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.list
2018-06-28 13:13:05 -参数 : []
2018-06-28 13:13:05 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 13:13:05 -==> Parameters: 
2018-06-28 13:13:05 -<==      Total: 2
2018-06-28 13:13:05 -耗时 : 1
2018-06-28 13:13:05 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-06-28 13:13:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:15 -请求地址 : http://127.0.0.1:8099/system/dept
2018-06-28 13:13:15 -HTTP METHOD : GET
2018-06-28 13:13:15 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.dept
2018-06-28 13:13:15 -参数 : []
2018-06-28 13:13:15 -耗时 : 0
2018-06-28 13:13:15 -返回值 : system/dept/dept
2018-06-28 13:13:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:15 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:13:15 -请求地址 : http://127.0.0.1:8099/system/dept/list
2018-06-28 13:13:15 -HTTP METHOD : GET
2018-06-28 13:13:15 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.list
2018-06-28 13:13:15 -参数 : []
2018-06-28 13:13:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 13:13:15 -==> Parameters: 
2018-06-28 13:13:15 -<==      Total: 10
2018-06-28 13:13:15 -耗时 : 2
2018-06-28 13:13:15 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-06-28 13:19:37 -WebSocketSession[2 current WS(2)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 54], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 469]
2018-06-28 13:21:29 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 11:18:00 CST 2018]; root of context hierarchy
2018-06-28 13:21:29 -Stopping beans in phase 2147483647
2018-06-28 13:21:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 13:21:29 -Stopping...
2018-06-28 13:21:29 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 13:21:29 -Stopped.
2018-06-28 13:21:29 -Unregistering JMX-exposed beans on shutdown
2018-06-28 13:21:29 -Unregistering JMX-exposed beans
2018-06-28 13:21:29 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 13:21:29 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 13:21:29 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 13:21:29 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 13:21:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 13:21:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 13:21:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 13:21:29 -Shutting down Quartz Scheduler
2018-06-28 13:21:29 -{dataSource-1} closed
2018-06-28 13:21:29 -Disabled session validation scheduler.
2018-06-28 13:21:32 -Starting BootdoApplication on localhost with PID 6999 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 13:21:32 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 13:21:32 -The following profiles are active: dev
2018-06-28 13:21:32 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 13:21:32 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:21:32 CST 2018]; root of context hierarchy
2018-06-28 13:21:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 13:21:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7ee4c8c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:21:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$713df770] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:21:34 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:21:34 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:21:34 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 13:21:34 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:21:34 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:21:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:21:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:21:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:21:35 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 13:21:35 -Starting service [Tomcat]
2018-06-28 13:21:35 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 13:21:35 -Initializing Spring embedded WebApplicationContext
2018-06-28 13:21:35 -Root WebApplicationContext: initialization completed in 2742 ms
2018-06-28 13:21:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 13:21:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 13:21:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 13:21:36 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 13:21:36 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 13:21:36 -Filter xssFilter was not registered (disabled)
2018-06-28 13:21:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 13:21:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 13:21:36 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 13:21:36 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 13:21:36 -{dataSource-1} inited
2018-06-28 13:21:37 -ProcessEngine default created
2018-06-28 13:21:38 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:21:32 CST 2018]; root of context hierarchy
2018-06-28 13:21:38 -Using default implementation for ThreadExecutor
2018-06-28 13:21:38 -Job execution threads will use class loader of thread: main
2018-06-28 13:21:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 13:21:39 -Quartz Scheduler v.2.2.1 created.
2018-06-28 13:21:39 -RAMJobStore initialized.
2018-06-28 13:21:39 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 13:21:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 13:21:39 -Quartz scheduler version: 2.2.1
2018-06-28 13:21:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@12c78f36
2018-06-28 13:21:39 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 13:21:39 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 13:21:40 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 13:21:40 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 13:21:40 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 13:21:40 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 13:21:40 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 13:21:40 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 13:21:40 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 13:21:40 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 13:21:40 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 13:21:40 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 13:21:40 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 13:21:40 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 13:21:40 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 13:21:40 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 13:21:40 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 13:21:40 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 13:21:40 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 13:21:40 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 13:21:40 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 13:21:40 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 13:21:40 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 13:21:40 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 13:21:40 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 13:21:40 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 13:21:40 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 13:21:40 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 13:21:40 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 13:21:40 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 13:21:40 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 13:21:40 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 13:21:40 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 13:21:40 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 13:21:40 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 13:21:40 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 13:21:40 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 13:21:40 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 13:21:40 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 13:21:40 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 13:21:40 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 13:21:40 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 13:21:40 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 13:21:40 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 13:21:40 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 13:21:40 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 13:21:40 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 13:21:40 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 13:21:40 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 13:21:40 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 13:21:40 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 13:21:40 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 13:21:40 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 13:21:40 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 13:21:40 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 13:21:40 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 13:21:40 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 13:21:40 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 13:21:40 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 13:21:40 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 13:21:40 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 13:21:40 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 13:21:40 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 13:21:40 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 13:21:40 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 13:21:40 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 13:21:40 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 13:21:40 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 13:21:40 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 13:21:40 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 13:21:40 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 13:21:40 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 13:21:40 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 13:21:40 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 13:21:40 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 13:21:40 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 13:21:40 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 13:21:40 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 13:21:40 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 13:21:40 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 13:21:40 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 13:21:40 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 13:21:40 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 13:21:40 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 13:21:40 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 13:21:40 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 13:21:40 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 13:21:40 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 13:21:40 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 13:21:40 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 13:21:40 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 13:21:40 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 13:21:40 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 13:21:40 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:21:40 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 13:21:40 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 13:21:40 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 13:21:40 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 13:21:40 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:21:40 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 13:21:40 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 13:21:40 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 13:21:40 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 13:21:40 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 13:21:40 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 13:21:40 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 13:21:40 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 13:21:40 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 13:21:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 13:21:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 13:21:41 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 13:21:41 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:21:32 CST 2018]; root of context hierarchy
2018-06-28 13:21:41 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:21:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:21:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:21:41 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 13:21:41 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:21:43 -

Using default security password: f4bd580b-7376-4dda-ab84-b46b19f4f3cf

2018-06-28 13:21:43 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 13:21:43 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@1fe37d27, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1718de70, org.springframework.security.web.context.SecurityContextPersistenceFilter@7568134c, org.springframework.security.web.header.HeaderWriterFilter@188b9a1e, org.springframework.security.web.csrf.CsrfFilter@7c31e01f, org.springframework.security.web.authentication.logout.LogoutFilter@3a720ae3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28c75c93, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6164b3a2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6bfc5296, org.springframework.security.web.session.SessionManagementFilter@589a4305, org.springframework.security.web.access.ExceptionTranslationFilter@2eb73a42]
2018-06-28 13:21:44 -Registering beans for JMX exposure on startup
2018-06-28 13:21:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 13:21:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 13:21:44 -Starting beans in phase 2147483647
2018-06-28 13:21:44 -Context refreshed
2018-06-28 13:21:44 -Found 1 custom documentation plugin(s)
2018-06-28 13:21:44 -Scanning for api listing references
2018-06-28 13:21:44 -Generating unique operation named: removeUsingPOST_1
2018-06-28 13:21:44 -Generating unique operation named: addUsingGET_1
2018-06-28 13:21:44 -Generating unique operation named: editUsingGET_1
2018-06-28 13:21:44 -Generating unique operation named: listUsingGET_1
2018-06-28 13:21:44 -Generating unique operation named: removeUsingPOST_2
2018-06-28 13:21:44 -Generating unique operation named: removeUsingPOST_3
2018-06-28 13:21:44 -Generating unique operation named: saveUsingPOST_1
2018-06-28 13:21:44 -Generating unique operation named: updateUsingGET_1
2018-06-28 13:21:44 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 13:21:44 -Generating unique operation named: updateUsingPOST_1
2018-06-28 13:21:44 -Generating unique operation named: updateUsingPUT_1
2018-06-28 13:21:44 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 13:21:44 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 13:21:44 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 13:21:44 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 13:21:44 -Generating unique operation named: addUsingGET_2
2018-06-28 13:21:44 -Generating unique operation named: editUsingGET_2
2018-06-28 13:21:44 -Generating unique operation named: listUsingGET_2
2018-06-28 13:21:44 -Generating unique operation named: removeUsingPOST_4
2018-06-28 13:21:44 -Generating unique operation named: removeUsingPOST_5
2018-06-28 13:21:44 -Generating unique operation named: saveUsingPOST_2
2018-06-28 13:21:44 -Generating unique operation named: updateUsingGET_2
2018-06-28 13:21:44 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 13:21:44 -Generating unique operation named: updateUsingPOST_2
2018-06-28 13:21:44 -Generating unique operation named: updateUsingPUT_2
2018-06-28 13:21:44 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 13:21:44 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 13:21:44 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 13:21:44 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 13:21:44 -Generating unique operation named: addUsingGET_3
2018-06-28 13:21:44 -Generating unique operation named: editUsingGET_3
2018-06-28 13:21:44 -Generating unique operation named: listUsingGET_3
2018-06-28 13:21:44 -Generating unique operation named: removeUsingPOST_6
2018-06-28 13:21:44 -Generating unique operation named: removeUsingPOST_7
2018-06-28 13:21:44 -Generating unique operation named: saveUsingPOST_3
2018-06-28 13:21:44 -Generating unique operation named: updateUsingGET_3
2018-06-28 13:21:44 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 13:21:44 -Generating unique operation named: updateUsingPOST_3
2018-06-28 13:21:44 -Generating unique operation named: updateUsingPUT_3
2018-06-28 13:21:44 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 13:21:44 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 13:21:44 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 13:21:44 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 13:21:45 -Generating unique operation named: editUsingGET_4
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_4
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPOST_4
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_5
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_8
2018-06-28 13:21:45 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 13:21:45 -Generating unique operation named: addUsingGET_4
2018-06-28 13:21:45 -Generating unique operation named: editUsingGET_5
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_6
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_9
2018-06-28 13:21:45 -Generating unique operation named: saveUsingPOST_4
2018-06-28 13:21:45 -Generating unique operation named: treeUsingGET_1
2018-06-28 13:21:45 -Generating unique operation named: treeUsingGET_2
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPOST_5
2018-06-28 13:21:45 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 13:21:45 -Generating unique operation named: editUsingGET_6
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_7
2018-06-28 13:21:45 -Generating unique operation named: addUsingGET_5
2018-06-28 13:21:45 -Generating unique operation named: editUsingGET_7
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_8
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_10
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_11
2018-06-28 13:21:45 -Generating unique operation named: saveUsingPOST_5
2018-06-28 13:21:45 -Generating unique operation named: updateUsingGET_4
2018-06-28 13:21:45 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPOST_6
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPUT_4
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 13:21:45 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 13:21:45 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 13:21:45 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 13:21:45 -Generating unique operation named: addUsingGET_6
2018-06-28 13:21:45 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 13:21:45 -Generating unique operation named: deployUsingPOST_1
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_9
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_12
2018-06-28 13:21:45 -Generating unique operation named: addUsingGET_7
2018-06-28 13:21:45 -Generating unique operation named: editUsingGET_8
2018-06-28 13:21:45 -Generating unique operation named: infoUsingGET_1
2018-06-28 13:21:45 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 13:21:45 -Generating unique operation named: infoUsingPOST_1
2018-06-28 13:21:45 -Generating unique operation named: infoUsingPUT_1
2018-06-28 13:21:45 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 13:21:45 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 13:21:45 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 13:21:45 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_10
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_13
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_14
2018-06-28 13:21:45 -Generating unique operation named: saveUsingPOST_6
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPOST_7
2018-06-28 13:21:45 -Generating unique operation named: addUsingGET_8
2018-06-28 13:21:45 -Generating unique operation named: editUsingGET_9
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_11
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_15
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_16
2018-06-28 13:21:45 -Generating unique operation named: saveUsingPOST_7
2018-06-28 13:21:45 -Generating unique operation named: updateUsingGET_5
2018-06-28 13:21:45 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPOST_8
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPUT_5
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 13:21:45 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 13:21:45 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 13:21:45 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 13:21:45 -Generating unique operation named: addUsingGET_9
2018-06-28 13:21:45 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 13:21:45 -Generating unique operation named: editUsingGET_10
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_12
2018-06-28 13:21:45 -Generating unique operation named: saveUsingPOST_8
2018-06-28 13:21:45 -Generating unique operation named: saveUsingPOST_9
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPOST_9
2018-06-28 13:21:45 -Generating unique operation named: addUsingGET_10
2018-06-28 13:21:45 -Generating unique operation named: editUsingGET_11
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_13
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_17
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_18
2018-06-28 13:21:45 -Generating unique operation named: updateUsingGET_6
2018-06-28 13:21:45 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPOST_10
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPUT_6
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 13:21:45 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 13:21:45 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 13:21:45 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_14
2018-06-28 13:21:45 -Generating unique operation named: listUsingHEAD_1
2018-06-28 13:21:45 -Generating unique operation named: listUsingPOST_1
2018-06-28 13:21:45 -Generating unique operation named: listUsingPUT_1
2018-06-28 13:21:45 -Generating unique operation named: listUsingPATCH_1
2018-06-28 13:21:45 -Generating unique operation named: listUsingDELETE_1
2018-06-28 13:21:45 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 13:21:45 -Generating unique operation named: listUsingTRACE_1
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_15
2018-06-28 13:21:45 -Generating unique operation named: addUsingGET_11
2018-06-28 13:21:45 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 13:21:45 -Generating unique operation named: editUsingGET_12
2018-06-28 13:21:45 -Generating unique operation named: listUsingGET_16
2018-06-28 13:21:45 -Generating unique operation named: removeUsingPOST_19
2018-06-28 13:21:45 -Generating unique operation named: saveUsingPOST_10
2018-06-28 13:21:45 -Generating unique operation named: treeUsingGET_3
2018-06-28 13:21:45 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 13:21:45 -Generating unique operation named: updateUsingPOST_11
2018-06-28 13:21:45 -Starting Quartz Scheduler now
2018-06-28 13:21:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 13:21:45 -Starting...
2018-06-28 13:21:45 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 13:21:45 -Started.
2018-06-28 13:21:45 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 13:21:45 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 13:21:45 -Using a shared selector for servlet write/read
2018-06-28 13:21:45 -Tomcat started on port(s): 8099 (http)
2018-06-28 13:21:45 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 13:21:45 -==> Parameters: 
2018-06-28 13:21:46 -<==      Total: 1
2018-06-28 13:21:46 -Started BootdoApplication in 13.901 seconds (JVM running for 14.503)
2018-06-28 13:22:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 13:22:03 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 13:22:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-06-28 13:22:03 -Enabling session validation scheduler...
2018-06-28 13:22:03 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:22:03 -HTTP METHOD : GET
2018-06-28 13:22:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:22:03 -参数 : []
2018-06-28 13:22:03 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 13:22:03 -HTTP METHOD : GET
2018-06-28 13:22:03 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 13:22:03 -参数 : [{}]
2018-06-28 13:22:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:22:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:22:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 13:22:03 -<==      Total: 0
2018-06-28 13:22:03 -==> Parameters: 1(Long)
2018-06-28 13:22:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:22:03 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:22:03 -<==      Total: 1
2018-06-28 13:22:03 -耗时 : 27
2018-06-28 13:22:03 -返回值 : com.bootdo.common.utils.PageUtils@5c9f7725
2018-06-28 13:22:03 -<==      Total: 29
2018-06-28 13:22:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 13:22:03 -==> Parameters: 150(Long)
2018-06-28 13:22:03 -<==      Total: 1
2018-06-28 13:22:03 -耗时 : 39
2018-06-28 13:22:03 -返回值 : index_v1
2018-06-28 13:22:03 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 13:22:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:22:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 13:22:03.365(Timestamp)
2018-06-28 13:22:03 -<==    Updates: 1
2018-06-28 13:22:03 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 13:22:03 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 13:22:03 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 13:22:03 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 13:22:03 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 13:22:03 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 13:22:03 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 13:22:03 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:22:03 -HTTP METHOD : GET
2018-06-28 13:22:03 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:22:03 -参数 : []
2018-06-28 13:22:03 -耗时 : 0
2018-06-28 13:22:03 -返回值 : main
2018-06-28 13:22:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:05 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 13:22:05 -HTTP METHOD : GET
2018-06-28 13:22:05 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 13:22:05 -HTTP METHOD : GET
2018-06-28 13:22:05 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 13:22:05 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 13:22:05 -参数 : []
2018-06-28 13:22:05 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 13:22:05 -耗时 : 0
2018-06-28 13:22:05 -返回值 : system/regexp/regexp
2018-06-28 13:22:05 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 13:22:05 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:22:05 -<==      Total: 10
2018-06-28 13:22:05 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 13:22:05 -==> Parameters: 
2018-06-28 13:22:05 -<==      Total: 1
2018-06-28 13:22:05 -耗时 : 10
2018-06-28 13:22:05 -返回值 : com.bootdo.common.utils.PageUtils@7e48fbcf
2018-06-28 13:22:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:06 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 13:22:06 -HTTP METHOD : GET
2018-06-28 13:22:06 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 13:22:06 -参数 : []
2018-06-28 13:22:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:06 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:22:06 -HTTP METHOD : GET
2018-06-28 13:22:06 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 13:22:06 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:22:06 -HTTP METHOD : GET
2018-06-28 13:22:06 -参数 : [{limit=10, offset=0}]
2018-06-28 13:22:06 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 13:22:06 -参数 : []
2018-06-28 13:22:06 -耗时 : 0
2018-06-28 13:22:06 -返回值 : system/dict/dict
2018-06-28 13:22:06 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 13:22:06 -HTTP METHOD : GET
2018-06-28 13:22:06 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 13:22:06 -参数 : []
2018-06-28 13:22:06 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 13:22:06 -==> Parameters: 
2018-06-28 13:22:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:22:06 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:22:06 -<==      Total: 31
2018-06-28 13:22:06 -耗时 : 10
2018-06-28 13:22:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:22:06 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 13:22:06 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 13:22:06.709(Timestamp)
2018-06-28 13:22:06 -<==    Updates: 1
2018-06-28 13:22:06 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$92cf61a7.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:22:06 -<==      Total: 10
2018-06-28 13:22:06 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:22:06 -==> Parameters: 
2018-06-28 13:22:06 -<==      Total: 1
2018-06-28 13:22:06 -耗时 : 15
2018-06-28 13:22:06 -返回值 : com.bootdo.common.utils.PageUtils@404d927e
2018-06-28 13:22:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:08 -请求地址 : http://127.0.0.1:8099/system/file/list
2018-06-28 13:22:08 -请求地址 : http://127.0.0.1:8099/system/file
2018-06-28 13:22:08 -HTTP METHOD : GET
2018-06-28 13:22:08 -HTTP METHOD : GET
2018-06-28 13:22:08 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.list
2018-06-28 13:22:08 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.sysFile
2018-06-28 13:22:08 -参数 : [{limit=12, offset=0, type=}]
2018-06-28 13:22:08 -参数 : [{}]
2018-06-28 13:22:08 -耗时 : 1
2018-06-28 13:22:08 -返回值 : system/file/file
2018-06-28 13:22:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-06-28 13:22:08 -==> Parameters: 0(Integer), 12(Integer)
2018-06-28 13:22:08 -<==      Total: 11
2018-06-28 13:22:08 -==>  Preparing: select count(*) from sys_file 
2018-06-28 13:22:08 -==> Parameters: 
2018-06-28 13:22:08 -<==      Total: 1
2018-06-28 13:22:08 -耗时 : 14
2018-06-28 13:22:08 -返回值 : com.bootdo.common.utils.PageUtils@a503f79
2018-06-28 13:22:10 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 13:22:10 -HTTP METHOD : GET
2018-06-28 13:22:10 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 13:22:10 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 13:22:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:10 -请求地址 : http://127.0.0.1:8099/system/user/
2018-06-28 13:22:10 -HTTP METHOD : GET
2018-06-28 13:22:10 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.user
2018-06-28 13:22:10 -参数 : [{}]
2018-06-28 13:22:10 -耗时 : 0
2018-06-28 13:22:10 -返回值 : system/user/user
2018-06-28 13:22:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 13:22:10 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:22:10 -<==      Total: 10
2018-06-28 13:22:10 -==>  Preparing: select count(*) from sys_user 
2018-06-28 13:22:10 -==> Parameters: 
2018-06-28 13:22:10 -<==      Total: 1
2018-06-28 13:22:10 -耗时 : 23
2018-06-28 13:22:10 -返回值 : com.bootdo.common.utils.PageUtils@48922eba
2018-06-28 13:22:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:12 -请求地址 : http://127.0.0.1:8099/system/role
2018-06-28 13:22:12 -HTTP METHOD : GET
2018-06-28 13:22:12 -请求地址 : http://127.0.0.1:8099/system/role/list
2018-06-28 13:22:12 -HTTP METHOD : GET
2018-06-28 13:22:12 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.list
2018-06-28 13:22:12 -参数 : []
2018-06-28 13:22:12 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 13:22:12 -参数 : []
2018-06-28 13:22:12 -耗时 : 1
2018-06-28 13:22:12 -返回值 : system/role/role
2018-06-28 13:22:12 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 13:22:12 -==> Parameters: 
2018-06-28 13:22:12 -<==      Total: 2
2018-06-28 13:22:12 -耗时 : 6
2018-06-28 13:22:12 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-06-28 13:22:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:16 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 13:22:16 -HTTP METHOD : GET
2018-06-28 13:22:16 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 13:22:16 -HTTP METHOD : GET
2018-06-28 13:22:16 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 13:22:16 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 13:22:16 -参数 : [{sort=order_num}]
2018-06-28 13:22:16 -参数 : [{}]
2018-06-28 13:22:16 -耗时 : 1
2018-06-28 13:22:16 -返回值 : system/menu/menu
2018-06-28 13:22:16 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 13:22:16 -==> Parameters: 
2018-06-28 13:22:16 -<==      Total: 66
2018-06-28 13:22:16 -耗时 : 22
2018-06-28 13:22:16 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='systemmenu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 13:22:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:19 -请求地址 : http://127.0.0.1:8099/system/dept
2018-06-28 13:22:19 -HTTP METHOD : GET
2018-06-28 13:22:19 -请求地址 : http://127.0.0.1:8099/system/dept/list
2018-06-28 13:22:19 -HTTP METHOD : GET
2018-06-28 13:22:19 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.dept
2018-06-28 13:22:19 -参数 : []
2018-06-28 13:22:19 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.list
2018-06-28 13:22:19 -参数 : []
2018-06-28 13:22:19 -耗时 : 0
2018-06-28 13:22:19 -返回值 : system/dept/dept
2018-06-28 13:22:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 13:22:19 -==> Parameters: 
2018-06-28 13:22:19 -<==      Total: 10
2018-06-28 13:22:19 -耗时 : 7
2018-06-28 13:22:19 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-06-28 13:22:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:33 -请求地址 : http://127.0.0.1:8099/system/generator
2018-06-28 13:22:33 -HTTP METHOD : GET
2018-06-28 13:22:33 -CLASS_METHOD : com.bootdo.system.generator.controller.GeneratorController.generator
2018-06-28 13:22:33 -参数 : []
2018-06-28 13:22:33 -耗时 : 0
2018-06-28 13:22:33 -返回值 : system/generator/list
2018-06-28 13:22:33 -请求地址 : http://127.0.0.1:8099/system/generator/list
2018-06-28 13:22:33 -HTTP METHOD : GET
2018-06-28 13:22:33 -CLASS_METHOD : com.bootdo.system.generator.controller.GeneratorController.list
2018-06-28 13:22:33 -参数 : []
2018-06-28 13:22:33 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2018-06-28 13:22:33 -==> Parameters: 
2018-06-28 13:22:33 -<==      Total: 43
2018-06-28 13:22:33 -耗时 : 22
2018-06-28 13:22:33 -返回值 : [{engine=InnoDB, createTime=2018-06-22 14:56:25.0, tableComment=数据库字典的索引表, tableName=SYS_DICT}, {engine=InnoDB, createTime=2018-06-22 15:04:56.0, tableComment=数据字典的内容, tableName=SYS_DICT_CONTENT}, {engine=InnoDB, createTime=2018-06-26 12:21:32.0, tableComment=系统正则表达式, tableName=SYS_REGEXP}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_evt_log}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_ge_bytearray}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_ge_property}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_actinst}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_attachment}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_comment}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_detail}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_identitylink}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_procinst}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_taskinst}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_hi_varinst}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_id_group}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_id_info}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_id_membership}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_id_user}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_procdef_info}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_re_deployment}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_re_model}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_re_procdef}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_ru_event_subscr}, {engine=InnoDB, createTime=2018-06-06 13:25:18.0, tableComment=, tableName=act_ru_execution}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=, tableName=act_ru_identitylink}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=, tableName=act_ru_job}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=, tableName=act_ru_task}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=, tableName=act_ru_variable}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=文章内容, tableName=blog_content}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=通知通告, tableName=oa_notify}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=通知通告发送记录, tableName=oa_notify_record}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=审批流程测试表, tableName=salary}, {engine=InnoDB, createTime=2018-06-06 13:25:19.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2018-06-22 14:56:20.0, tableComment=字典表, tableName=sys_dict3}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=文件上传, tableName=sys_file}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=菜单管理, tableName=sys_menu}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=角色, tableName=sys_role}, {engine=InnoDB, createTime=2018-06-06 13:25:20.0, tableComment=角色与菜单对应关系, tableName=sys_role_menu}, {engine=MyISAM, createTime=2018-06-06 13:25:22.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2018-06-06 13:25:22.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2018-06-06 13:25:22.0, tableComment=, tableName=sys_user_plus}, {engine=InnoDB, createTime=2018-06-06 13:25:22.0, tableComment=用户与角色对应关系, tableName=sys_user_role}]
2018-06-28 13:22:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:35 -请求地址 : http://127.0.0.1:8099/system/quartzjob
2018-06-28 13:22:35 -HTTP METHOD : GET
2018-06-28 13:22:35 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController
2018-06-28 13:22:35 -参数 : []
2018-06-28 13:22:35 -耗时 : 0
2018-06-28 13:22:35 -返回值 : system/quartzjob/quartzjob
2018-06-28 13:22:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:22:35 -请求地址 : http://127.0.0.1:8099/system/quartzjob/list
2018-06-28 13:22:35 -HTTP METHOD : GET
2018-06-28 13:22:35 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.list
2018-06-28 13:22:35 -参数 : [{limit=10, offset=0}]
2018-06-28 13:22:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2018-06-28 13:22:35 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:22:35 -<==      Total: 1
2018-06-28 13:22:35 -==>  Preparing: select count(*) from sys_task 
2018-06-28 13:22:35 -==> Parameters: 
2018-06-28 13:22:35 -<==      Total: 1
2018-06-28 13:22:35 -耗时 : 9
2018-06-28 13:22:35 -返回值 : com.bootdo.common.utils.PageUtils@562e4745
2018-06-28 13:22:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 9]
2018-06-28 13:22:48 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 13:22:48 -HTTP METHOD : GET
2018-06-28 13:22:48 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 13:22:48 -参数 : [{limit=10, offset=0, name=, deptId=j1_1}]
2018-06-28 13:22:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE dept_id = ? order by user_id desc limit ?, ? 
2018-06-28 13:22:48 -==> Parameters: j1_1(String), 0(Integer), 10(Integer)
2018-06-28 13:22:48 -<==      Total: 0
2018-06-28 13:22:48 -==>  Preparing: select count(*) from sys_user WHERE dept_id = ? 
2018-06-28 13:22:48 -==> Parameters: j1_1(String)
2018-06-28 13:22:48 -<==      Total: 1
2018-06-28 13:22:48 -耗时 : 7
2018-06-28 13:22:48 -返回值 : com.bootdo.common.utils.PageUtils@5ce133db
2018-06-28 13:26:39 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 13:26:39 -HTTP METHOD : GET
2018-06-28 13:26:39 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 13:26:39 -参数 : [{}]
2018-06-28 13:26:39 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:26:39 -HTTP METHOD : GET
2018-06-28 13:26:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:26:39 -参数 : []
2018-06-28 13:26:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 13:26:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:26:39 -==> Parameters: 1(Long)
2018-06-28 13:26:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:26:39 -<==      Total: 0
2018-06-28 13:26:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:26:39 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:26:39 -<==      Total: 1
2018-06-28 13:26:39 -耗时 : 7
2018-06-28 13:26:39 -返回值 : com.bootdo.common.utils.PageUtils@29ca438a
2018-06-28 13:26:39 -<==      Total: 29
2018-06-28 13:26:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 13:26:39 -==> Parameters: 150(Long)
2018-06-28 13:26:39 -<==      Total: 1
2018-06-28 13:26:39 -耗时 : 12
2018-06-28 13:26:39 -返回值 : index_v1
2018-06-28 13:26:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:26:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 13:26:39.211(Timestamp)
2018-06-28 13:26:39 -<==    Updates: 1
2018-06-28 13:26:39 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:26:39 -HTTP METHOD : GET
2018-06-28 13:26:39 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:26:39 -参数 : []
2018-06-28 13:26:39 -耗时 : 0
2018-06-28 13:26:39 -返回值 : main
2018-06-28 13:26:39 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:26:39 -HTTP METHOD : GET
2018-06-28 13:26:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:26:39 -参数 : []
2018-06-28 13:26:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:26:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:26:39 -<==      Total: 0
2018-06-28 13:26:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:26:39 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:26:39 -<==      Total: 1
2018-06-28 13:26:39 -耗时 : 5
2018-06-28 13:26:39 -返回值 : com.bootdo.common.utils.PageUtils@51674189
2018-06-28 13:26:39 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:26:39 -HTTP METHOD : GET
2018-06-28 13:26:39 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:26:39 -参数 : []
2018-06-28 13:26:39 -耗时 : 0
2018-06-28 13:26:39 -返回值 : main
2018-06-28 13:26:44 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 13:26:44 -HTTP METHOD : GET
2018-06-28 13:26:44 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 13:26:44 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 13:26:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 13:26:44 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:26:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:44 -请求地址 : http://127.0.0.1:8099/system/user/
2018-06-28 13:26:44 -HTTP METHOD : GET
2018-06-28 13:26:44 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.user
2018-06-28 13:26:44 -参数 : [{}]
2018-06-28 13:26:44 -耗时 : 1
2018-06-28 13:26:44 -返回值 : system/user/user
2018-06-28 13:26:44 -<==      Total: 10
2018-06-28 13:26:44 -==>  Preparing: select count(*) from sys_user 
2018-06-28 13:26:44 -==> Parameters: 
2018-06-28 13:26:44 -<==      Total: 1
2018-06-28 13:26:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:44 -耗时 : 10
2018-06-28 13:26:44 -返回值 : com.bootdo.common.utils.PageUtils@3f3b58ec
2018-06-28 13:26:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:44 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:44 -请求地址 : http://127.0.0.1:8099/system/dept/tree
2018-06-28 13:26:44 -HTTP METHOD : GET
2018-06-28 13:26:44 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.tree
2018-06-28 13:26:44 -参数 : []
2018-06-28 13:26:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 13:26:44 -==> Parameters: 
2018-06-28 13:26:44 -<==      Total: 10
2018-06-28 13:26:44 -耗时 : 4
2018-06-28 13:26:44 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-06-28 13:26:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:48 -请求地址 : http://127.0.0.1:8099/system/role
2018-06-28 13:26:48 -请求地址 : http://127.0.0.1:8099/system/role/list
2018-06-28 13:26:48 -HTTP METHOD : GET
2018-06-28 13:26:48 -HTTP METHOD : GET
2018-06-28 13:26:48 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.list
2018-06-28 13:26:48 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 13:26:48 -参数 : []
2018-06-28 13:26:48 -参数 : []
2018-06-28 13:26:48 -耗时 : 0
2018-06-28 13:26:48 -返回值 : system/role/role
2018-06-28 13:26:48 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 13:26:48 -==> Parameters: 
2018-06-28 13:26:48 -<==      Total: 2
2018-06-28 13:26:48 -耗时 : 2
2018-06-28 13:26:48 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-06-28 13:26:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:50 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 13:26:50 -HTTP METHOD : GET
2018-06-28 13:26:50 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 13:26:50 -参数 : [{sort=order_num}]
2018-06-28 13:26:50 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 13:26:50 -HTTP METHOD : GET
2018-06-28 13:26:50 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 13:26:50 -参数 : [{}]
2018-06-28 13:26:50 -耗时 : 1
2018-06-28 13:26:50 -返回值 : system/menu/menu
2018-06-28 13:26:50 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 13:26:50 -==> Parameters: 
2018-06-28 13:26:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:50 -<==      Total: 66
2018-06-28 13:26:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:26:50 -耗时 : 9
2018-06-28 13:26:50 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='systemmenu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 13:27:03 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:152)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:249)
	at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
	at org.apache.shiro.subject.support.DefaultSubjectContext.resolvePrincipals(DefaultSubjectContext.java:164)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolvePrincipals(DefaultSecurityManager.java:487)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:342)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:27:03 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 13:27:03 -HTTP METHOD : GET
2018-06-28 13:27:03 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 13:27:03 -参数 : []
2018-06-28 13:27:03 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 13:27:03 -==> Parameters: 
2018-06-28 13:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:03 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 13:27:03 -HTTP METHOD : GET
2018-06-28 13:27:03 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 13:27:03 -参数 : []
2018-06-28 13:27:03 -耗时 : 1
2018-06-28 13:27:03 -返回值 : system/dict/dict
2018-06-28 13:27:03 -<==      Total: 31
2018-06-28 13:27:03 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:27:03 -耗时 : 3
2018-06-28 13:27:03 -HTTP METHOD : GET
2018-06-28 13:27:03 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:27:03 -参数 : [{limit=10, offset=0}]
2018-06-28 13:27:03 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 13:27:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:27:03 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:03 -<==      Total: 10
2018-06-28 13:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:03 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:27:03 -==> Parameters: 
2018-06-28 13:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:03 -<==      Total: 1
2018-06-28 13:27:03 -耗时 : 7
2018-06-28 13:27:03 -返回值 : com.bootdo.common.utils.PageUtils@1b88d0ef
2018-06-28 13:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:06 -请求地址 : http://127.0.0.1:8099/system/file/list
2018-06-28 13:27:06 -HTTP METHOD : GET
2018-06-28 13:27:06 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.list
2018-06-28 13:27:06 -参数 : [{limit=12, offset=0, type=}]
2018-06-28 13:27:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-06-28 13:27:06 -==> Parameters: 0(Integer), 12(Integer)
2018-06-28 13:27:06 -<==      Total: 11
2018-06-28 13:27:06 -==>  Preparing: select count(*) from sys_file 
2018-06-28 13:27:06 -==> Parameters: 
2018-06-28 13:27:06 -<==      Total: 1
2018-06-28 13:27:06 -耗时 : 8
2018-06-28 13:27:06 -返回值 : com.bootdo.common.utils.PageUtils@4b2123e0
2018-06-28 13:27:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:06 -请求地址 : http://127.0.0.1:8099/system/file
2018-06-28 13:27:06 -HTTP METHOD : GET
2018-06-28 13:27:06 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.sysFile
2018-06-28 13:27:06 -参数 : [{}]
2018-06-28 13:27:06 -耗时 : 0
2018-06-28 13:27:06 -返回值 : system/file/file
2018-06-28 13:27:32 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:27:32 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:27:32 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:27:32 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:27:36 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 13:27:36 -HTTP METHOD : GET
2018-06-28 13:27:36 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 13:27:36 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 13:27:36 -HTTP METHOD : GET
2018-06-28 13:27:36 -参数 : []
2018-06-28 13:27:36 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 13:27:36 -参数 : []
2018-06-28 13:27:36 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 13:27:36 -==> Parameters: 
2018-06-28 13:27:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:36 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$92cf61a7.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:27:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:27:36 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:27:36 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 13:27:36 -<==      Total: 31
2018-06-28 13:27:36 -HTTP METHOD : GET
2018-06-28 13:27:36 -HTTP METHOD : GET
2018-06-28 13:27:36 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:27:36 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 13:27:36 -参数 : [{limit=10, offset=0}]
2018-06-28 13:27:36 -参数 : []
2018-06-28 13:27:36 -耗时 : 1
2018-06-28 13:27:36 -耗时 : 3
2018-06-28 13:27:36 -返回值 : system/dict/dict
2018-06-28 13:27:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:27:36 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 13:27:36 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 13:27:36.833(Timestamp)
2018-06-28 13:27:36 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:27:36 -<==    Updates: 1
2018-06-28 13:27:36 -<==      Total: 10
2018-06-28 13:27:36 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:27:36 -==> Parameters: 
2018-06-28 13:27:36 -<==      Total: 1
2018-06-28 13:27:36 -耗时 : 7
2018-06-28 13:27:36 -返回值 : com.bootdo.common.utils.PageUtils@4e0aec8
2018-06-28 13:27:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:36 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:41 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:27:41 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:27:41 -HTTP METHOD : GET
2018-06-28 13:27:41 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:27:41 -参数 : [{limit=10, offset=0, type=}]
2018-06-28 13:27:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:27:41 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:27:41 -<==      Total: 10
2018-06-28 13:27:41 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:27:41 -==> Parameters: 
2018-06-28 13:27:41 -<==      Total: 1
2018-06-28 13:27:41 -耗时 : 4
2018-06-28 13:27:41 -返回值 : com.bootdo.common.utils.PageUtils@3dbcf5b0
2018-06-28 13:45:35 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 13:45:35 -==> Parameters: 1(Long)
2018-06-28 13:45:35 -<==      Total: 51
2018-06-28 13:45:35 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:35 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:45:35 -HTTP METHOD : GET
2018-06-28 13:45:35 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:45:35 -参数 : [{}]
2018-06-28 13:45:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:45:35 -null
java.lang.NullPointerException: null
	at com.bootdo.common.utils.Query.<init>(Query.java:19)
	at com.bootdo.system.dict.controller.DictController.list(DictController.java:54)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$92cf61a7.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:45:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/list(String), java.lang.NullPointerException(String), null, 2018-06-28 13:45:35.469(Timestamp)
2018-06-28 13:45:35 -<==    Updates: 1
2018-06-28 13:45:37 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:37 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:45:37 -HTTP METHOD : GET
2018-06-28 13:45:37 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:45:37 -参数 : [{}]
2018-06-28 13:45:37 -null
java.lang.NullPointerException: null
	at com.bootdo.common.utils.Query.<init>(Query.java:19)
	at com.bootdo.system.dict.controller.DictController.list(DictController.java:54)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$92cf61a7.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:45:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:45:37 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/list(String), java.lang.NullPointerException(String), null, 2018-06-28 13:45:37.791(Timestamp)
2018-06-28 13:45:37 -<==    Updates: 1
2018-06-28 13:45:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:47 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 13:45:47 -HTTP METHOD : GET
2018-06-28 13:45:47 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 13:45:47 -参数 : []
2018-06-28 13:45:47 -耗时 : 0
2018-06-28 13:45:47 -返回值 : system/regexp/regexp
2018-06-28 13:45:47 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 13:45:47 -HTTP METHOD : GET
2018-06-28 13:45:47 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 13:45:47 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 13:45:47 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 13:45:47 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:45:47 -<==      Total: 10
2018-06-28 13:45:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:47 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 13:45:47 -==> Parameters: 
2018-06-28 13:45:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:47 -<==      Total: 1
2018-06-28 13:45:47 -耗时 : 6
2018-06-28 13:45:47 -返回值 : com.bootdo.common.utils.PageUtils@4d30550f
2018-06-28 13:45:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:48 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 13:45:48 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 13:45:48 -HTTP METHOD : GET
2018-06-28 13:45:48 -HTTP METHOD : GET
2018-06-28 13:45:48 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 13:45:48 -参数 : []
2018-06-28 13:45:48 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 13:45:48 -参数 : []
2018-06-28 13:45:48 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 13:45:48 -==> Parameters: 
2018-06-28 13:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:48 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$92cf61a7.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:45:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:45:48 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 13:45:48 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:45:48 -HTTP METHOD : GET
2018-06-28 13:45:48 -<==      Total: 31
2018-06-28 13:45:48 -HTTP METHOD : GET
2018-06-28 13:45:48 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:45:48 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 13:45:48 -参数 : [{limit=10, offset=0}]
2018-06-28 13:45:48 -参数 : []
2018-06-28 13:45:48 -耗时 : 3
2018-06-28 13:45:48 -耗时 : 1
2018-06-28 13:45:48 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 13:45:48.61(Timestamp)
2018-06-28 13:45:48 -返回值 : system/dict/dict
2018-06-28 13:45:48 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 13:45:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:45:48 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:45:48 -<==    Updates: 1
2018-06-28 13:45:48 -<==      Total: 10
2018-06-28 13:45:48 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:45:48 -==> Parameters: 
2018-06-28 13:45:48 -<==      Total: 1
2018-06-28 13:45:48 -耗时 : 6
2018-06-28 13:45:48 -返回值 : com.bootdo.common.utils.PageUtils@4ee93b
2018-06-28 13:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:02 -请求地址 : http://127.0.0.1:8099/system/file/list
2018-06-28 13:46:02 -HTTP METHOD : GET
2018-06-28 13:46:02 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.list
2018-06-28 13:46:02 -参数 : [{limit=12, offset=0, type=}]
2018-06-28 13:46:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2018-06-28 13:46:02 -==> Parameters: 0(Integer), 12(Integer)
2018-06-28 13:46:02 -<==      Total: 11
2018-06-28 13:46:02 -==>  Preparing: select count(*) from sys_file 
2018-06-28 13:46:02 -==> Parameters: 
2018-06-28 13:46:02 -<==      Total: 1
2018-06-28 13:46:02 -耗时 : 5
2018-06-28 13:46:02 -返回值 : com.bootdo.common.utils.PageUtils@194bcc0e
2018-06-28 13:46:02 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:02 -请求地址 : http://127.0.0.1:8099/system/file
2018-06-28 13:46:02 -HTTP METHOD : GET
2018-06-28 13:46:02 -CLASS_METHOD : com.bootdo.system.file.controller.FileController.sysFile
2018-06-28 13:46:02 -参数 : [{}]
2018-06-28 13:46:02 -耗时 : 1
2018-06-28 13:46:02 -返回值 : system/file/file
2018-06-28 13:46:04 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 13:46:04 -HTTP METHOD : GET
2018-06-28 13:46:04 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 13:46:04 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 13:46:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 13:46:04 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:46:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:04 -请求地址 : http://127.0.0.1:8099/system/user/
2018-06-28 13:46:04 -HTTP METHOD : GET
2018-06-28 13:46:04 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.user
2018-06-28 13:46:04 -<==      Total: 10
2018-06-28 13:46:04 -参数 : [{}]
2018-06-28 13:46:04 -耗时 : 1
2018-06-28 13:46:04 -返回值 : system/user/user
2018-06-28 13:46:04 -==>  Preparing: select count(*) from sys_user 
2018-06-28 13:46:04 -==> Parameters: 
2018-06-28 13:46:04 -<==      Total: 1
2018-06-28 13:46:04 -耗时 : 6
2018-06-28 13:46:04 -返回值 : com.bootdo.common.utils.PageUtils@1b70f840
2018-06-28 13:46:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:04 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:04 -请求地址 : http://127.0.0.1:8099/system/dept/tree
2018-06-28 13:46:04 -HTTP METHOD : GET
2018-06-28 13:46:04 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.tree
2018-06-28 13:46:04 -参数 : []
2018-06-28 13:46:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 13:46:04 -==> Parameters: 
2018-06-28 13:46:04 -<==      Total: 10
2018-06-28 13:46:04 -耗时 : 2
2018-06-28 13:46:04 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-06-28 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:05 -请求地址 : http://127.0.0.1:8099/system/role/list
2018-06-28 13:46:05 -请求地址 : http://127.0.0.1:8099/system/role
2018-06-28 13:46:05 -HTTP METHOD : GET
2018-06-28 13:46:05 -HTTP METHOD : GET
2018-06-28 13:46:05 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.list
2018-06-28 13:46:05 -参数 : []
2018-06-28 13:46:05 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 13:46:05 -参数 : []
2018-06-28 13:46:05 -耗时 : 0
2018-06-28 13:46:05 -返回值 : system/role/role
2018-06-28 13:46:05 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 13:46:05 -==> Parameters: 
2018-06-28 13:46:05 -<==      Total: 2
2018-06-28 13:46:05 -耗时 : 2
2018-06-28 13:46:05 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-06-28 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:07 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 13:46:07 -HTTP METHOD : GET
2018-06-28 13:46:07 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 13:46:07 -参数 : [{sort=order_num}]
2018-06-28 13:46:07 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 13:46:07 -HTTP METHOD : GET
2018-06-28 13:46:07 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 13:46:07 -参数 : [{}]
2018-06-28 13:46:07 -耗时 : 0
2018-06-28 13:46:07 -返回值 : system/menu/menu
2018-06-28 13:46:07 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 13:46:07 -==> Parameters: 
2018-06-28 13:46:07 -<==      Total: 66
2018-06-28 13:46:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:07 -耗时 : 6
2018-06-28 13:46:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:07 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='systemmenu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 13:46:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:46:07 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:34 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 13:47:34 -HTTP METHOD : GET
2018-06-28 13:47:34 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 13:47:34 -参数 : [{}]
2018-06-28 13:47:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 13:47:34 -==> Parameters: 1(Long)
2018-06-28 13:47:34 -<==      Total: 29
2018-06-28 13:47:34 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:47:34 -HTTP METHOD : GET
2018-06-28 13:47:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:47:34 -参数 : []
2018-06-28 13:47:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:47:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:47:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 13:47:34 -<==      Total: 0
2018-06-28 13:47:34 -==> Parameters: 150(Long)
2018-06-28 13:47:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:47:34 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:47:34 -<==      Total: 1
2018-06-28 13:47:34 -<==      Total: 1
2018-06-28 13:47:34 -耗时 : 4
2018-06-28 13:47:34 -返回值 : com.bootdo.common.utils.PageUtils@2efccd27
2018-06-28 13:47:34 -耗时 : 10
2018-06-28 13:47:34 -返回值 : index_v1
2018-06-28 13:47:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:47:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 13:47:34.031(Timestamp)
2018-06-28 13:47:34 -<==    Updates: 1
2018-06-28 13:47:34 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:47:34 -HTTP METHOD : GET
2018-06-28 13:47:34 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:47:34 -参数 : []
2018-06-28 13:47:34 -耗时 : 0
2018-06-28 13:47:34 -返回值 : main
2018-06-28 13:47:34 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:47:34 -HTTP METHOD : GET
2018-06-28 13:47:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:47:34 -参数 : []
2018-06-28 13:47:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:47:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:47:34 -<==      Total: 0
2018-06-28 13:47:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:47:34 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:47:34 -<==      Total: 1
2018-06-28 13:47:34 -耗时 : 3
2018-06-28 13:47:34 -返回值 : com.bootdo.common.utils.PageUtils@7f3d1fb4
2018-06-28 13:47:34 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:47:34 -HTTP METHOD : GET
2018-06-28 13:47:34 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:47:34 -参数 : []
2018-06-28 13:47:34 -耗时 : 0
2018-06-28 13:47:34 -返回值 : main
2018-06-28 13:47:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:39 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 13:47:39 -HTTP METHOD : GET
2018-06-28 13:47:39 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 13:47:39 -参数 : [{sort=order_num}]
2018-06-28 13:47:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:39 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 13:47:39 -==> Parameters: 
2018-06-28 13:47:39 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 13:47:39 -HTTP METHOD : GET
2018-06-28 13:47:39 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 13:47:39 -参数 : [{}]
2018-06-28 13:47:39 -耗时 : 0
2018-06-28 13:47:39 -返回值 : system/menu/menu
2018-06-28 13:47:39 -<==      Total: 66
2018-06-28 13:47:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:39 -耗时 : 5
2018-06-28 13:47:39 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='system:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 13:47:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:42 -从redis中删除 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:42 -请求地址 : http://127.0.0.1:8099/
2018-06-28 13:47:42 -HTTP METHOD : GET
2018-06-28 13:47:42 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.welcome
2018-06-28 13:47:42 -参数 : [{}]
2018-06-28 13:47:42 -耗时 : 0
2018-06-28 13:47:42 -返回值 : redirect:/blog
2018-06-28 13:47:42 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 13:47:42 -HTTP METHOD : GET
2018-06-28 13:47:42 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 13:47:42 -参数 : []
2018-06-28 13:47:42 -耗时 : 0
2018-06-28 13:47:42 -返回值 : blog/index/main
2018-06-28 13:47:43 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 13:47:43 -HTTP METHOD : GET
2018-06-28 13:47:43 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 13:47:43 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 13:47:43 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 13:47:43 -==> Parameters: article(String)
2018-06-28 13:47:43 -<==      Total: 10
2018-06-28 13:47:43 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 13:47:43 -==> Parameters: article(String)
2018-06-28 13:47:43 -<==      Total: 1
2018-06-28 13:47:43 -耗时 : 27
2018-06-28 13:47:43 -返回值 : com.bootdo.common.utils.PageUtils@b8b6fb1
2018-06-28 13:47:44 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 13:47:44 -HTTP METHOD : GET
2018-06-28 13:47:44 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 13:47:44 -参数 : []
2018-06-28 13:47:44 -耗时 : 1
2018-06-28 13:47:44 -返回值 : login
2018-06-28 13:47:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 13:47:45 -==> Parameters: admin(String)
2018-06-28 13:47:45 -<==      Total: 1
2018-06-28 13:47:45 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 13:47:45 -HTTP METHOD : POST
2018-06-28 13:47:45 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 13:47:45 -参数 : [admin, 111111]
2018-06-28 13:47:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 13:47:45 -==> Parameters: admin(String)
2018-06-28 13:47:45 -<==      Total: 1
2018-06-28 13:47:45 -耗时 : 10
2018-06-28 13:47:45 -返回值 : {msg=操作成功, code=0}
2018-06-28 13:47:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:47:45 -==> Parameters: 1(Long), admin(String), 登录(String), 11(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 13:47:45.815(Timestamp)
2018-06-28 13:47:45 -<==    Updates: 1
2018-06-28 13:47:45 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:47:45 -HTTP METHOD : GET
2018-06-28 13:47:45 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 13:47:45 -HTTP METHOD : GET
2018-06-28 13:47:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:47:45 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 13:47:45 -参数 : [{}]
2018-06-28 13:47:45 -参数 : []
2018-06-28 13:47:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:47:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:47:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 13:47:45 -==> Parameters: 1(Long)
2018-06-28 13:47:45 -<==      Total: 0
2018-06-28 13:47:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:47:45 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:47:45 -<==      Total: 1
2018-06-28 13:47:45 -耗时 : 4
2018-06-28 13:47:45 -返回值 : com.bootdo.common.utils.PageUtils@1adb649a
2018-06-28 13:47:45 -<==      Total: 29
2018-06-28 13:47:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 13:47:45 -==> Parameters: 150(Long)
2018-06-28 13:47:45 -<==      Total: 1
2018-06-28 13:47:45 -耗时 : 8
2018-06-28 13:47:45 -返回值 : index_v1
2018-06-28 13:47:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:47:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 8(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 13:47:45.841(Timestamp)
2018-06-28 13:47:45 -<==    Updates: 1
2018-06-28 13:47:45 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:47:45 -HTTP METHOD : GET
2018-06-28 13:47:45 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:47:45 -参数 : []
2018-06-28 13:47:45 -耗时 : 0
2018-06-28 13:47:45 -返回值 : main
2018-06-28 13:47:45 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:47:45 -HTTP METHOD : GET
2018-06-28 13:47:45 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:47:45 -参数 : []
2018-06-28 13:47:45 -耗时 : 0
2018-06-28 13:47:45 -返回值 : main
2018-06-28 13:47:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 13:47:51 -==> Parameters: 1(Long)
2018-06-28 13:47:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 13:47:51 -==> Parameters: 1(Long)
2018-06-28 13:47:51 -<==      Total: 51
2018-06-28 13:47:51 -<==      Total: 51
2018-06-28 13:47:51 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:51 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:51 -请求地址 : http://127.0.0.1:8099/system/menu/
2018-06-28 13:47:51 -请求地址 : http://127.0.0.1:8099/system/menu/list
2018-06-28 13:47:51 -HTTP METHOD : GET
2018-06-28 13:47:51 -HTTP METHOD : GET
2018-06-28 13:47:51 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.menu
2018-06-28 13:47:51 -参数 : [{}]
2018-06-28 13:47:51 -耗时 : 1
2018-06-28 13:47:51 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.list
2018-06-28 13:47:51 -参数 : [{sort=order_num}]
2018-06-28 13:47:51 -返回值 : system/menu/menu
2018-06-28 13:47:51 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2018-06-28 13:47:51 -==> Parameters: 
2018-06-28 13:47:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:51 -<==      Total: 66
2018-06-28 13:47:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:51 -耗时 : 5
2018-06-28 13:47:51 -返回值 : [MenuDO{menuId=51, parentId=50, name='新增', url='', perms='blog:bContent:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='system:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='system:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=58, parentId=50, name='编辑', url='', perms='blog:bContent:edit', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=59, parentId=50, name='删除', url='', perms='blog:bContent:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=60, parentId=50, name='批量删除', url='', perms='blog:bContent:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='system:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='system:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='system/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=94, parentId=93, name='模型管理', url='activiti/model', perms='', type=1, icon='fa fa-sort-amount-asc', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=95, parentId=94, name='全部权限', url='', perms='activiti:model', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=96, parentId=93, name='流程管理', url='activiti/process', perms='', type=1, icon='fa fa-flag', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=99, parentId=96, name='所有权限', url='', perms='act:process', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=101, parentId=93, name='待办任务', url='activiti/task/todo', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=77, name='swagger', url='/swagger-ui.html', perms='', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=0, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='system/user/', perms='system:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='system:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='system:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='system:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='system:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='system:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='system:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='system:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='system:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='system:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='system:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='system/log', perms='system:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='system:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='system:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='system:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=68, parentId=49, name='发布文章', url='/blog/bContent/add', perms='blog:bContent:add', type=1, icon='fa fa-edit', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=1, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=7, parentId=3, name='角色管理', url='system/role', perms='system:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=50, parentId=49, name='文章列表', url='blog/bContent', perms='blog:bContent:bContent', type=1, icon='fa fa-file-image-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/dept/add', perms='system:dept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/system/dict', perms='system:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=1, name='正则管理', url='/system/regexp', perms='system:regexp:regexp', type=1, icon='fa fa-map-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=106, parentId=105, name='增加', url='system/regexp/add', perms='system:regexp:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='system/menu/', perms='system:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/system/file', perms='system:file:file', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/dept/remove', perms='system:dept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/system/dict/add', perms='system:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/system/dict/edit', perms='system:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=105, name='修改', url='system/regexp/edit', perms='system:regexp:edit', type=2, icon='fa fa-wrench', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=48, parentId=77, name='代码生成', url='system/generator', perms='system:generator', type=1, icon='fa fa-code', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='部门管理', url='/system/dept', perms='system:dept:dept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/dept/edit', perms='system:dept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/system/dict/remove', perms='system:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=105, name='删除', url='system/regexp/remove', perms='system:regexp:remove', type=2, icon='fa fa-close', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计划任务', url='system/quartzjob', perms='system:quartzjob:quartzjob', type=1, icon='fa fa-hourglass-1', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/system/dict/batchRemove', perms='system:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=49, parentId=0, name='博客管理', url='', perms='', type=0, icon='fa fa-rss', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=93, parentId=0, name='工作流程', url='', perms='', type=0, icon='fa fa-print', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='图表管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=7, gmtCreate=null, gmtModified=null}]
2018-06-28 13:47:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:58 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 13:47:58 -HTTP METHOD : GET
2018-06-28 13:47:58 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 13:47:58 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 13:47:58 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 13:47:58 -HTTP METHOD : GET
2018-06-28 13:47:58 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 13:47:58 -参数 : []
2018-06-28 13:47:58 -耗时 : 0
2018-06-28 13:47:58 -返回值 : system/regexp/regexp
2018-06-28 13:47:58 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 13:47:58 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:47:58 -<==      Total: 10
2018-06-28 13:47:58 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 13:47:58 -==> Parameters: 
2018-06-28 13:47:58 -<==      Total: 1
2018-06-28 13:47:58 -耗时 : 3
2018-06-28 13:47:58 -返回值 : com.bootdo.common.utils.PageUtils@567c828e
2018-06-28 13:47:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:59 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 13:47:59 -HTTP METHOD : GET
2018-06-28 13:47:59 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 13:47:59 -参数 : []
2018-06-28 13:47:59 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 13:47:59 -HTTP METHOD : GET
2018-06-28 13:47:59 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 13:47:59 -参数 : []
2018-06-28 13:47:59 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 13:47:59 -==> Parameters: 
2018-06-28 13:47:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:47:59 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$92cf61a7.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:47:59 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 13:47:59 -HTTP METHOD : GET
2018-06-28 13:47:59 -<==      Total: 31
2018-06-28 13:47:59 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 13:47:59 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:47:59 -参数 : []
2018-06-28 13:47:59 -HTTP METHOD : GET
2018-06-28 13:47:59 -耗时 : 1
2018-06-28 13:47:59 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:47:59 -返回值 : system/dict/dict
2018-06-28 13:47:59 -耗时 : 3
2018-06-28 13:47:59 -参数 : [{limit=10, offset=0}]
2018-06-28 13:47:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 13:47:59.424(Timestamp)
2018-06-28 13:47:59 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 13:47:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:47:59 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:47:59 -<==    Updates: 1
2018-06-28 13:47:59 -<==      Total: 10
2018-06-28 13:47:59 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:47:59 -==> Parameters: 
2018-06-28 13:47:59 -<==      Total: 1
2018-06-28 13:47:59 -耗时 : 6
2018-06-28 13:47:59 -返回值 : com.bootdo.common.utils.PageUtils@48bb8442
2018-06-28 13:47:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:47:59 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:52:13 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:21:32 CST 2018]; root of context hierarchy
2018-06-28 13:52:13 -Stopping beans in phase 2147483647
2018-06-28 13:52:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 13:52:13 -Stopping...
2018-06-28 13:52:13 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 13:52:13 -Stopped.
2018-06-28 13:52:13 -Unregistering JMX-exposed beans on shutdown
2018-06-28 13:52:13 -Unregistering JMX-exposed beans
2018-06-28 13:52:13 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 13:52:13 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 13:52:13 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 13:52:13 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 13:52:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 13:52:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 13:52:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 13:52:13 -Shutting down Quartz Scheduler
2018-06-28 13:52:13 -{dataSource-1} closed
2018-06-28 13:52:13 -Disabled session validation scheduler.
2018-06-28 13:52:16 -Starting BootdoApplication on localhost with PID 7045 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 13:52:16 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 13:52:16 -The following profiles are active: dev
2018-06-28 13:52:16 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 13:52:16 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:52:16 CST 2018]; root of context hierarchy
2018-06-28 13:52:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 13:52:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c527d6c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:52:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b781056b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:52:18 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:52:18 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:52:18 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 13:52:18 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:52:18 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:52:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:52:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:52:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:52:19 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 13:52:19 -Starting service [Tomcat]
2018-06-28 13:52:19 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 13:52:19 -Initializing Spring embedded WebApplicationContext
2018-06-28 13:52:19 -Root WebApplicationContext: initialization completed in 2833 ms
2018-06-28 13:52:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 13:52:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 13:52:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 13:52:19 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 13:52:19 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 13:52:19 -Filter xssFilter was not registered (disabled)
2018-06-28 13:52:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 13:52:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 13:52:19 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 13:52:19 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 13:52:20 -{dataSource-1} inited
2018-06-28 13:52:21 -ProcessEngine default created
2018-06-28 13:52:22 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:52:16 CST 2018]; root of context hierarchy
2018-06-28 13:52:22 -Using default implementation for ThreadExecutor
2018-06-28 13:52:22 -Job execution threads will use class loader of thread: main
2018-06-28 13:52:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 13:52:22 -Quartz Scheduler v.2.2.1 created.
2018-06-28 13:52:22 -RAMJobStore initialized.
2018-06-28 13:52:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 13:52:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 13:52:22 -Quartz scheduler version: 2.2.1
2018-06-28 13:52:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@23dff243
2018-06-28 13:52:22 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 13:52:22 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 13:52:24 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 13:52:24 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 13:52:24 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 13:52:24 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 13:52:24 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 13:52:24 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 13:52:24 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 13:52:24 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 13:52:24 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 13:52:24 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 13:52:24 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 13:52:24 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 13:52:24 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 13:52:24 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 13:52:24 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 13:52:24 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 13:52:24 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 13:52:24 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 13:52:24 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 13:52:24 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 13:52:24 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 13:52:24 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 13:52:24 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 13:52:24 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 13:52:24 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 13:52:24 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 13:52:24 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 13:52:24 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 13:52:24 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 13:52:24 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 13:52:24 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 13:52:24 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 13:52:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 13:52:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 13:52:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 13:52:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 13:52:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 13:52:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 13:52:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 13:52:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 13:52:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 13:52:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 13:52:24 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 13:52:24 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 13:52:24 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 13:52:24 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 13:52:24 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 13:52:24 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 13:52:24 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 13:52:24 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 13:52:24 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 13:52:24 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 13:52:24 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 13:52:24 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 13:52:24 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 13:52:24 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 13:52:24 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 13:52:24 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 13:52:24 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 13:52:24 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 13:52:24 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 13:52:24 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 13:52:24 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 13:52:24 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 13:52:24 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 13:52:24 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 13:52:24 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 13:52:24 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 13:52:24 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 13:52:24 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 13:52:24 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 13:52:24 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 13:52:24 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 13:52:24 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 13:52:24 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 13:52:24 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 13:52:24 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 13:52:24 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 13:52:24 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 13:52:24 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 13:52:24 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 13:52:24 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 13:52:24 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 13:52:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 13:52:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 13:52:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 13:52:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 13:52:24 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 13:52:24 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 13:52:24 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 13:52:24 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 13:52:24 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 13:52:24 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:52:24 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 13:52:24 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 13:52:24 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 13:52:24 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 13:52:24 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 13:52:24 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 13:52:24 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 13:52:24 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 13:52:24 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 13:52:24 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 13:52:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 13:52:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 13:52:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 13:52:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 13:52:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 13:52:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 13:52:24 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 13:52:25 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:52:16 CST 2018]; root of context hierarchy
2018-06-28 13:52:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:52:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:52:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:52:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 13:52:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:52:26 -

Using default security password: 300799b2-3ffd-4046-9893-e0e0d49c915b

2018-06-28 13:52:26 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 13:52:26 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@7cc842b0, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@53dd29e0, org.springframework.security.web.context.SecurityContextPersistenceFilter@16e3d6d0, org.springframework.security.web.header.HeaderWriterFilter@70a91d72, org.springframework.security.web.csrf.CsrfFilter@3c1d6ef0, org.springframework.security.web.authentication.logout.LogoutFilter@6c056020, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@406d922, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d6879bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3733b1f4, org.springframework.security.web.session.SessionManagementFilter@45f70f68, org.springframework.security.web.access.ExceptionTranslationFilter@45a4587d]
2018-06-28 13:52:27 -Registering beans for JMX exposure on startup
2018-06-28 13:52:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 13:52:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 13:52:27 -Starting beans in phase 2147483647
2018-06-28 13:52:27 -Context refreshed
2018-06-28 13:52:27 -Found 1 custom documentation plugin(s)
2018-06-28 13:52:27 -Scanning for api listing references
2018-06-28 13:52:27 -Generating unique operation named: removeUsingPOST_1
2018-06-28 13:52:28 -Generating unique operation named: addUsingGET_1
2018-06-28 13:52:28 -Generating unique operation named: editUsingGET_1
2018-06-28 13:52:28 -Generating unique operation named: listUsingGET_1
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_2
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_3
2018-06-28 13:52:28 -Generating unique operation named: saveUsingPOST_1
2018-06-28 13:52:28 -Generating unique operation named: updateUsingGET_1
2018-06-28 13:52:28 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPOST_1
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPUT_1
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 13:52:28 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 13:52:28 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 13:52:28 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 13:52:28 -Generating unique operation named: addUsingGET_2
2018-06-28 13:52:28 -Generating unique operation named: editUsingGET_2
2018-06-28 13:52:28 -Generating unique operation named: listUsingGET_2
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_4
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_5
2018-06-28 13:52:28 -Generating unique operation named: saveUsingPOST_2
2018-06-28 13:52:28 -Generating unique operation named: updateUsingGET_2
2018-06-28 13:52:28 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPOST_2
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPUT_2
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 13:52:28 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 13:52:28 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 13:52:28 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 13:52:28 -Generating unique operation named: addUsingGET_3
2018-06-28 13:52:28 -Generating unique operation named: editUsingGET_3
2018-06-28 13:52:28 -Generating unique operation named: listUsingGET_3
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_6
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_7
2018-06-28 13:52:28 -Generating unique operation named: saveUsingPOST_3
2018-06-28 13:52:28 -Generating unique operation named: updateUsingGET_3
2018-06-28 13:52:28 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPOST_3
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPUT_3
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 13:52:28 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 13:52:28 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 13:52:28 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 13:52:28 -Generating unique operation named: editUsingGET_4
2018-06-28 13:52:28 -Generating unique operation named: listUsingGET_4
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPOST_4
2018-06-28 13:52:28 -Generating unique operation named: listUsingGET_5
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_8
2018-06-28 13:52:28 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 13:52:28 -Generating unique operation named: addUsingGET_4
2018-06-28 13:52:28 -Generating unique operation named: editUsingGET_5
2018-06-28 13:52:28 -Generating unique operation named: listUsingGET_6
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_9
2018-06-28 13:52:28 -Generating unique operation named: saveUsingPOST_4
2018-06-28 13:52:28 -Generating unique operation named: treeUsingGET_1
2018-06-28 13:52:28 -Generating unique operation named: treeUsingGET_2
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPOST_5
2018-06-28 13:52:28 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 13:52:28 -Generating unique operation named: editUsingGET_6
2018-06-28 13:52:28 -Generating unique operation named: listUsingGET_7
2018-06-28 13:52:28 -Generating unique operation named: addUsingGET_5
2018-06-28 13:52:28 -Generating unique operation named: editUsingGET_7
2018-06-28 13:52:28 -Generating unique operation named: listUsingGET_8
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_10
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_11
2018-06-28 13:52:28 -Generating unique operation named: saveUsingPOST_5
2018-06-28 13:52:28 -Generating unique operation named: updateUsingGET_4
2018-06-28 13:52:28 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPOST_6
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPUT_4
2018-06-28 13:52:28 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 13:52:28 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 13:52:28 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 13:52:28 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 13:52:28 -Generating unique operation named: addUsingGET_6
2018-06-28 13:52:28 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 13:52:28 -Generating unique operation named: deployUsingPOST_1
2018-06-28 13:52:28 -Generating unique operation named: listUsingGET_9
2018-06-28 13:52:28 -Generating unique operation named: removeUsingPOST_12
2018-06-28 13:52:28 -Generating unique operation named: addUsingGET_7
2018-06-28 13:52:28 -Generating unique operation named: editUsingGET_8
2018-06-28 13:52:28 -Generating unique operation named: infoUsingGET_1
2018-06-28 13:52:28 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 13:52:28 -Generating unique operation named: infoUsingPOST_1
2018-06-28 13:52:28 -Generating unique operation named: infoUsingPUT_1
2018-06-28 13:52:28 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 13:52:29 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 13:52:29 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 13:52:29 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 13:52:29 -Generating unique operation named: listUsingGET_10
2018-06-28 13:52:29 -Generating unique operation named: removeUsingPOST_13
2018-06-28 13:52:29 -Generating unique operation named: removeUsingPOST_14
2018-06-28 13:52:29 -Generating unique operation named: saveUsingPOST_6
2018-06-28 13:52:29 -Generating unique operation named: updateUsingPOST_7
2018-06-28 13:52:29 -Generating unique operation named: addUsingGET_8
2018-06-28 13:52:29 -Generating unique operation named: editUsingGET_9
2018-06-28 13:52:29 -Generating unique operation named: listUsingGET_11
2018-06-28 13:52:29 -Generating unique operation named: removeUsingPOST_15
2018-06-28 13:52:29 -Generating unique operation named: removeUsingPOST_16
2018-06-28 13:52:29 -Generating unique operation named: saveUsingPOST_7
2018-06-28 13:52:29 -Generating unique operation named: updateUsingGET_5
2018-06-28 13:52:29 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 13:52:29 -Generating unique operation named: updateUsingPOST_8
2018-06-28 13:52:29 -Generating unique operation named: updateUsingPUT_5
2018-06-28 13:52:29 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 13:52:29 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 13:52:29 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 13:52:29 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 13:52:29 -Generating unique operation named: addUsingGET_9
2018-06-28 13:52:29 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 13:52:29 -Generating unique operation named: editUsingGET_10
2018-06-28 13:52:29 -Generating unique operation named: listUsingGET_12
2018-06-28 13:52:29 -Generating unique operation named: saveUsingPOST_8
2018-06-28 13:52:29 -Generating unique operation named: saveUsingPOST_9
2018-06-28 13:52:29 -Generating unique operation named: updateUsingPOST_9
2018-06-28 13:52:29 -Generating unique operation named: addUsingGET_10
2018-06-28 13:52:29 -Generating unique operation named: editUsingGET_11
2018-06-28 13:52:29 -Generating unique operation named: listUsingGET_13
2018-06-28 13:52:29 -Generating unique operation named: removeUsingPOST_17
2018-06-28 13:52:29 -Generating unique operation named: removeUsingPOST_18
2018-06-28 13:52:29 -Generating unique operation named: updateUsingGET_6
2018-06-28 13:52:29 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 13:52:29 -Generating unique operation named: updateUsingPOST_10
2018-06-28 13:52:29 -Generating unique operation named: updateUsingPUT_6
2018-06-28 13:52:29 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 13:52:29 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 13:52:29 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 13:52:29 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 13:52:29 -Generating unique operation named: listUsingGET_14
2018-06-28 13:52:29 -Generating unique operation named: listUsingHEAD_1
2018-06-28 13:52:29 -Generating unique operation named: listUsingPOST_1
2018-06-28 13:52:29 -Generating unique operation named: listUsingPUT_1
2018-06-28 13:52:29 -Generating unique operation named: listUsingPATCH_1
2018-06-28 13:52:29 -Generating unique operation named: listUsingDELETE_1
2018-06-28 13:52:29 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 13:52:29 -Generating unique operation named: listUsingTRACE_1
2018-06-28 13:52:29 -Generating unique operation named: listUsingGET_15
2018-06-28 13:52:29 -Generating unique operation named: addUsingGET_11
2018-06-28 13:52:29 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 13:52:29 -Generating unique operation named: editUsingGET_12
2018-06-28 13:52:29 -Generating unique operation named: listUsingGET_16
2018-06-28 13:52:29 -Generating unique operation named: removeUsingPOST_19
2018-06-28 13:52:29 -Generating unique operation named: saveUsingPOST_10
2018-06-28 13:52:29 -Generating unique operation named: treeUsingGET_3
2018-06-28 13:52:29 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 13:52:29 -Generating unique operation named: updateUsingPOST_11
2018-06-28 13:52:29 -Starting Quartz Scheduler now
2018-06-28 13:52:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 13:52:29 -Starting...
2018-06-28 13:52:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 13:52:29 -Started.
2018-06-28 13:52:29 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 13:52:29 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 13:52:29 -Using a shared selector for servlet write/read
2018-06-28 13:52:29 -Tomcat started on port(s): 8099 (http)
2018-06-28 13:52:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 13:52:29 -==> Parameters: 
2018-06-28 13:52:29 -<==      Total: 1
2018-06-28 13:52:29 -Started BootdoApplication in 13.976 seconds (JVM running for 14.604)
2018-06-28 13:52:48 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 13:52:48 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 13:52:48 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-06-28 13:52:48 -Enabling session validation scheduler...
2018-06-28 13:52:48 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:52:48 -HTTP METHOD : GET
2018-06-28 13:52:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:52:48 -参数 : []
2018-06-28 13:52:48 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 13:52:48 -HTTP METHOD : GET
2018-06-28 13:52:48 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 13:52:48 -参数 : [{}]
2018-06-28 13:52:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:52:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 13:52:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:52:48 -==> Parameters: 1(Long)
2018-06-28 13:52:48 -<==      Total: 0
2018-06-28 13:52:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:52:48 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:52:48 -<==      Total: 1
2018-06-28 13:52:48 -耗时 : 36
2018-06-28 13:52:48 -返回值 : com.bootdo.common.utils.PageUtils@387cc68b
2018-06-28 13:52:48 -<==      Total: 29
2018-06-28 13:52:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 13:52:48 -==> Parameters: 150(Long)
2018-06-28 13:52:48 -<==      Total: 1
2018-06-28 13:52:48 -耗时 : 53
2018-06-28 13:52:48 -返回值 : index_v1
2018-06-28 13:52:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 13:52:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:52:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 54(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 13:52:48.825(Timestamp)
2018-06-28 13:52:48 -<==    Updates: 1
2018-06-28 13:52:48 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 13:52:48 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 13:52:48 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 13:52:48 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 13:52:48 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 13:52:48 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 13:52:48 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 13:52:49 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:52:49 -HTTP METHOD : GET
2018-06-28 13:52:49 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:52:49 -参数 : []
2018-06-28 13:52:49 -耗时 : 0
2018-06-28 13:52:49 -返回值 : main
2018-06-28 13:52:49 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:52:49 -HTTP METHOD : GET
2018-06-28 13:52:49 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:52:49 -参数 : []
2018-06-28 13:52:49 -耗时 : 0
2018-06-28 13:52:49 -返回值 : main
2018-06-28 13:52:52 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 13:52:52 -HTTP METHOD : GET
2018-06-28 13:52:52 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 13:52:52 -参数 : []
2018-06-28 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:52:52 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 13:52:52 -HTTP METHOD : GET
2018-06-28 13:52:52 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 13:52:52 -参数 : []
2018-06-28 13:52:52 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 13:52:52 -==> Parameters: 
2018-06-28 13:52:52 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:52:52 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 13:52:52 -HTTP METHOD : GET
2018-06-28 13:52:52 -HTTP METHOD : GET
2018-06-28 13:52:52 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:52:52 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 13:52:52 -参数 : [{limit=10, offset=0}]
2018-06-28 13:52:52 -参数 : []
2018-06-28 13:52:52 -耗时 : 1
2018-06-28 13:52:52 -返回值 : system/dict/dict
2018-06-28 13:52:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:52:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 13:52:52.169(Timestamp)
2018-06-28 13:52:52 -<==      Total: 31
2018-06-28 13:52:52 -耗时 : 11
2018-06-28 13:52:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:52:52 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 13:52:52 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$5da5db55.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:52:52 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:52:52 -<==    Updates: 1
2018-06-28 13:52:52 -<==      Total: 10
2018-06-28 13:52:52 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:52:52 -==> Parameters: 
2018-06-28 13:52:52 -<==      Total: 1
2018-06-28 13:52:52 -耗时 : 15
2018-06-28 13:52:52 -返回值 : com.bootdo.common.utils.PageUtils@4d2495c3
2018-06-28 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:52:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:52:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:52:57 -请求地址 : http://127.0.0.1:8099/system/dict/add
2018-06-28 13:52:57 -HTTP METHOD : GET
2018-06-28 13:52:57 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.add
2018-06-28 13:52:57 -参数 : []
2018-06-28 13:52:57 -耗时 : 0
2018-06-28 13:52:57 -返回值 : system/dict/add
2018-06-28 13:53:03 -请求地址 : http://127.0.0.1:8099/system/dict/addtype
2018-06-28 13:53:03 -HTTP METHOD : GET
2018-06-28 13:53:03 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.adddict
2018-06-28 13:53:03 -参数 : []
2018-06-28 13:53:03 -耗时 : 0
2018-06-28 13:53:03 -返回值 : system/dict/addtype
2018-06-28 13:53:09 -请求地址 : http://127.0.0.1:8099/system/dict/savetype
2018-06-28 13:53:09 -HTTP METHOD : POST
2018-06-28 13:53:09 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.savetype
2018-06-28 13:53:09 -参数 : [com.bootdo.system.dicttype.domain.DictTypeDO@51930b80]
2018-06-28 13:53:09 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.save
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.save
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.save(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.save(DictTypeServiceImpl.java:39)
	at com.bootdo.system.dict.controller.DictController.savetype(DictController.java:187)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$5da5db55.savetype(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:53:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:53:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/savetype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.save(String), null, 2018-06-28 13:53:09.944(Timestamp)
2018-06-28 13:53:09 -<==    Updates: 1
2018-06-28 13:53:24 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 9]
2018-06-28 13:54:13 -请求地址 : http://127.0.0.1:8099/system/user/personal
2018-06-28 13:54:13 -HTTP METHOD : GET
2018-06-28 13:54:13 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.personal
2018-06-28 13:54:13 -参数 : [{}]
2018-06-28 13:54:13 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-06-28 13:54:13 -==> Parameters: 1(Long)
2018-06-28 13:54:13 -<==      Total: 1
2018-06-28 13:54:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 13:54:13 -==> Parameters: 1(Long)
2018-06-28 13:54:13 -<==      Total: 1
2018-06-28 13:54:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-06-28 13:54:13 -==> Parameters: 6(Long)
2018-06-28 13:54:13 -<==      Total: 1
2018-06-28 13:54:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc 
2018-06-28 13:54:13 -==> Parameters: hobby(String)
2018-06-28 13:54:13 -<==      Total: 2
2018-06-28 13:54:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc 
2018-06-28 13:54:13 -==> Parameters: sex(String)
2018-06-28 13:54:13 -<==      Total: 2
2018-06-28 13:54:13 -耗时 : 20
2018-06-28 13:54:13 -返回值 : system/user/personal
2018-06-28 13:57:20 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 13:57:20 -HTTP METHOD : GET
2018-06-28 13:57:20 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 13:57:20 -参数 : [{}]
2018-06-28 13:57:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 13:57:20 -==> Parameters: 1(Long)
2018-06-28 13:57:20 -<==      Total: 29
2018-06-28 13:57:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 13:57:20 -==> Parameters: 150(Long)
2018-06-28 13:57:20 -<==      Total: 1
2018-06-28 13:57:20 -耗时 : 10
2018-06-28 13:57:20 -返回值 : index_v1
2018-06-28 13:57:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:57:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 13:57:20.896(Timestamp)
2018-06-28 13:57:20 -<==    Updates: 1
2018-06-28 13:57:20 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:57:20 -HTTP METHOD : GET
2018-06-28 13:57:20 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:57:20 -参数 : []
2018-06-28 13:57:20 -耗时 : 0
2018-06-28 13:57:20 -返回值 : main
2018-06-28 13:57:20 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:57:20 -HTTP METHOD : GET
2018-06-28 13:57:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:57:20 -参数 : []
2018-06-28 13:57:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:57:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:57:20 -<==      Total: 0
2018-06-28 13:57:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:57:20 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:57:20 -<==      Total: 1
2018-06-28 13:57:20 -耗时 : 6
2018-06-28 13:57:20 -返回值 : com.bootdo.common.utils.PageUtils@2aa2fd9c
2018-06-28 13:57:20 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:57:20 -HTTP METHOD : GET
2018-06-28 13:57:20 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:57:20 -参数 : []
2018-06-28 13:57:20 -耗时 : 0
2018-06-28 13:57:20 -返回值 : main
2018-06-28 13:57:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:24 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-28 13:57:24 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-28 13:57:24 -HTTP METHOD : GET
2018-06-28 13:57:24 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.Regexp
2018-06-28 13:57:24 -HTTP METHOD : GET
2018-06-28 13:57:24 -CLASS_METHOD : com.bootdo.system.regexp.controller.RegexpController.list
2018-06-28 13:57:24 -参数 : [{limit=10, offset=0, rname=}]
2018-06-28 13:57:24 -参数 : []
2018-06-28 13:57:24 -耗时 : 1
2018-06-28 13:57:24 -返回值 : system/regexp/regexp
2018-06-28 13:57:24 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-28 13:57:24 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:57:24 -<==      Total: 10
2018-06-28 13:57:24 -==>  Preparing: select count(*) from sys_regexp 
2018-06-28 13:57:24 -==> Parameters: 
2018-06-28 13:57:24 -<==      Total: 1
2018-06-28 13:57:24 -耗时 : 12
2018-06-28 13:57:24 -返回值 : com.bootdo.common.utils.PageUtils@7284d55
2018-06-28 13:57:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:26 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 13:57:26 -HTTP METHOD : GET
2018-06-28 13:57:26 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 13:57:26 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 13:57:26 -HTTP METHOD : GET
2018-06-28 13:57:26 -参数 : []
2018-06-28 13:57:26 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 13:57:26 -参数 : []
2018-06-28 13:57:26 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 13:57:26 -==> Parameters: 
2018-06-28 13:57:26 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor159.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$5da5db55.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:57:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:57:26 -<==      Total: 31
2018-06-28 13:57:26 -耗时 : 7
2018-06-28 13:57:26 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 13:57:26 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 13:57:26 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:57:26 -HTTP METHOD : GET
2018-06-28 13:57:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 13:57:26.308(Timestamp)
2018-06-28 13:57:26 -HTTP METHOD : GET
2018-06-28 13:57:26 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 13:57:26 -参数 : []
2018-06-28 13:57:26 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:57:26 -耗时 : 1
2018-06-28 13:57:26 -参数 : [{limit=10, offset=0}]
2018-06-28 13:57:26 -返回值 : system/dict/dict
2018-06-28 13:57:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:57:26 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:57:26 -<==    Updates: 1
2018-06-28 13:57:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:26 -<==      Total: 10
2018-06-28 13:57:26 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:57:26 -==> Parameters: 
2018-06-28 13:57:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:26 -<==      Total: 1
2018-06-28 13:57:26 -耗时 : 9
2018-06-28 13:57:26 -返回值 : com.bootdo.common.utils.PageUtils@2bb337c2
2018-06-28 13:57:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:57:28 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 13:57:28 -HTTP METHOD : GET
2018-06-28 13:57:28 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 13:57:28 -参数 : [{}]
2018-06-28 13:57:28 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:57:28 -HTTP METHOD : GET
2018-06-28 13:57:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:57:28 -参数 : []
2018-06-28 13:57:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 13:57:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:57:28 -==> Parameters: 1(Long)
2018-06-28 13:57:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:57:29 -<==      Total: 0
2018-06-28 13:57:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:57:29 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:57:29 -<==      Total: 29
2018-06-28 13:57:29 -<==      Total: 1
2018-06-28 13:57:29 -耗时 : 7
2018-06-28 13:57:29 -返回值 : com.bootdo.common.utils.PageUtils@29ba5190
2018-06-28 13:57:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 13:57:29 -==> Parameters: 150(Long)
2018-06-28 13:57:29 -<==      Total: 1
2018-06-28 13:57:29 -耗时 : 11
2018-06-28 13:57:29 -返回值 : index_v1
2018-06-28 13:57:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:57:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 13:57:29.011(Timestamp)
2018-06-28 13:57:29 -<==    Updates: 1
2018-06-28 13:57:29 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:57:29 -HTTP METHOD : GET
2018-06-28 13:57:29 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:57:29 -参数 : []
2018-06-28 13:57:29 -耗时 : 0
2018-06-28 13:57:29 -返回值 : main
2018-06-28 13:57:29 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:57:29 -HTTP METHOD : GET
2018-06-28 13:57:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:57:29 -参数 : []
2018-06-28 13:57:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:57:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:57:29 -<==      Total: 0
2018-06-28 13:57:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:57:29 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:57:29 -<==      Total: 1
2018-06-28 13:57:29 -耗时 : 5
2018-06-28 13:57:29 -返回值 : com.bootdo.common.utils.PageUtils@63501862
2018-06-28 13:57:29 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:57:29 -HTTP METHOD : GET
2018-06-28 13:57:29 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:57:29 -参数 : []
2018-06-28 13:57:29 -耗时 : 0
2018-06-28 13:57:29 -返回值 : main
2018-06-28 13:57:57 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:52:16 CST 2018]; root of context hierarchy
2018-06-28 13:57:57 -Stopping beans in phase 2147483647
2018-06-28 13:57:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 13:57:57 -Stopping...
2018-06-28 13:57:57 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 13:57:57 -Stopped.
2018-06-28 13:57:57 -Unregistering JMX-exposed beans on shutdown
2018-06-28 13:57:57 -Unregistering JMX-exposed beans
2018-06-28 13:57:57 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 13:57:57 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 13:57:57 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 13:57:57 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 13:57:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 13:57:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 13:57:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 13:57:57 -Shutting down Quartz Scheduler
2018-06-28 13:57:57 -{dataSource-1} closed
2018-06-28 13:57:57 -Disabled session validation scheduler.
2018-06-28 13:57:59 -Starting BootdoApplication on localhost with PID 7055 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 13:57:59 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 13:57:59 -The following profiles are active: dev
2018-06-28 13:58:00 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 13:58:00 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:58:00 CST 2018]; root of context hierarchy
2018-06-28 13:58:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 13:58:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$be97a9e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:58:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b0f0d88a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:58:02 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:58:02 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:58:02 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 13:58:02 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:58:02 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:58:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:58:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:58:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 13:58:02 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 13:58:02 -Starting service [Tomcat]
2018-06-28 13:58:02 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 13:58:02 -Initializing Spring embedded WebApplicationContext
2018-06-28 13:58:02 -Root WebApplicationContext: initialization completed in 2719 ms
2018-06-28 13:58:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 13:58:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 13:58:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 13:58:03 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 13:58:03 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 13:58:03 -Filter xssFilter was not registered (disabled)
2018-06-28 13:58:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 13:58:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 13:58:03 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 13:58:03 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 13:58:03 -{dataSource-1} inited
2018-06-28 13:58:05 -ProcessEngine default created
2018-06-28 13:58:06 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:58:00 CST 2018]; root of context hierarchy
2018-06-28 13:58:06 -Using default implementation for ThreadExecutor
2018-06-28 13:58:06 -Job execution threads will use class loader of thread: main
2018-06-28 13:58:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 13:58:06 -Quartz Scheduler v.2.2.1 created.
2018-06-28 13:58:06 -RAMJobStore initialized.
2018-06-28 13:58:06 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 13:58:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 13:58:06 -Quartz scheduler version: 2.2.1
2018-06-28 13:58:06 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@21bf308
2018-06-28 13:58:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 13:58:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 13:58:07 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 13:58:07 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 13:58:07 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 13:58:07 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 13:58:07 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 13:58:07 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 13:58:07 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 13:58:07 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 13:58:07 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 13:58:07 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 13:58:07 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 13:58:07 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 13:58:07 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 13:58:07 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 13:58:07 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 13:58:07 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 13:58:07 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 13:58:07 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 13:58:07 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 13:58:07 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 13:58:07 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 13:58:07 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 13:58:07 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 13:58:07 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 13:58:07 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 13:58:07 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 13:58:07 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 13:58:07 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 13:58:07 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 13:58:07 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 13:58:07 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 13:58:07 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 13:58:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 13:58:07 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 13:58:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 13:58:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 13:58:07 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 13:58:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 13:58:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 13:58:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 13:58:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 13:58:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 13:58:07 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 13:58:07 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 13:58:07 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 13:58:07 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 13:58:07 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 13:58:07 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 13:58:07 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 13:58:07 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 13:58:07 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 13:58:07 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 13:58:07 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 13:58:07 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 13:58:07 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 13:58:07 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 13:58:07 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 13:58:07 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 13:58:07 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 13:58:07 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 13:58:07 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 13:58:07 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 13:58:07 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 13:58:07 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 13:58:07 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 13:58:07 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 13:58:07 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 13:58:07 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 13:58:07 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 13:58:07 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 13:58:07 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 13:58:07 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 13:58:07 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 13:58:07 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 13:58:07 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 13:58:07 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 13:58:07 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 13:58:07 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 13:58:07 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 13:58:07 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 13:58:07 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 13:58:07 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 13:58:07 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 13:58:07 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 13:58:07 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 13:58:07 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 13:58:07 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 13:58:07 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 13:58:07 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 13:58:07 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 13:58:07 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 13:58:07 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 13:58:07 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 13:58:07 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 13:58:07 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 13:58:07 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 13:58:07 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 13:58:07 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 13:58:07 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 13:58:07 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 13:58:07 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 13:58:07 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 13:58:07 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 13:58:07 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 13:58:07 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 13:58:07 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 13:58:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 13:58:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 13:58:08 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 13:58:08 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:58:00 CST 2018]; root of context hierarchy
2018-06-28 13:58:08 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:58:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:58:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:58:09 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 13:58:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 13:58:10 -

Using default security password: fc2d7531-49be-431c-b24a-3f23c0dd5d01

2018-06-28 13:58:10 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 13:58:10 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@16257f8c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62158618, org.springframework.security.web.context.SecurityContextPersistenceFilter@7674f9d4, org.springframework.security.web.header.HeaderWriterFilter@50d6af87, org.springframework.security.web.csrf.CsrfFilter@36dc6b9, org.springframework.security.web.authentication.logout.LogoutFilter@3006aef5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b5ceb5d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30a1b2ad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c31e01f, org.springframework.security.web.session.SessionManagementFilter@6cd65042, org.springframework.security.web.access.ExceptionTranslationFilter@70ab1ce0]
2018-06-28 13:58:11 -Registering beans for JMX exposure on startup
2018-06-28 13:58:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 13:58:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 13:58:11 -Starting beans in phase 2147483647
2018-06-28 13:58:11 -Context refreshed
2018-06-28 13:58:11 -Found 1 custom documentation plugin(s)
2018-06-28 13:58:11 -Scanning for api listing references
2018-06-28 13:58:11 -Generating unique operation named: removeUsingPOST_1
2018-06-28 13:58:11 -Generating unique operation named: addUsingGET_1
2018-06-28 13:58:11 -Generating unique operation named: editUsingGET_1
2018-06-28 13:58:11 -Generating unique operation named: listUsingGET_1
2018-06-28 13:58:11 -Generating unique operation named: removeUsingPOST_2
2018-06-28 13:58:11 -Generating unique operation named: removeUsingPOST_3
2018-06-28 13:58:11 -Generating unique operation named: saveUsingPOST_1
2018-06-28 13:58:11 -Generating unique operation named: updateUsingGET_1
2018-06-28 13:58:11 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 13:58:11 -Generating unique operation named: updateUsingPOST_1
2018-06-28 13:58:11 -Generating unique operation named: updateUsingPUT_1
2018-06-28 13:58:11 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 13:58:11 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 13:58:11 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 13:58:11 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 13:58:11 -Generating unique operation named: addUsingGET_2
2018-06-28 13:58:11 -Generating unique operation named: editUsingGET_2
2018-06-28 13:58:11 -Generating unique operation named: listUsingGET_2
2018-06-28 13:58:11 -Generating unique operation named: removeUsingPOST_4
2018-06-28 13:58:11 -Generating unique operation named: removeUsingPOST_5
2018-06-28 13:58:11 -Generating unique operation named: saveUsingPOST_2
2018-06-28 13:58:11 -Generating unique operation named: updateUsingGET_2
2018-06-28 13:58:11 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 13:58:11 -Generating unique operation named: updateUsingPOST_2
2018-06-28 13:58:11 -Generating unique operation named: updateUsingPUT_2
2018-06-28 13:58:11 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 13:58:11 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 13:58:11 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 13:58:11 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 13:58:11 -Generating unique operation named: addUsingGET_3
2018-06-28 13:58:11 -Generating unique operation named: editUsingGET_3
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_3
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_6
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_7
2018-06-28 13:58:12 -Generating unique operation named: saveUsingPOST_3
2018-06-28 13:58:12 -Generating unique operation named: updateUsingGET_3
2018-06-28 13:58:12 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPOST_3
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPUT_3
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 13:58:12 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 13:58:12 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 13:58:12 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 13:58:12 -Generating unique operation named: editUsingGET_4
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_4
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPOST_4
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_5
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_8
2018-06-28 13:58:12 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 13:58:12 -Generating unique operation named: addUsingGET_4
2018-06-28 13:58:12 -Generating unique operation named: editUsingGET_5
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_6
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_9
2018-06-28 13:58:12 -Generating unique operation named: saveUsingPOST_4
2018-06-28 13:58:12 -Generating unique operation named: treeUsingGET_1
2018-06-28 13:58:12 -Generating unique operation named: treeUsingGET_2
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPOST_5
2018-06-28 13:58:12 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 13:58:12 -Generating unique operation named: editUsingGET_6
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_7
2018-06-28 13:58:12 -Generating unique operation named: addUsingGET_5
2018-06-28 13:58:12 -Generating unique operation named: editUsingGET_7
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_8
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_10
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_11
2018-06-28 13:58:12 -Generating unique operation named: saveUsingPOST_5
2018-06-28 13:58:12 -Generating unique operation named: updateUsingGET_4
2018-06-28 13:58:12 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPOST_6
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPUT_4
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 13:58:12 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 13:58:12 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 13:58:12 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 13:58:12 -Generating unique operation named: addUsingGET_6
2018-06-28 13:58:12 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 13:58:12 -Generating unique operation named: deployUsingPOST_1
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_9
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_12
2018-06-28 13:58:12 -Generating unique operation named: addUsingGET_7
2018-06-28 13:58:12 -Generating unique operation named: editUsingGET_8
2018-06-28 13:58:12 -Generating unique operation named: infoUsingGET_1
2018-06-28 13:58:12 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 13:58:12 -Generating unique operation named: infoUsingPOST_1
2018-06-28 13:58:12 -Generating unique operation named: infoUsingPUT_1
2018-06-28 13:58:12 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 13:58:12 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 13:58:12 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 13:58:12 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_10
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_13
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_14
2018-06-28 13:58:12 -Generating unique operation named: saveUsingPOST_6
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPOST_7
2018-06-28 13:58:12 -Generating unique operation named: addUsingGET_8
2018-06-28 13:58:12 -Generating unique operation named: editUsingGET_9
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_11
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_15
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_16
2018-06-28 13:58:12 -Generating unique operation named: saveUsingPOST_7
2018-06-28 13:58:12 -Generating unique operation named: updateUsingGET_5
2018-06-28 13:58:12 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPOST_8
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPUT_5
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 13:58:12 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 13:58:12 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 13:58:12 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 13:58:12 -Generating unique operation named: addUsingGET_9
2018-06-28 13:58:12 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 13:58:12 -Generating unique operation named: editUsingGET_10
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_12
2018-06-28 13:58:12 -Generating unique operation named: saveUsingPOST_8
2018-06-28 13:58:12 -Generating unique operation named: saveUsingPOST_9
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPOST_9
2018-06-28 13:58:12 -Generating unique operation named: addUsingGET_10
2018-06-28 13:58:12 -Generating unique operation named: editUsingGET_11
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_13
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_17
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_18
2018-06-28 13:58:12 -Generating unique operation named: updateUsingGET_6
2018-06-28 13:58:12 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPOST_10
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPUT_6
2018-06-28 13:58:12 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 13:58:12 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 13:58:12 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 13:58:12 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_14
2018-06-28 13:58:12 -Generating unique operation named: listUsingHEAD_1
2018-06-28 13:58:12 -Generating unique operation named: listUsingPOST_1
2018-06-28 13:58:12 -Generating unique operation named: listUsingPUT_1
2018-06-28 13:58:12 -Generating unique operation named: listUsingPATCH_1
2018-06-28 13:58:12 -Generating unique operation named: listUsingDELETE_1
2018-06-28 13:58:12 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 13:58:12 -Generating unique operation named: listUsingTRACE_1
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_15
2018-06-28 13:58:12 -Generating unique operation named: addUsingGET_11
2018-06-28 13:58:12 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 13:58:12 -Generating unique operation named: editUsingGET_12
2018-06-28 13:58:12 -Generating unique operation named: listUsingGET_16
2018-06-28 13:58:12 -Generating unique operation named: removeUsingPOST_19
2018-06-28 13:58:13 -Generating unique operation named: saveUsingPOST_10
2018-06-28 13:58:13 -Generating unique operation named: treeUsingGET_3
2018-06-28 13:58:13 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 13:58:13 -Generating unique operation named: updateUsingPOST_11
2018-06-28 13:58:13 -Starting Quartz Scheduler now
2018-06-28 13:58:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 13:58:13 -Starting...
2018-06-28 13:58:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 13:58:13 -Started.
2018-06-28 13:58:13 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 13:58:13 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 13:58:13 -Using a shared selector for servlet write/read
2018-06-28 13:58:13 -Tomcat started on port(s): 8099 (http)
2018-06-28 13:58:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 13:58:13 -==> Parameters: 
2018-06-28 13:58:13 -<==      Total: 1
2018-06-28 13:58:13 -Started BootdoApplication in 14.012 seconds (JVM running for 14.675)
2018-06-28 13:58:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 13:58:43 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 13:58:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-06-28 13:58:44 -Enabling session validation scheduler...
2018-06-28 13:58:44 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:58:44 -HTTP METHOD : GET
2018-06-28 13:58:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:58:44 -参数 : []
2018-06-28 13:58:44 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 13:58:44 -HTTP METHOD : GET
2018-06-28 13:58:44 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 13:58:44 -参数 : [{}]
2018-06-28 13:58:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:58:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:58:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 13:58:44 -<==      Total: 0
2018-06-28 13:58:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:58:44 -==> Parameters: 1(Long)
2018-06-28 13:58:44 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:58:44 -<==      Total: 1
2018-06-28 13:58:44 -耗时 : 26
2018-06-28 13:58:44 -返回值 : com.bootdo.common.utils.PageUtils@73fd11dc
2018-06-28 13:58:44 -<==      Total: 29
2018-06-28 13:58:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 13:58:44 -==> Parameters: 150(Long)
2018-06-28 13:58:44 -<==      Total: 1
2018-06-28 13:58:44 -耗时 : 38
2018-06-28 13:58:44 -返回值 : index_v1
2018-06-28 13:58:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 13:58:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:58:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 13:58:44.219(Timestamp)
2018-06-28 13:58:44 -<==    Updates: 1
2018-06-28 13:58:44 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 13:58:44 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 13:58:44 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 13:58:44 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 13:58:44 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 13:58:44 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 13:58:44 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 13:58:44 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:58:44 -HTTP METHOD : GET
2018-06-28 13:58:44 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:58:44 -参数 : []
2018-06-28 13:58:44 -耗时 : 0
2018-06-28 13:58:44 -返回值 : main
2018-06-28 13:58:44 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 13:58:44 -HTTP METHOD : GET
2018-06-28 13:58:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 13:58:44 -参数 : []
2018-06-28 13:58:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 13:58:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 13:58:44 -<==      Total: 0
2018-06-28 13:58:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 13:58:44 -==> Parameters: 1(Long), 0(String)
2018-06-28 13:58:44 -<==      Total: 1
2018-06-28 13:58:44 -耗时 : 7
2018-06-28 13:58:44 -返回值 : com.bootdo.common.utils.PageUtils@7b7fc150
2018-06-28 13:58:44 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 13:58:44 -HTTP METHOD : GET
2018-06-28 13:58:44 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 13:58:44 -参数 : []
2018-06-28 13:58:44 -耗时 : 0
2018-06-28 13:58:44 -返回值 : main
2018-06-28 13:58:53 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 13:58:53 -HTTP METHOD : GET
2018-06-28 13:58:53 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 13:58:53 -参数 : []
2018-06-28 13:58:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:58:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:58:53 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 13:58:53 -HTTP METHOD : GET
2018-06-28 13:58:53 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 13:58:53 -参数 : []
2018-06-28 13:58:53 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 13:58:53 -==> Parameters: 
2018-06-28 13:58:53 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 13:58:53 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 13:58:53 -HTTP METHOD : GET
2018-06-28 13:58:53 -HTTP METHOD : GET
2018-06-28 13:58:53 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 13:58:53 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 13:58:53 -参数 : []
2018-06-28 13:58:53 -参数 : [{limit=10, offset=0}]
2018-06-28 13:58:53 -耗时 : 0
2018-06-28 13:58:53 -返回值 : system/dict/dict
2018-06-28 13:58:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 13:58:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/dict/dicttype(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list(String), null, 2018-06-28 13:58:53.716(Timestamp)
2018-06-28 13:58:53 -Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.system.dicttype.dao.DictTypeDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy119.list(Unknown Source)
	at com.bootdo.system.dicttype.service.impl.DictTypeServiceImpl.list(DictTypeServiceImpl.java:59)
	at com.bootdo.system.dict.controller.DictController.listDictType(DictController.java:170)
	at com.bootdo.system.dict.controller.DictController$$FastClassBySpringCGLIB$$9feddd27.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.dict.controller.DictController$$EnhancerBySpringCGLIB$$8a9427ba.listDictType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 13:58:53 -<==      Total: 31
2018-06-28 13:58:53 -<==    Updates: 1
2018-06-28 13:58:53 -耗时 : 13
2018-06-28 13:58:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 13:58:53 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 13:58:53 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 13:58:53 -<==      Total: 10
2018-06-28 13:58:53 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 13:58:53 -==> Parameters: 
2018-06-28 13:58:53 -<==      Total: 1
2018-06-28 13:58:53 -耗时 : 17
2018-06-28 13:58:53 -返回值 : com.bootdo.common.utils.PageUtils@244c6c72
2018-06-28 13:58:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:58:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:58:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:58:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:58:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 13:59:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 5]
2018-06-28 14:00:39 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 13:58:00 CST 2018]; root of context hierarchy
2018-06-28 14:00:39 -Stopping beans in phase 2147483647
2018-06-28 14:00:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 14:00:39 -Stopping...
2018-06-28 14:00:39 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 14:00:39 -Stopped.
2018-06-28 14:00:39 -Unregistering JMX-exposed beans on shutdown
2018-06-28 14:00:39 -Unregistering JMX-exposed beans
2018-06-28 14:00:39 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 14:00:39 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 14:00:39 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 14:00:39 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 14:00:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 14:00:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 14:00:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 14:00:39 -Shutting down Quartz Scheduler
2018-06-28 14:00:39 -{dataSource-1} closed
2018-06-28 14:00:39 -Disabled session validation scheduler.
2018-06-28 14:00:41 -Starting BootdoApplication on localhost with PID 7063 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 14:00:41 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 14:00:41 -The following profiles are active: dev
2018-06-28 14:00:41 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 14:00:41 CST 2018]; root of context hierarchy
2018-06-28 14:00:41 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 14:00:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 14:00:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca90f4da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 14:00:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bcea2381] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 14:00:43 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 14:00:43 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 14:00:43 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 14:00:43 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 14:00:43 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 14:00:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 14:00:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 14:00:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 14:00:44 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 14:00:44 -Starting service [Tomcat]
2018-06-28 14:00:44 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 14:00:44 -Initializing Spring embedded WebApplicationContext
2018-06-28 14:00:44 -Root WebApplicationContext: initialization completed in 2920 ms
2018-06-28 14:00:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 14:00:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 14:00:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 14:00:45 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 14:00:45 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 14:00:45 -Filter xssFilter was not registered (disabled)
2018-06-28 14:00:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 14:00:45 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 14:00:45 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 14:00:45 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 14:00:45 -{dataSource-1} inited
2018-06-28 14:00:46 -ProcessEngine default created
2018-06-28 14:00:47 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 14:00:41 CST 2018]; root of context hierarchy
2018-06-28 14:00:47 -Using default implementation for ThreadExecutor
2018-06-28 14:00:47 -Job execution threads will use class loader of thread: main
2018-06-28 14:00:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 14:00:47 -Quartz Scheduler v.2.2.1 created.
2018-06-28 14:00:47 -RAMJobStore initialized.
2018-06-28 14:00:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 14:00:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 14:00:47 -Quartz scheduler version: 2.2.1
2018-06-28 14:00:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@391e85df
2018-06-28 14:00:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 14:00:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 14:00:49 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 14:00:49 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 14:00:49 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 14:00:49 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 14:00:49 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 14:00:49 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 14:00:49 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 14:00:49 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 14:00:49 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 14:00:49 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 14:00:49 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 14:00:49 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 14:00:49 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 14:00:49 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 14:00:49 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 14:00:49 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 14:00:49 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 14:00:49 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 14:00:49 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 14:00:49 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 14:00:49 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 14:00:49 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 14:00:49 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 14:00:49 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 14:00:49 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 14:00:49 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 14:00:49 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 14:00:49 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 14:00:49 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 14:00:49 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 14:00:49 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 14:00:49 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 14:00:49 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 14:00:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 14:00:49 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-28 14:00:49 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-28 14:00:49 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-28 14:00:49 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-28 14:00:49 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-28 14:00:49 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-28 14:00:49 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-28 14:00:49 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 14:00:49 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 14:00:49 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 14:00:49 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 14:00:49 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 14:00:49 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 14:00:49 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 14:00:49 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 14:00:49 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 14:00:49 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 14:00:49 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 14:00:49 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 14:00:49 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 14:00:49 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 14:00:49 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 14:00:49 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 14:00:49 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 14:00:49 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 14:00:49 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 14:00:49 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 14:00:49 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 14:00:49 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 14:00:49 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 14:00:49 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 14:00:49 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 14:00:49 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 14:00:49 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 14:00:49 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 14:00:49 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 14:00:49 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 14:00:49 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 14:00:49 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 14:00:49 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 14:00:49 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 14:00:49 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 14:00:49 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 14:00:49 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 14:00:49 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 14:00:49 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 14:00:49 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 14:00:49 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 14:00:49 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 14:00:49 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 14:00:49 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 14:00:49 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 14:00:49 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 14:00:49 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 14:00:49 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 14:00:49 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 14:00:49 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 14:00:49 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 14:00:49 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 14:00:49 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 14:00:49 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 14:00:49 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 14:00:49 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 14:00:49 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 14:00:49 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 14:00:49 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 14:00:49 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 14:00:49 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 14:00:49 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 14:00:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 14:00:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 14:00:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 14:00:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 14:00:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 14:00:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 14:00:49 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 14:00:50 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Thu Jun 28 14:00:41 CST 2018]; root of context hierarchy
2018-06-28 14:00:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 14:00:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 14:00:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 14:00:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 14:00:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 14:00:52 -

Using default security password: 70da2f6d-773c-4653-b609-1f332143af2d

2018-06-28 14:00:52 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-28 14:00:52 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@144792d5, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1da61a29, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e2c9e24, org.springframework.security.web.header.HeaderWriterFilter@279e85eb, org.springframework.security.web.csrf.CsrfFilter@2cdb53d6, org.springframework.security.web.authentication.logout.LogoutFilter@457d3f54, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3dd27116, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ec75228, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47cf922d, org.springframework.security.web.session.SessionManagementFilter@3c1d6ef0, org.springframework.security.web.access.ExceptionTranslationFilter@63fde7ca]
2018-06-28 14:00:52 -Registering beans for JMX exposure on startup
2018-06-28 14:00:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-28 14:00:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-28 14:00:52 -Starting beans in phase 2147483647
2018-06-28 14:00:52 -Context refreshed
2018-06-28 14:00:52 -Found 1 custom documentation plugin(s)
2018-06-28 14:00:52 -Scanning for api listing references
2018-06-28 14:00:53 -Generating unique operation named: removeUsingPOST_1
2018-06-28 14:00:53 -Generating unique operation named: addUsingGET_1
2018-06-28 14:00:53 -Generating unique operation named: editUsingGET_1
2018-06-28 14:00:53 -Generating unique operation named: listUsingGET_1
2018-06-28 14:00:53 -Generating unique operation named: removeUsingPOST_2
2018-06-28 14:00:53 -Generating unique operation named: removeUsingPOST_3
2018-06-28 14:00:53 -Generating unique operation named: saveUsingPOST_1
2018-06-28 14:00:53 -Generating unique operation named: updateUsingGET_1
2018-06-28 14:00:53 -Generating unique operation named: updateUsingHEAD_1
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPOST_1
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPUT_1
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPATCH_1
2018-06-28 14:00:53 -Generating unique operation named: updateUsingDELETE_1
2018-06-28 14:00:53 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-28 14:00:53 -Generating unique operation named: updateUsingTRACE_1
2018-06-28 14:00:53 -Generating unique operation named: addUsingGET_2
2018-06-28 14:00:53 -Generating unique operation named: editUsingGET_2
2018-06-28 14:00:53 -Generating unique operation named: listUsingGET_2
2018-06-28 14:00:53 -Generating unique operation named: removeUsingPOST_4
2018-06-28 14:00:53 -Generating unique operation named: removeUsingPOST_5
2018-06-28 14:00:53 -Generating unique operation named: saveUsingPOST_2
2018-06-28 14:00:53 -Generating unique operation named: updateUsingGET_2
2018-06-28 14:00:53 -Generating unique operation named: updateUsingHEAD_2
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPOST_2
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPUT_2
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPATCH_2
2018-06-28 14:00:53 -Generating unique operation named: updateUsingDELETE_2
2018-06-28 14:00:53 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-28 14:00:53 -Generating unique operation named: updateUsingTRACE_2
2018-06-28 14:00:53 -Generating unique operation named: addUsingGET_3
2018-06-28 14:00:53 -Generating unique operation named: editUsingGET_3
2018-06-28 14:00:53 -Generating unique operation named: listUsingGET_3
2018-06-28 14:00:53 -Generating unique operation named: removeUsingPOST_6
2018-06-28 14:00:53 -Generating unique operation named: removeUsingPOST_7
2018-06-28 14:00:53 -Generating unique operation named: saveUsingPOST_3
2018-06-28 14:00:53 -Generating unique operation named: updateUsingGET_3
2018-06-28 14:00:53 -Generating unique operation named: updateUsingHEAD_3
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPOST_3
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPUT_3
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPATCH_3
2018-06-28 14:00:53 -Generating unique operation named: updateUsingDELETE_3
2018-06-28 14:00:53 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-28 14:00:53 -Generating unique operation named: updateUsingTRACE_3
2018-06-28 14:00:53 -Generating unique operation named: editUsingGET_4
2018-06-28 14:00:53 -Generating unique operation named: listUsingGET_4
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPOST_4
2018-06-28 14:00:53 -Generating unique operation named: listUsingGET_5
2018-06-28 14:00:53 -Generating unique operation named: removeUsingPOST_8
2018-06-28 14:00:53 -Generating unique operation named: welcomeUsingGET_1
2018-06-28 14:00:53 -Generating unique operation named: addUsingGET_4
2018-06-28 14:00:53 -Generating unique operation named: editUsingGET_5
2018-06-28 14:00:53 -Generating unique operation named: listUsingGET_6
2018-06-28 14:00:53 -Generating unique operation named: removeUsingPOST_9
2018-06-28 14:00:53 -Generating unique operation named: saveUsingPOST_4
2018-06-28 14:00:53 -Generating unique operation named: treeUsingGET_1
2018-06-28 14:00:53 -Generating unique operation named: treeUsingGET_2
2018-06-28 14:00:53 -Generating unique operation named: updateUsingPOST_5
2018-06-28 14:00:53 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-28 14:00:53 -Generating unique operation named: editUsingGET_6
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_7
2018-06-28 14:00:54 -Generating unique operation named: addUsingGET_5
2018-06-28 14:00:54 -Generating unique operation named: editUsingGET_7
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_8
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_10
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_11
2018-06-28 14:00:54 -Generating unique operation named: saveUsingPOST_5
2018-06-28 14:00:54 -Generating unique operation named: updateUsingGET_4
2018-06-28 14:00:54 -Generating unique operation named: updateUsingHEAD_4
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPOST_6
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPUT_4
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPATCH_4
2018-06-28 14:00:54 -Generating unique operation named: updateUsingDELETE_4
2018-06-28 14:00:54 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-28 14:00:54 -Generating unique operation named: updateUsingTRACE_4
2018-06-28 14:00:54 -Generating unique operation named: addUsingGET_6
2018-06-28 14:00:54 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-28 14:00:54 -Generating unique operation named: deployUsingPOST_1
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_9
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_12
2018-06-28 14:00:54 -Generating unique operation named: addUsingGET_7
2018-06-28 14:00:54 -Generating unique operation named: editUsingGET_8
2018-06-28 14:00:54 -Generating unique operation named: infoUsingGET_1
2018-06-28 14:00:54 -Generating unique operation named: infoUsingHEAD_1
2018-06-28 14:00:54 -Generating unique operation named: infoUsingPOST_1
2018-06-28 14:00:54 -Generating unique operation named: infoUsingPUT_1
2018-06-28 14:00:54 -Generating unique operation named: infoUsingPATCH_1
2018-06-28 14:00:54 -Generating unique operation named: infoUsingDELETE_1
2018-06-28 14:00:54 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-28 14:00:54 -Generating unique operation named: infoUsingTRACE_1
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_10
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_13
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_14
2018-06-28 14:00:54 -Generating unique operation named: saveUsingPOST_6
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPOST_7
2018-06-28 14:00:54 -Generating unique operation named: addUsingGET_8
2018-06-28 14:00:54 -Generating unique operation named: editUsingGET_9
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_11
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_15
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_16
2018-06-28 14:00:54 -Generating unique operation named: saveUsingPOST_7
2018-06-28 14:00:54 -Generating unique operation named: updateUsingGET_5
2018-06-28 14:00:54 -Generating unique operation named: updateUsingHEAD_5
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPOST_8
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPUT_5
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPATCH_5
2018-06-28 14:00:54 -Generating unique operation named: updateUsingDELETE_5
2018-06-28 14:00:54 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-28 14:00:54 -Generating unique operation named: updateUsingTRACE_5
2018-06-28 14:00:54 -Generating unique operation named: addUsingGET_9
2018-06-28 14:00:54 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-28 14:00:54 -Generating unique operation named: editUsingGET_10
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_12
2018-06-28 14:00:54 -Generating unique operation named: saveUsingPOST_8
2018-06-28 14:00:54 -Generating unique operation named: saveUsingPOST_9
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPOST_9
2018-06-28 14:00:54 -Generating unique operation named: addUsingGET_10
2018-06-28 14:00:54 -Generating unique operation named: editUsingGET_11
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_13
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_17
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_18
2018-06-28 14:00:54 -Generating unique operation named: updateUsingGET_6
2018-06-28 14:00:54 -Generating unique operation named: updateUsingHEAD_6
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPOST_10
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPUT_6
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPATCH_6
2018-06-28 14:00:54 -Generating unique operation named: updateUsingDELETE_6
2018-06-28 14:00:54 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-28 14:00:54 -Generating unique operation named: updateUsingTRACE_6
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_14
2018-06-28 14:00:54 -Generating unique operation named: listUsingHEAD_1
2018-06-28 14:00:54 -Generating unique operation named: listUsingPOST_1
2018-06-28 14:00:54 -Generating unique operation named: listUsingPUT_1
2018-06-28 14:00:54 -Generating unique operation named: listUsingPATCH_1
2018-06-28 14:00:54 -Generating unique operation named: listUsingDELETE_1
2018-06-28 14:00:54 -Generating unique operation named: listUsingOPTIONS_1
2018-06-28 14:00:54 -Generating unique operation named: listUsingTRACE_1
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_15
2018-06-28 14:00:54 -Generating unique operation named: addUsingGET_11
2018-06-28 14:00:54 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-28 14:00:54 -Generating unique operation named: editUsingGET_12
2018-06-28 14:00:54 -Generating unique operation named: listUsingGET_16
2018-06-28 14:00:54 -Generating unique operation named: removeUsingPOST_19
2018-06-28 14:00:54 -Generating unique operation named: saveUsingPOST_10
2018-06-28 14:00:54 -Generating unique operation named: treeUsingGET_3
2018-06-28 14:00:54 -Generating unique operation named: treeViewUsingGET_1
2018-06-28 14:00:54 -Generating unique operation named: updateUsingPOST_11
2018-06-28 14:00:54 -Starting Quartz Scheduler now
2018-06-28 14:00:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 14:00:54 -Starting...
2018-06-28 14:00:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-28 14:00:54 -Started.
2018-06-28 14:00:54 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-28 14:00:54 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-28 14:00:54 -Using a shared selector for servlet write/read
2018-06-28 14:00:54 -Tomcat started on port(s): 8099 (http)
2018-06-28 14:00:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-28 14:00:54 -==> Parameters: 
2018-06-28 14:00:54 -<==      Total: 1
2018-06-28 14:00:54 -Started BootdoApplication in 13.97 seconds (JVM running for 14.578)
2018-06-28 14:01:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-06-28 14:03:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-28 14:03:13 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-28 14:03:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-06-28 14:03:13 -Enabling session validation scheduler...
2018-06-28 14:03:13 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 14:03:13 -HTTP METHOD : GET
2018-06-28 14:03:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 14:03:13 -参数 : []
2018-06-28 14:03:13 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 14:03:13 -HTTP METHOD : GET
2018-06-28 14:03:13 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 14:03:13 -参数 : [{}]
2018-06-28 14:03:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:03:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 14:03:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 14:03:13 -<==      Total: 0
2018-06-28 14:03:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:03:13 -==> Parameters: 1(Long)
2018-06-28 14:03:13 -==> Parameters: 1(Long), 0(String)
2018-06-28 14:03:13 -<==      Total: 1
2018-06-28 14:03:13 -耗时 : 27
2018-06-28 14:03:13 -返回值 : com.bootdo.common.utils.PageUtils@5622efe8
2018-06-28 14:03:13 -<==      Total: 29
2018-06-28 14:03:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 14:03:13 -==> Parameters: 150(Long)
2018-06-28 14:03:13 -<==      Total: 1
2018-06-28 14:03:13 -耗时 : 40
2018-06-28 14:03:13 -返回值 : index_v1
2018-06-28 14:03:13 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-28 14:03:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:03:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 14:03:13.888(Timestamp)
2018-06-28 14:03:13 -<==    Updates: 1
2018-06-28 14:03:13 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-28 14:03:13 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-28 14:03:13 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-28 14:03:13 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-28 14:03:13 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-28 14:03:13 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-28 14:03:13 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-28 14:03:14 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 14:03:14 -HTTP METHOD : GET
2018-06-28 14:03:14 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 14:03:14 -参数 : []
2018-06-28 14:03:14 -耗时 : 0
2018-06-28 14:03:14 -返回值 : main
2018-06-28 14:03:14 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 14:03:14 -HTTP METHOD : GET
2018-06-28 14:03:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 14:03:14 -参数 : []
2018-06-28 14:03:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:03:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 14:03:14 -<==      Total: 0
2018-06-28 14:03:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:03:14 -==> Parameters: 1(Long), 0(String)
2018-06-28 14:03:14 -<==      Total: 1
2018-06-28 14:03:14 -耗时 : 7
2018-06-28 14:03:14 -返回值 : com.bootdo.common.utils.PageUtils@774aac0d
2018-06-28 14:03:14 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 14:03:14 -HTTP METHOD : GET
2018-06-28 14:03:14 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 14:03:14 -参数 : []
2018-06-28 14:03:14 -耗时 : 0
2018-06-28 14:03:14 -返回值 : main
2018-06-28 14:03:17 -请求地址 : http://127.0.0.1:8099/system/dict/type
2018-06-28 14:03:17 -HTTP METHOD : GET
2018-06-28 14:03:17 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listType
2018-06-28 14:03:17 -参数 : []
2018-06-28 14:03:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:17 -请求地址 : http://127.0.0.1:8099/system/dict/dicttype
2018-06-28 14:03:17 -HTTP METHOD : GET
2018-06-28 14:03:17 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listDictType
2018-06-28 14:03:17 -参数 : []
2018-06-28 14:03:17 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-28 14:03:17 -==>  Preparing: select `did`,`dname`,`dcode`,`remark` from sys_dict 
2018-06-28 14:03:17 -==> Parameters: 
2018-06-28 14:03:17 -==> Parameters: 
2018-06-28 14:03:17 -请求地址 : http://127.0.0.1:8099/system/dict
2018-06-28 14:03:17 -请求地址 : http://127.0.0.1:8099/system/dict/list
2018-06-28 14:03:17 -HTTP METHOD : GET
2018-06-28 14:03:17 -HTTP METHOD : GET
2018-06-28 14:03:17 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.list
2018-06-28 14:03:17 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.dict
2018-06-28 14:03:17 -参数 : [{limit=10, offset=0}]
2018-06-28 14:03:17 -参数 : []
2018-06-28 14:03:17 -<==      Total: 3
2018-06-28 14:03:17 -耗时 : 0
2018-06-28 14:03:17 -返回值 : system/dict/dict
2018-06-28 14:03:17 -耗时 : 5
2018-06-28 14:03:17 -返回值 : [com.bootdo.system.dicttype.domain.DictTypeDO@21957988, com.bootdo.system.dicttype.domain.DictTypeDO@4391342d, com.bootdo.system.dicttype.domain.DictTypeDO@4762b33a]
2018-06-28 14:03:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-28 14:03:17 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:03:17 -<==      Total: 31
2018-06-28 14:03:17 -耗时 : 11
2018-06-28 14:03:17 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-28 14:03:17 -<==      Total: 10
2018-06-28 14:03:17 -==>  Preparing: select count(*) from sys_dict3 
2018-06-28 14:03:17 -==> Parameters: 
2018-06-28 14:03:17 -<==      Total: 1
2018-06-28 14:03:17 -耗时 : 10
2018-06-28 14:03:17 -返回值 : com.bootdo.common.utils.PageUtils@575129b4
2018-06-28 14:03:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:56 -请求地址 : http://127.0.0.1:8099/system/role
2018-06-28 14:03:56 -HTTP METHOD : GET
2018-06-28 14:03:56 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 14:03:56 -请求地址 : http://127.0.0.1:8099/system/role/list
2018-06-28 14:03:56 -参数 : []
2018-06-28 14:03:56 -HTTP METHOD : GET
2018-06-28 14:03:56 -耗时 : 1
2018-06-28 14:03:56 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.list
2018-06-28 14:03:56 -返回值 : system/role/role
2018-06-28 14:03:56 -参数 : []
2018-06-28 14:03:56 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 14:03:56 -==> Parameters: 
2018-06-28 14:03:56 -<==      Total: 2
2018-06-28 14:03:56 -耗时 : 6
2018-06-28 14:03:56 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-06-28 14:03:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:03:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:04:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:04:00 -请求地址 : http://127.0.0.1:8099/system/role/edit/59
2018-06-28 14:04:00 -HTTP METHOD : GET
2018-06-28 14:04:00 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.edit
2018-06-28 14:04:00 -参数 : [59, {}]
2018-06-28 14:04:00 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2018-06-28 14:04:00 -==> Parameters: 59(Long)
2018-06-28 14:04:00 -<==      Total: 1
2018-06-28 14:04:00 -耗时 : 2
2018-06-28 14:04:00 -返回值 : system/role/edit
2018-06-28 14:04:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:04:00 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 3(Integer), com.bootdo.system.role.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2018-06-28 14:04:00.101(Timestamp)
2018-06-28 14:04:00 -<==    Updates: 1
2018-06-28 14:04:00 -请求地址 : http://127.0.0.1:8099/system/menu/tree/59
2018-06-28 14:04:00 -HTTP METHOD : GET
2018-06-28 14:04:00 -CLASS_METHOD : com.bootdo.system.menu.controller.MenuController.tree
2018-06-28 14:04:00 -参数 : [59]
2018-06-28 14:04:00 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2018-06-28 14:04:00 -==> Parameters: 
2018-06-28 14:04:00 -<==      Total: 66
2018-06-28 14:04:00 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2018-06-28 14:04:00 -==> Parameters: 59(Long)
2018-06-28 14:04:00 -<==      Total: 52
2018-06-28 14:04:00 -耗时 : 18
2018-06-28 14:04:00 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"图表管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","state":{"selected":true},"text":"待办任务"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"99","parentId":"96","state":{"selected":true},"text":"所有权限"}],"hasChildren":true,"hasParent":true,"id":"96","parentId":"93","state":{"selected":false},"text":"流程管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"95","parentId":"94","state":{"selected":true},"text":"全部权限"}],"hasChildren":true,"hasParent":true,"id":"94","parentId":"93","state":{"selected":false},"text":"模型管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","state":{"selected":false},"text":"工作流程"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":false},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":false},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":false},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":false},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","state":{"selected":false},"text":"swagger"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":false},"text":"计划任务"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","state":{"selected":false},"text":"代码生成"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","state":{"selected":true},"text":"发布文章"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"60","parentId":"50","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"59","parentId":"50","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"58","parentId":"50","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"51","parentId":"50","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"50","parentId":"49","state":{"selected":false},"text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","state":{"selected":false},"text":"博客管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"部门管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"108","parentId":"105","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"105","state":{"selected":false},"text":"修改"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"105","parentId":"1","state":{"selected":false},"text":"正则管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-06-28 14:05:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:05:00 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:05:00 -请求地址 : http://127.0.0.1:8099/system/quartzjob/list
2018-06-28 14:05:00 -HTTP METHOD : GET
2018-06-28 14:05:00 -请求地址 : http://127.0.0.1:8099/system/quartzjob
2018-06-28 14:05:00 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.list
2018-06-28 14:05:00 -HTTP METHOD : GET
2018-06-28 14:05:00 -参数 : [{limit=10, offset=0}]
2018-06-28 14:05:00 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController
2018-06-28 14:05:00 -参数 : []
2018-06-28 14:05:00 -耗时 : 1
2018-06-28 14:05:00 -返回值 : system/quartzjob/quartzjob
2018-06-28 14:05:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2018-06-28 14:05:00 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:05:00 -<==      Total: 1
2018-06-28 14:05:00 -==>  Preparing: select count(*) from sys_task 
2018-06-28 14:05:00 -==> Parameters: 
2018-06-28 14:05:00 -<==      Total: 1
2018-06-28 14:05:00 -耗时 : 11
2018-06-28 14:05:00 -返回值 : com.bootdo.common.utils.PageUtils@1a180434
2018-06-28 14:06:05 -请求地址 : http://127.0.0.1:8099/system/quartzjob/changeJobStatus
2018-06-28 14:06:05 -HTTP METHOD : POST
2018-06-28 14:06:05 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus
2018-06-28 14:06:05 -参数 : [2, start]
2018-06-28 14:06:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task where id = ? 
2018-06-28 14:06:05 -==> Parameters: 2(Long)
2018-06-28 14:06:05 -<==      Total: 1
2018-06-28 14:06:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-28 14:06:05 -==>  Preparing: update sys_task SET `cron_expression` = ?, `method_name` = ?, `is_concurrent` = ?, `description` = ?, `update_by` = ?, `bean_class` = ?, `create_date` = ?, `job_status` = ?, `job_group` = ?, `update_date` = ?, `spring_bean` = ?, `job_name` = ? where id = ? 
2018-06-28 14:06:05 -==> Parameters: 0/10 * * * * ?(String), run1(String), 1(String), (String), 4028ea815a3d2a8c015a3d2f8d2a0002(String), com.bootdo.common.task.WelcomeJob(String), 2017-05-19 18:30:56.0(Timestamp), 1(String), group1(String), 2017-05-19 18:31:07.0(Timestamp), (String), welcomJob(String), 2(Long)
2018-06-28 14:06:05 -<==    Updates: 1
2018-06-28 14:06:05 -耗时 : 28
2018-06-28 14:06:05 -返回值 : {msg=任务启动成功, code=0}
2018-06-28 14:06:05 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:06:05 -请求地址 : http://127.0.0.1:8099/system/quartzjob/list
2018-06-28 14:06:05 -HTTP METHOD : GET
2018-06-28 14:06:05 -CLASS_METHOD : com.bootdo.system.quartzjob.controller.QuartzJobController.list
2018-06-28 14:06:05 -参数 : [{limit=10, offset=0}]
2018-06-28 14:06:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc limit ?, ? 
2018-06-28 14:06:05 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:06:05 -<==      Total: 1
2018-06-28 14:06:05 -==>  Preparing: select count(*) from sys_task 
2018-06-28 14:06:05 -==> Parameters: 
2018-06-28 14:06:05 -<==      Total: 1
2018-06-28 14:06:05 -耗时 : 3
2018-06-28 14:06:05 -返回值 : com.bootdo.common.utils.PageUtils@7b275791
2018-06-28 14:31:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 6, active threads = 0, queued tasks = 0, completed tasks = 155], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 352]
2018-06-28 14:36:12 -请求地址 : http://127.0.0.1:8099/login;JSESSIONID=e53629ed-e3fa-40f5-a401-faedd5cb9e62
2018-06-28 14:36:12 -HTTP METHOD : GET
2018-06-28 14:36:12 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 14:36:12 -参数 : []
2018-06-28 14:36:12 -耗时 : 1
2018-06-28 14:36:12 -返回值 : login
2018-06-28 14:36:12 -请求地址 : http://127.0.0.1:8099/login;JSESSIONID=e53629ed-e3fa-40f5-a401-faedd5cb9e62
2018-06-28 14:36:12 -HTTP METHOD : GET
2018-06-28 14:36:12 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 14:36:12 -参数 : []
2018-06-28 14:36:12 -耗时 : 1
2018-06-28 14:36:12 -返回值 : login
2018-06-28 14:36:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:36:14 -==> Parameters: admin(String)
2018-06-28 14:36:14 -<==      Total: 1
2018-06-28 14:36:14 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:36:14 -HTTP METHOD : POST
2018-06-28 14:36:14 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:36:14 -参数 : [admin, 111111]
2018-06-28 14:36:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:36:14 -==> Parameters: admin(String)
2018-06-28 14:36:14 -<==      Total: 1
2018-06-28 14:36:14 -耗时 : 9
2018-06-28 14:36:14 -返回值 : {msg=操作成功, code=0}
2018-06-28 14:36:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:36:14 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:36:14.046(Timestamp)
2018-06-28 14:36:14 -<==    Updates: 1
2018-06-28 14:36:14 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 14:36:14 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 14:36:14 -HTTP METHOD : GET
2018-06-28 14:36:14 -HTTP METHOD : GET
2018-06-28 14:36:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 14:36:14 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 14:36:14 -参数 : []
2018-06-28 14:36:14 -参数 : [{}]
2018-06-28 14:36:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 14:36:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:36:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 14:36:14 -==> Parameters: 1(Long)
2018-06-28 14:36:14 -<==      Total: 0
2018-06-28 14:36:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:36:14 -==> Parameters: 1(Long), 0(String)
2018-06-28 14:36:14 -<==      Total: 1
2018-06-28 14:36:14 -耗时 : 5
2018-06-28 14:36:14 -返回值 : com.bootdo.common.utils.PageUtils@1eb8f860
2018-06-28 14:36:14 -<==      Total: 29
2018-06-28 14:36:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 14:36:14 -==> Parameters: 150(Long)
2018-06-28 14:36:14 -<==      Total: 1
2018-06-28 14:36:14 -耗时 : 10
2018-06-28 14:36:14 -返回值 : index_v1
2018-06-28 14:36:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:36:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 14:36:14.074(Timestamp)
2018-06-28 14:36:14 -<==    Updates: 1
2018-06-28 14:36:14 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 14:36:14 -HTTP METHOD : GET
2018-06-28 14:36:14 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 14:36:14 -参数 : []
2018-06-28 14:36:14 -耗时 : 0
2018-06-28 14:36:14 -返回值 : main
2018-06-28 14:36:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 14:36:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 14:36:16 -==> Parameters: 1(Long)
2018-06-28 14:36:16 -==> Parameters: 1(Long)
2018-06-28 14:36:16 -<==      Total: 51
2018-06-28 14:36:16 -<==      Total: 51
2018-06-28 14:36:16 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:16 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:16 -请求地址 : http://127.0.0.1:8099/oa/notify
2018-06-28 14:36:16 -HTTP METHOD : GET
2018-06-28 14:36:16 -请求地址 : http://127.0.0.1:8099/oa/notify/list
2018-06-28 14:36:16 -HTTP METHOD : GET
2018-06-28 14:36:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2018-06-28 14:36:16 -参数 : [{limit=10, offset=0}]
2018-06-28 14:36:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.oaNotify
2018-06-28 14:36:16 -参数 : []
2018-06-28 14:36:16 -耗时 : 1
2018-06-28 14:36:16 -返回值 : oa/notify/notify
2018-06-28 14:36:16 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2018-06-28 14:36:16 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:36:16 -<==      Total: 5
2018-06-28 14:36:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:16 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:16 -<==      Total: 1
2018-06-28 14:36:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:16 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:16 -<==      Total: 1
2018-06-28 14:36:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:16 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:16 -<==      Total: 1
2018-06-28 14:36:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:16 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:16 -<==      Total: 1
2018-06-28 14:36:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:16 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:16 -<==      Total: 1
2018-06-28 14:36:16 -==>  Preparing: select count(*) from oa_notify 
2018-06-28 14:36:16 -==> Parameters: 
2018-06-28 14:36:16 -<==      Total: 1
2018-06-28 14:36:16 -耗时 : 19
2018-06-28 14:36:16 -返回值 : com.bootdo.common.utils.PageUtils@5d049801
2018-06-28 14:36:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:16 -请求地址 : http://127.0.0.1:8099/login;JSESSIONID=722e5d24-41e2-4027-b9c3-c35a8aa41f7d
2018-06-28 14:36:16 -HTTP METHOD : GET
2018-06-28 14:36:16 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 14:36:16 -参数 : []
2018-06-28 14:36:16 -耗时 : 0
2018-06-28 14:36:16 -返回值 : login
2018-06-28 14:36:23 -请求地址 : http://127.0.0.1:8099/oa/notify/selfNotify
2018-06-28 14:36:23 -HTTP METHOD : GET
2018-06-28 14:36:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2018-06-28 14:36:23 -参数 : []
2018-06-28 14:36:23 -耗时 : 0
2018-06-28 14:36:23 -返回值 : oa/notify/selfNotify
2018-06-28 14:36:23 -请求地址 : http://127.0.0.1:8099/oa/notify/selfList
2018-06-28 14:36:23 -HTTP METHOD : GET
2018-06-28 14:36:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2018-06-28 14:36:23 -参数 : [{limit=10, offset=0}]
2018-06-28 14:36:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:36:23 -==> Parameters: 1(Long), 0(Integer), 10(Integer)
2018-06-28 14:36:23 -<==      Total: 5
2018-06-28 14:36:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:36:23 -==> Parameters: 1(Long)
2018-06-28 14:36:23 -<==      Total: 1
2018-06-28 14:36:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:36:23 -==> Parameters: 1(Long)
2018-06-28 14:36:23 -<==      Total: 1
2018-06-28 14:36:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:36:23 -==> Parameters: 1(Long)
2018-06-28 14:36:23 -<==      Total: 1
2018-06-28 14:36:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:36:23 -==> Parameters: 1(Long)
2018-06-28 14:36:23 -<==      Total: 1
2018-06-28 14:36:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:36:23 -==> Parameters: 1(Long)
2018-06-28 14:36:23 -<==      Total: 1
2018-06-28 14:36:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:36:23 -==> Parameters: 1(Long), null
2018-06-28 14:36:23 -<==      Total: 1
2018-06-28 14:36:23 -耗时 : 16
2018-06-28 14:36:23 -返回值 : com.bootdo.common.utils.PageUtils@722cf589
2018-06-28 14:36:23 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:23 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:23 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:23 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:25 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:25 -请求地址 : http://127.0.0.1:8099/oa/notify/add
2018-06-28 14:36:25 -HTTP METHOD : GET
2018-06-28 14:36:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.add
2018-06-28 14:36:25 -参数 : []
2018-06-28 14:36:25 -耗时 : 0
2018-06-28 14:36:25 -返回值 : oa/notify/add
2018-06-28 14:36:25 -请求地址 : http://127.0.0.1:8099/system/dict/list/oa_notify_type
2018-06-28 14:36:25 -HTTP METHOD : GET
2018-06-28 14:36:25 -CLASS_METHOD : com.bootdo.system.dict.controller.DictController.listByType
2018-06-28 14:36:25 -参数 : [oa_notify_type]
2018-06-28 14:36:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc 
2018-06-28 14:36:25 -==> Parameters: oa_notify_type(String)
2018-06-28 14:36:25 -<==      Total: 3
2018-06-28 14:36:25 -耗时 : 4
2018-06-28 14:36:25 -返回值 : [DictDO{id=107, name='活动通告', value='3', type='oa_notify_type', description='通知通告类型', sort=30, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=106, name='奖惩通告', value='2', type='oa_notify_type', description='通知通告类型', sort=20, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=105, name='会议通告', value='1', type='oa_notify_type', description='通知通告类型', sort=10, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}]
2018-06-28 14:36:34 -请求地址 : http://127.0.0.1:8099/system/user/treeView
2018-06-28 14:36:34 -HTTP METHOD : GET
2018-06-28 14:36:34 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.treeView
2018-06-28 14:36:34 -参数 : []
2018-06-28 14:36:34 -耗时 : 0
2018-06-28 14:36:34 -返回值 : system/user/userTree
2018-06-28 14:36:34 -请求地址 : http://127.0.0.1:8099/system/user/tree
2018-06-28 14:36:34 -HTTP METHOD : GET
2018-06-28 14:36:34 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.tree
2018-06-28 14:36:34 -参数 : []
2018-06-28 14:36:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 14:36:34 -==> Parameters: 
2018-06-28 14:36:34 -<==      Total: 10
2018-06-28 14:36:34 -==>  Preparing: select DISTINCT parent_id from sys_dept 
2018-06-28 14:36:34 -==> Parameters: 
2018-06-28 14:36:34 -<==      Total: 5
2018-06-28 14:36:34 -==>  Preparing: select DISTINCT dept_id from sys_user 
2018-06-28 14:36:34 -==> Parameters: 
2018-06-28 14:36:34 -<==      Total: 5
2018-06-28 14:36:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc 
2018-06-28 14:36:34 -==> Parameters: 
2018-06-28 14:36:34 -<==      Total: 11
2018-06-28 14:36:34 -耗时 : 18
2018-06-28 14:36:34 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"13","state":{"opened":true,"mType":"user"},"text":"刘亦菲"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true,"mType":"dept"},"text":"测试部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true,"mType":"dept"},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"9","state":{"opened":true,"mType":"user"},"text":"郭德纲"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"9","state":{"opened":true,"mType":"user"},"text":"鹿晗"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true,"mType":"dept"},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"8","state":{"opened":true,"mType":"user"},"text":"李彦宏"}],"hasChildren":true,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true,"mType":"dept"},"text":"研发二部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"36","parentId":"7","state":{"opened":true,"mType":"user"},"text":"刘德华"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true,"mType":"dept"},"text":"研發一部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"6","state":{"opened":true,"mType":"user"},"text":"王健林"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"6","state":{"opened":true,"mType":"user"},"text":"令狐冲"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"6","state":{"opened":true,"mType":"user"},"text":"吴亦凡"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"6","state":{"opened":true,"mType":"user"},"text":"张学友"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"6","state":{"opened":true,"mType":"user"},"text":"临时用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"1","parentId":"6","state":{"opened":true,"mType":"user"},"text":"超级管理员"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true,"mType":"dept"},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-06-28 14:36:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:49 -请求地址 : http://127.0.0.1:8099/oa/notify/save
2018-06-28 14:36:49 -HTTP METHOD : POST
2018-06-28 14:36:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.save
2018-06-28 14:36:49 -参数 : [NotifyDO{id=null, type='3', title='234567890', content='234567890', files='null', status='1', createBy=null, createDate=null, updateBy='null', updateDate=null, remarks='345678', delFlag='null', userIds=[132]}]
2018-06-28 14:36:49 -==>  Preparing: insert into oa_notify ( `type`, `title`, `content`, `files`, `status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `del_flag` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:36:49 -==> Parameters: 3(String), 234567890(String), 234567890(String), null, 1(String), 1(Long), null, null, 2018-06-28 14:36:49.348(Timestamp), 345678(String), null
2018-06-28 14:36:49 -<==    Updates: 1
2018-06-28 14:36:49 -==>  Preparing: insert into oa_notify_record ( `notify_id`, `user_id`, `is_read`, `read_date` ) values ( ?, ?, ?, ? ) 
2018-06-28 14:36:49 -==> Parameters: 46(Long), 132(Long), 0(Integer), null
2018-06-28 14:36:49 -<==    Updates: 1
2018-06-28 14:36:49 -耗时 : 16
2018-06-28 14:36:49 -返回值 : {msg=操作成功, code=0}
2018-06-28 14:36:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:49 -请求地址 : http://127.0.0.1:8099/oa/notify/list
2018-06-28 14:36:49 -HTTP METHOD : GET
2018-06-28 14:36:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2018-06-28 14:36:49 -参数 : [{limit=10, offset=0}]
2018-06-28 14:36:49 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2018-06-28 14:36:49 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:36:49 -<==      Total: 6
2018-06-28 14:36:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:49 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:49 -<==      Total: 1
2018-06-28 14:36:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:49 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:49 -<==      Total: 1
2018-06-28 14:36:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:49 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:49 -<==      Total: 1
2018-06-28 14:36:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:49 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:49 -<==      Total: 1
2018-06-28 14:36:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:49 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:49 -<==      Total: 1
2018-06-28 14:36:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:49 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:49 -<==      Total: 1
2018-06-28 14:36:49 -==>  Preparing: select count(*) from oa_notify 
2018-06-28 14:36:49 -==> Parameters: 
2018-06-28 14:36:49 -<==      Total: 1
2018-06-28 14:36:49 -耗时 : 17
2018-06-28 14:36:49 -返回值 : com.bootdo.common.utils.PageUtils@36b757fb
2018-06-28 14:36:58 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:36:58 -请求地址 : http://127.0.0.1:8099/oa/notify/edit/46
2018-06-28 14:36:58 -HTTP METHOD : GET
2018-06-28 14:36:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.edit
2018-06-28 14:36:58 -参数 : [46, {}]
2018-06-28 14:36:58 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify where id = ? 
2018-06-28 14:36:58 -==> Parameters: 46(Long)
2018-06-28 14:36:58 -<==      Total: 1
2018-06-28 14:36:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:36:58 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:36:58 -<==      Total: 1
2018-06-28 14:36:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc 
2018-06-28 14:36:58 -==> Parameters: oa_notify_type(String)
2018-06-28 14:36:58 -<==      Total: 3
2018-06-28 14:36:58 -耗时 : 6
2018-06-28 14:36:58 -返回值 : oa/notify/edit
2018-06-28 14:37:09 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 14:37:09 -HTTP METHOD : GET
2018-06-28 14:37:09 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 14:37:09 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:152)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:249)
	at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
	at org.apache.shiro.subject.support.DefaultSubjectContext.resolvePrincipals(DefaultSubjectContext.java:164)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolvePrincipals(DefaultSecurityManager.java:487)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:342)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:37:09 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 14:37:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 14:37:09 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:37:09 -<==      Total: 10
2018-06-28 14:37:09 -==>  Preparing: select count(*) from sys_user 
2018-06-28 14:37:09 -==> Parameters: 
2018-06-28 14:37:09 -<==      Total: 1
2018-06-28 14:37:09 -耗时 : 7
2018-06-28 14:37:09 -返回值 : com.bootdo.common.utils.PageUtils@7aa6a9
2018-06-28 14:37:11 -请求地址 : http://127.0.0.1:8099/
2018-06-28 14:37:11 -HTTP METHOD : GET
2018-06-28 14:37:11 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.welcome
2018-06-28 14:37:11 -参数 : [{}]
2018-06-28 14:37:11 -耗时 : 0
2018-06-28 14:37:11 -返回值 : redirect:/blog
2018-06-28 14:37:11 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:37:11 -HTTP METHOD : GET
2018-06-28 14:37:11 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:37:11 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:37:11 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:37:11 -==> Parameters: article(String)
2018-06-28 14:37:11 -<==      Total: 10
2018-06-28 14:37:11 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:37:11 -==> Parameters: article(String)
2018-06-28 14:37:11 -<==      Total: 1
2018-06-28 14:37:11 -耗时 : 20
2018-06-28 14:37:11 -返回值 : com.bootdo.common.utils.PageUtils@1ad70f1c
2018-06-28 14:37:11 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 14:37:11 -HTTP METHOD : GET
2018-06-28 14:37:11 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 14:37:11 -参数 : []
2018-06-28 14:37:11 -耗时 : 0
2018-06-28 14:37:11 -返回值 : blog/index/main
2018-06-28 14:37:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:37:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:37:13 -请求地址 : http://127.0.0.1:8099/system/role
2018-06-28 14:37:13 -HTTP METHOD : GET
2018-06-28 14:37:13 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.role
2018-06-28 14:37:13 -请求地址 : http://127.0.0.1:8099/system/role/list
2018-06-28 14:37:13 -参数 : []
2018-06-28 14:37:13 -耗时 : 0
2018-06-28 14:37:13 -HTTP METHOD : GET
2018-06-28 14:37:13 -返回值 : system/role/role
2018-06-28 14:37:13 -CLASS_METHOD : com.bootdo.system.role.controller.RoleController.list
2018-06-28 14:37:13 -参数 : []
2018-06-28 14:37:13 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 14:37:13 -==> Parameters: 
2018-06-28 14:37:13 -<==      Total: 2
2018-06-28 14:37:13 -耗时 : 2
2018-06-28 14:37:13 -返回值 : [RoleDO{roleId=59, roleName='普通用户', roleSign='null', remark='基本用户权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2018-06-28 14:37:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:37:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:37:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:37:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:37:18 -从redis中删除 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:37:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:37:18 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
org.apache.shiro.session.StoppedSessionException: Session with id [e53629ed-e3fa-40f5-a401-faedd5cb9e62] has been explicitly stopped.  No further interaction under this session is allowed.
	at org.apache.shiro.session.mgt.SimpleSession.validate(SimpleSession.java:270)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doValidate(AbstractValidatingSessionManager.java:186)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:143)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:152)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:249)
	at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
	at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
	at org.apache.shiro.mgt.DefaultSubjectDAO.mergePrincipals(DefaultSubjectDAO.java:210)
	at org.apache.shiro.mgt.DefaultSubjectDAO.saveToSession(DefaultSubjectDAO.java:166)
	at org.apache.shiro.mgt.DefaultSubjectDAO.save(DefaultSubjectDAO.java:147)
	at org.apache.shiro.mgt.DefaultSecurityManager.save(DefaultSecurityManager.java:383)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:350)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:37:18 -请求地址 : http://127.0.0.1:8099/
2018-06-28 14:37:18 -HTTP METHOD : GET
2018-06-28 14:37:18 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.welcome
2018-06-28 14:37:18 -参数 : [{}]
2018-06-28 14:37:18 -耗时 : 1
2018-06-28 14:37:18 -返回值 : redirect:/blog
2018-06-28 14:37:18 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 14:37:18 -HTTP METHOD : GET
2018-06-28 14:37:18 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 14:37:18 -参数 : []
2018-06-28 14:37:18 -耗时 : 1
2018-06-28 14:37:18 -返回值 : blog/index/main
2018-06-28 14:37:55 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 14:37:55 -HTTP METHOD : GET
2018-06-28 14:37:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 14:37:55 -参数 : []
2018-06-28 14:37:55 -耗时 : 4
2018-06-28 14:37:55 -返回值 : blog/index/main
2018-06-28 14:37:55 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:37:55 -HTTP METHOD : GET
2018-06-28 14:37:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:37:55 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:37:55 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:37:55 -==> Parameters: article(String)
2018-06-28 14:37:55 -<==      Total: 10
2018-06-28 14:37:55 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:37:55 -==> Parameters: article(String)
2018-06-28 14:37:55 -<==      Total: 1
2018-06-28 14:37:55 -耗时 : 10
2018-06-28 14:37:55 -返回值 : com.bootdo.common.utils.PageUtils@5acc816f
2018-06-28 14:37:56 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:37:56 -HTTP METHOD : GET
2018-06-28 14:37:56 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 14:37:56 -参数 : []
2018-06-28 14:37:56 -耗时 : 0
2018-06-28 14:37:56 -返回值 : login
2018-06-28 14:37:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:37:58 -==> Parameters: admin(String)
2018-06-28 14:37:58 -<==      Total: 1
2018-06-28 14:37:58 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:37:58 -HTTP METHOD : POST
2018-06-28 14:37:58 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:37:58 -参数 : [admin, 111111]
2018-06-28 14:37:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:37:58 -==> Parameters: admin(String)
2018-06-28 14:37:58 -<==      Total: 1
2018-06-28 14:37:58 -耗时 : 5
2018-06-28 14:37:58 -返回值 : {msg=操作成功, code=0}
2018-06-28 14:37:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:37:58 -==> Parameters: 1(Long), admin(String), 登录(String), 5(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:37:58.252(Timestamp)
2018-06-28 14:37:58 -<==    Updates: 1
2018-06-28 14:37:58 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 14:37:58 -HTTP METHOD : GET
2018-06-28 14:37:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 14:37:58 -参数 : []
2018-06-28 14:37:58 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 14:37:58 -HTTP METHOD : GET
2018-06-28 14:37:58 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 14:37:58 -参数 : [{}]
2018-06-28 14:37:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:37:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-28 14:37:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 14:37:58 -==> Parameters: 1(Long)
2018-06-28 14:37:58 -<==      Total: 0
2018-06-28 14:37:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:37:58 -==> Parameters: 1(Long), 0(String)
2018-06-28 14:37:58 -<==      Total: 29
2018-06-28 14:37:58 -<==      Total: 1
2018-06-28 14:37:58 -耗时 : 5
2018-06-28 14:37:58 -返回值 : com.bootdo.common.utils.PageUtils@694d6c14
2018-06-28 14:37:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 14:37:58 -==> Parameters: 150(Long)
2018-06-28 14:37:58 -<==      Total: 1
2018-06-28 14:37:58 -耗时 : 7
2018-06-28 14:37:58 -返回值 : index_v1
2018-06-28 14:37:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:37:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 7(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 14:37:58.28(Timestamp)
2018-06-28 14:37:58 -<==    Updates: 1
2018-06-28 14:37:58 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 14:37:58 -HTTP METHOD : GET
2018-06-28 14:37:58 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 14:37:58 -参数 : []
2018-06-28 14:37:58 -耗时 : 0
2018-06-28 14:37:58 -返回值 : main
2018-06-28 14:38:03 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 14:38:03 -HTTP METHOD : GET
2018-06-28 14:38:03 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 14:38:03 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 14:38:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 14:38:03 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:38:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:03 -<==      Total: 10
2018-06-28 14:38:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 14:38:03 -==> Parameters: 1(Long)
2018-06-28 14:38:03 -==>  Preparing: select count(*) from sys_user 
2018-06-28 14:38:03 -==> Parameters: 
2018-06-28 14:38:03 -<==      Total: 51
2018-06-28 14:38:03 -<==      Total: 1
2018-06-28 14:38:03 -耗时 : 5
2018-06-28 14:38:03 -返回值 : com.bootdo.common.utils.PageUtils@66ecd6e0
2018-06-28 14:38:03 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:03 -请求地址 : http://127.0.0.1:8099/system/user/
2018-06-28 14:38:03 -HTTP METHOD : GET
2018-06-28 14:38:03 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.user
2018-06-28 14:38:03 -参数 : [{}]
2018-06-28 14:38:03 -耗时 : 0
2018-06-28 14:38:03 -返回值 : system/user/user
2018-06-28 14:38:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:03 -请求地址 : http://127.0.0.1:8099/system/dept/tree
2018-06-28 14:38:03 -HTTP METHOD : GET
2018-06-28 14:38:03 -CLASS_METHOD : com.bootdo.system.dept.controller.DeptController.tree
2018-06-28 14:38:03 -参数 : []
2018-06-28 14:38:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 14:38:03 -==> Parameters: 
2018-06-28 14:38:03 -<==      Total: 10
2018-06-28 14:38:03 -耗时 : 8
2018-06-28 14:38:03 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-06-28 14:38:07 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 14:38:07 -HTTP METHOD : GET
2018-06-28 14:38:07 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 14:38:07 -参数 : [{limit=10, offset=10, name=, deptId=}]
2018-06-28 14:38:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 14:38:07 -==> Parameters: 10(Integer), 10(Integer)
2018-06-28 14:38:07 -<==      Total: 1
2018-06-28 14:38:07 -==>  Preparing: select count(*) from sys_user 
2018-06-28 14:38:07 -==> Parameters: 
2018-06-28 14:38:07 -<==      Total: 1
2018-06-28 14:38:07 -耗时 : 4
2018-06-28 14:38:07 -返回值 : com.bootdo.common.utils.PageUtils@539a19c1
2018-06-28 14:38:10 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 14:38:10 -HTTP METHOD : GET
2018-06-28 14:38:10 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 14:38:10 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 14:38:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 14:38:10 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:38:10 -<==      Total: 10
2018-06-28 14:38:10 -==>  Preparing: select count(*) from sys_user 
2018-06-28 14:38:10 -==> Parameters: 
2018-06-28 14:38:10 -<==      Total: 1
2018-06-28 14:38:10 -耗时 : 4
2018-06-28 14:38:10 -返回值 : com.bootdo.common.utils.PageUtils@7d2dd909
2018-06-28 14:38:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:13 -请求地址 : http://127.0.0.1:8099/system/user/edit/132
2018-06-28 14:38:13 -HTTP METHOD : GET
2018-06-28 14:38:13 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.edit
2018-06-28 14:38:13 -参数 : [{}, 132]
2018-06-28 14:38:13 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-06-28 14:38:13 -==> Parameters: 132(Long)
2018-06-28 14:38:13 -<==      Total: 2
2018-06-28 14:38:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:38:13 -==> Parameters: 132(Long)
2018-06-28 14:38:13 -<==      Total: 1
2018-06-28 14:38:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-06-28 14:38:13 -==> Parameters: 13(Long)
2018-06-28 14:38:13 -<==      Total: 1
2018-06-28 14:38:13 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-06-28 14:38:13 -==> Parameters: 132(Long)
2018-06-28 14:38:13 -<==      Total: 2
2018-06-28 14:38:13 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2018-06-28 14:38:13 -==> Parameters: 
2018-06-28 14:38:13 -<==      Total: 2
2018-06-28 14:38:13 -耗时 : 7
2018-06-28 14:38:13 -返回值 : system/user/edit
2018-06-28 14:38:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:38:13 -==> Parameters: 1(Long), admin(String), 编辑用户(String), 7(Integer), com.bootdo.system.user.controller.UserController.edit()(String), null, 127.0.0.1(String), 2018-06-28 14:38:13.753(Timestamp)
2018-06-28 14:38:13 -<==    Updates: 1
2018-06-28 14:38:22 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:22 -请求地址 : http://127.0.0.1:8099/system/user/update
2018-06-28 14:38:22 -HTTP METHOD : POST
2018-06-28 14:38:22 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.update
2018-06-28 14:38:22 -参数 : [UserDO{userId=132, username='lyf', name='刘亦菲', password='null', deptId=13, deptName='测试部', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=[59], sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:38:22 -==>  Preparing: update sys_user SET `username` = ?, `name` = ?, `dept_id` = ?, `email` = ?, `status` = ? where user_id = ? 
2018-06-28 14:38:22 -==> Parameters: lyf(String), 刘亦菲(String), 13(Long), lyf@bootdo.com(String), 1(Integer), 132(Long)
2018-06-28 14:38:22 -<==    Updates: 1
2018-06-28 14:38:22 -==>  Preparing: delete from sys_user_role where user_id=? 
2018-06-28 14:38:22 -==> Parameters: 132(Long)
2018-06-28 14:38:22 -<==    Updates: 2
2018-06-28 14:38:22 -==>  Preparing: INSERT INTO sys_user_role(user_id, role_id) values (?,?) 
2018-06-28 14:38:22 -==> Parameters: 132(Long), 59(Long)
2018-06-28 14:38:22 -<==    Updates: 1
2018-06-28 14:38:22 -耗时 : 15
2018-06-28 14:38:22 -返回值 : {msg=操作成功, code=0}
2018-06-28 14:38:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:38:22 -==> Parameters: 1(Long), admin(String), 更新用户(String), 15(Integer), com.bootdo.system.user.controller.UserController.update()(String), null, 127.0.0.1(String), 2018-06-28 14:38:22.237(Timestamp)
2018-06-28 14:38:22 -<==    Updates: 1
2018-06-28 14:38:22 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 14:38:22 -HTTP METHOD : GET
2018-06-28 14:38:22 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 14:38:22 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 14:38:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 14:38:22 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:38:22 -<==      Total: 10
2018-06-28 14:38:22 -==>  Preparing: select count(*) from sys_user 
2018-06-28 14:38:22 -==> Parameters: 
2018-06-28 14:38:22 -<==      Total: 1
2018-06-28 14:38:22 -耗时 : 5
2018-06-28 14:38:22 -返回值 : com.bootdo.common.utils.PageUtils@4e140a8a
2018-06-28 14:38:28 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:28 -请求地址 : http://127.0.0.1:8099/system/user/resetPwd/132
2018-06-28 14:38:28 -HTTP METHOD : GET
2018-06-28 14:38:28 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.resetPwd
2018-06-28 14:38:28 -参数 : [132, {}]
2018-06-28 14:38:28 -耗时 : 1
2018-06-28 14:38:28 -返回值 : system/user/reset_pwd
2018-06-28 14:38:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:38:28 -==> Parameters: 1(Long), admin(String), 请求更改用户密码(String), 1(Integer), com.bootdo.system.user.controller.UserController.resetPwd()(String), null, 127.0.0.1(String), 2018-06-28 14:38:28.26(Timestamp)
2018-06-28 14:38:28 -<==    Updates: 1
2018-06-28 14:38:34 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=150, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-28 14:38:34 -请求地址 : http://127.0.0.1:8099/system/user/adminResetPwd
2018-06-28 14:38:34 -HTTP METHOD : POST
2018-06-28 14:38:34 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.adminResetPwd
2018-06-28 14:38:34 -参数 : [com.bootdo.system.user.domain.UserVO@765073ea]
2018-06-28 14:38:34 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-06-28 14:38:34 -==> Parameters: 132(Long)
2018-06-28 14:38:34 -<==      Total: 1
2018-06-28 14:38:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:38:34 -==> Parameters: 132(Long)
2018-06-28 14:38:34 -<==      Total: 1
2018-06-28 14:38:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-06-28 14:38:34 -==> Parameters: 13(Long)
2018-06-28 14:38:34 -<==      Total: 1
2018-06-28 14:38:34 -==>  Preparing: update sys_user SET `username` = ?, `name` = ?, `password` = ?, `dept_id` = ?, `email` = ?, `status` = ? where user_id = ? 
2018-06-28 14:38:34 -==> Parameters: lyf(String), 刘亦菲(String), 7fdb1d9008f45950c1620ba0864e5fbd(String), 13(Long), lyf@bootdo.com(String), 1(Integer), 132(Long)
2018-06-28 14:38:34 -<==    Updates: 1
2018-06-28 14:38:34 -耗时 : 7
2018-06-28 14:38:34 -返回值 : {msg=操作成功, code=0}
2018-06-28 14:38:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:38:34 -==> Parameters: 1(Long), admin(String), admin提交更改用户密码(String), 7(Integer), com.bootdo.system.user.controller.UserController.adminResetPwd()(String), null, 127.0.0.1(String), 2018-06-28 14:38:34.409(Timestamp)
2018-06-28 14:38:34 -<==    Updates: 1
2018-06-28 14:38:34 -请求地址 : http://127.0.0.1:8099/system/user/list
2018-06-28 14:38:34 -HTTP METHOD : GET
2018-06-28 14:38:34 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.list
2018-06-28 14:38:34 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-28 14:38:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-28 14:38:34 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:38:34 -<==      Total: 10
2018-06-28 14:38:34 -==>  Preparing: select count(*) from sys_user 
2018-06-28 14:38:34 -==> Parameters: 
2018-06-28 14:38:34 -<==      Total: 1
2018-06-28 14:38:34 -耗时 : 5
2018-06-28 14:38:34 -返回值 : com.bootdo.common.utils.PageUtils@3b05a98
2018-06-28 14:38:37 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:38:37 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:38:37 -HTTP METHOD : GET
2018-06-28 14:38:37 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:38:37 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:38:37 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:38:37 -==> Parameters: article(String)
2018-06-28 14:38:37 -<==      Total: 10
2018-06-28 14:38:37 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:38:37 -==> Parameters: article(String)
2018-06-28 14:38:37 -<==      Total: 1
2018-06-28 14:38:37 -耗时 : 5
2018-06-28 14:38:37 -返回值 : com.bootdo.common.utils.PageUtils@38114eac
2018-06-28 14:38:40 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:38:40 -请求地址 : http://127.0.0.1:8099/
2018-06-28 14:38:40 -HTTP METHOD : GET
2018-06-28 14:38:40 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.welcome
2018-06-28 14:38:40 -参数 : [{}]
2018-06-28 14:38:40 -耗时 : 0
2018-06-28 14:38:40 -返回值 : redirect:/blog
2018-06-28 14:38:40 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 14:38:40 -HTTP METHOD : GET
2018-06-28 14:38:40 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 14:38:40 -参数 : []
2018-06-28 14:38:40 -耗时 : 0
2018-06-28 14:38:40 -返回值 : blog/index/main
2018-06-28 14:38:42 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:38:42 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 14:38:42 -HTTP METHOD : GET
2018-06-28 14:38:42 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 14:38:42 -参数 : []
2018-06-28 14:38:42 -耗时 : 0
2018-06-28 14:38:42 -返回值 : blog/index/main
2018-06-28 14:38:53 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 14:38:53 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:38:53 -HTTP METHOD : GET
2018-06-28 14:38:53 -HTTP METHOD : GET
2018-06-28 14:38:53 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:38:53 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:38:53 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 14:38:53 -参数 : []
2018-06-28 14:38:53 -耗时 : 0
2018-06-28 14:38:53 -返回值 : blog/index/main
2018-06-28 14:38:53 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:38:53 -==> Parameters: article(String)
2018-06-28 14:38:53 -<==      Total: 10
2018-06-28 14:38:53 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:38:53 -==> Parameters: article(String)
2018-06-28 14:38:53 -<==      Total: 1
2018-06-28 14:38:53 -耗时 : 5
2018-06-28 14:38:53 -返回值 : com.bootdo.common.utils.PageUtils@7daf8feb
2018-06-28 14:38:53 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:38:53 -HTTP METHOD : GET
2018-06-28 14:38:53 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:38:53 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:38:53 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:38:53 -==> Parameters: article(String)
2018-06-28 14:38:53 -<==      Total: 10
2018-06-28 14:38:53 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:38:53 -==> Parameters: article(String)
2018-06-28 14:38:53 -<==      Total: 1
2018-06-28 14:38:53 -耗时 : 6
2018-06-28 14:38:53 -返回值 : com.bootdo.common.utils.PageUtils@38a1c694
2018-06-28 14:38:54 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 14:38:54 -HTTP METHOD : GET
2018-06-28 14:38:54 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:38:54 -HTTP METHOD : GET
2018-06-28 14:38:54 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:38:54 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 14:38:54 -参数 : []
2018-06-28 14:38:54 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:38:54 -耗时 : 1
2018-06-28 14:38:54 -返回值 : blog/index/main
2018-06-28 14:38:54 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:38:54 -==> Parameters: article(String)
2018-06-28 14:38:54 -<==      Total: 10
2018-06-28 14:38:54 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:38:54 -==> Parameters: article(String)
2018-06-28 14:38:54 -<==      Total: 1
2018-06-28 14:38:54 -耗时 : 5
2018-06-28 14:38:54 -返回值 : com.bootdo.common.utils.PageUtils@4803c67
2018-06-28 14:38:55 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:38:55 -HTTP METHOD : GET
2018-06-28 14:38:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:38:55 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:38:55 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 10
2018-06-28 14:38:55 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 1
2018-06-28 14:38:55 -耗时 : 6
2018-06-28 14:38:55 -返回值 : com.bootdo.common.utils.PageUtils@744fb49d
2018-06-28 14:38:55 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 14:38:55 -HTTP METHOD : GET
2018-06-28 14:38:55 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:38:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 14:38:55 -参数 : []
2018-06-28 14:38:55 -HTTP METHOD : GET
2018-06-28 14:38:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:38:55 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:38:55 -耗时 : 1
2018-06-28 14:38:55 -返回值 : blog/index/main
2018-06-28 14:38:55 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 10
2018-06-28 14:38:55 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 1
2018-06-28 14:38:55 -耗时 : 5
2018-06-28 14:38:55 -返回值 : com.bootdo.common.utils.PageUtils@5c25b44e
2018-06-28 14:38:55 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:38:55 -HTTP METHOD : GET
2018-06-28 14:38:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:38:55 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:38:55 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 10
2018-06-28 14:38:55 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 1
2018-06-28 14:38:55 -耗时 : 6
2018-06-28 14:38:55 -返回值 : com.bootdo.common.utils.PageUtils@5a278ce2
2018-06-28 14:38:55 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:38:55 -HTTP METHOD : GET
2018-06-28 14:38:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:38:55 -请求地址 : http://127.0.0.1:8099/blog
2018-06-28 14:38:55 -HTTP METHOD : GET
2018-06-28 14:38:55 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:38:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-28 14:38:55 -参数 : []
2018-06-28 14:38:55 -耗时 : 0
2018-06-28 14:38:55 -返回值 : blog/index/main
2018-06-28 14:38:55 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 10
2018-06-28 14:38:55 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 1
2018-06-28 14:38:55 -耗时 : 4
2018-06-28 14:38:55 -返回值 : com.bootdo.common.utils.PageUtils@5828342c
2018-06-28 14:38:55 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-28 14:38:55 -HTTP METHOD : GET
2018-06-28 14:38:55 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-28 14:38:55 -参数 : [{type=article, limit=10, offset=0}]
2018-06-28 14:38:55 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 10
2018-06-28 14:38:55 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-28 14:38:55 -==> Parameters: article(String)
2018-06-28 14:38:55 -<==      Total: 1
2018-06-28 14:38:55 -耗时 : 4
2018-06-28 14:38:55 -返回值 : com.bootdo.common.utils.PageUtils@20463393
2018-06-28 14:38:56 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:38:56 -HTTP METHOD : GET
2018-06-28 14:38:56 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.login
2018-06-28 14:38:56 -参数 : []
2018-06-28 14:38:56 -耗时 : 0
2018-06-28 14:38:56 -返回值 : login
2018-06-28 14:39:09 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:09 -HTTP METHOD : POST
2018-06-28 14:39:09 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:09 -参数 : [liufeifei, 111111]
2018-06-28 14:39:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:09 -==> Parameters: liufeifei(String)
2018-06-28 14:39:09 -<==      Total: 0
2018-06-28 14:39:09 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - liufeifei, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:09 -耗时 : 3
2018-06-28 14:39:09 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:09 -==> Parameters: 1(Long), admin(String), 登录(String), 3(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:09.936(Timestamp)
2018-06-28 14:39:09 -<==    Updates: 1
2018-06-28 14:39:44 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:45 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:45 -HTTP METHOD : POST
2018-06-28 14:39:45 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:45 -参数 : [lye, 111111]
2018-06-28 14:39:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:45 -==> Parameters: lye(String)
2018-06-28 14:39:45 -<==      Total: 0
2018-06-28 14:39:45 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:45 -耗时 : 2
2018-06-28 14:39:45 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:45 -==> Parameters: 1(Long), admin(String), 登录(String), 2(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:45.405(Timestamp)
2018-06-28 14:39:45 -<==    Updates: 1
2018-06-28 14:39:45 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:45 -HTTP METHOD : POST
2018-06-28 14:39:45 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:45 -参数 : [lye, 111111]
2018-06-28 14:39:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:45 -==> Parameters: lye(String)
2018-06-28 14:39:45 -<==      Total: 0
2018-06-28 14:39:45 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:45 -耗时 : 2
2018-06-28 14:39:45 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:45 -==> Parameters: 1(Long), admin(String), 登录(String), 2(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:45.952(Timestamp)
2018-06-28 14:39:45 -<==    Updates: 1
2018-06-28 14:39:46 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:46 -HTTP METHOD : POST
2018-06-28 14:39:46 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:46 -参数 : [lye, 111111]
2018-06-28 14:39:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:46 -==> Parameters: lye(String)
2018-06-28 14:39:46 -<==      Total: 0
2018-06-28 14:39:46 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:46 -耗时 : 2
2018-06-28 14:39:46 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:46 -==> Parameters: 1(Long), admin(String), 登录(String), 3(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:46.228(Timestamp)
2018-06-28 14:39:46 -<==    Updates: 1
2018-06-28 14:39:46 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:46 -HTTP METHOD : POST
2018-06-28 14:39:46 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:46 -参数 : [lye, 111111]
2018-06-28 14:39:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:46 -==> Parameters: lye(String)
2018-06-28 14:39:46 -<==      Total: 0
2018-06-28 14:39:46 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:46 -耗时 : 2
2018-06-28 14:39:46 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:46 -==> Parameters: 1(Long), admin(String), 登录(String), 2(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:46.424(Timestamp)
2018-06-28 14:39:46 -<==    Updates: 1
2018-06-28 14:39:51 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:51 -HTTP METHOD : POST
2018-06-28 14:39:51 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:51 -参数 : [lye, 111111]
2018-06-28 14:39:51 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:51 -==> Parameters: lye(String)
2018-06-28 14:39:51 -<==      Total: 0
2018-06-28 14:39:51 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:51 -耗时 : 3
2018-06-28 14:39:51 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:51 -==> Parameters: 1(Long), admin(String), 登录(String), 3(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:51.932(Timestamp)
2018-06-28 14:39:51 -<==    Updates: 1
2018-06-28 14:39:53 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:53 -HTTP METHOD : POST
2018-06-28 14:39:53 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:53 -参数 : [lye, 111111]
2018-06-28 14:39:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:53 -==> Parameters: lye(String)
2018-06-28 14:39:53 -<==      Total: 0
2018-06-28 14:39:53 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.GeneratedMethodAccessor290.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:53 -耗时 : 3
2018-06-28 14:39:53 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:53 -==> Parameters: 1(Long), admin(String), 登录(String), 3(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:53.106(Timestamp)
2018-06-28 14:39:53 -<==    Updates: 1
2018-06-28 14:39:53 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:53 -HTTP METHOD : POST
2018-06-28 14:39:53 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:53 -参数 : [lye, 111111]
2018-06-28 14:39:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:53 -==> Parameters: lye(String)
2018-06-28 14:39:53 -<==      Total: 0
2018-06-28 14:39:53 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.GeneratedMethodAccessor290.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:53 -耗时 : 3
2018-06-28 14:39:53 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:53 -==> Parameters: 1(Long), admin(String), 登录(String), 3(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:53.523(Timestamp)
2018-06-28 14:39:53 -<==    Updates: 1
2018-06-28 14:39:53 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:53 -HTTP METHOD : POST
2018-06-28 14:39:53 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:53 -参数 : [lye, 111111]
2018-06-28 14:39:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:53 -==> Parameters: lye(String)
2018-06-28 14:39:53 -<==      Total: 0
2018-06-28 14:39:53 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.GeneratedMethodAccessor290.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:53 -耗时 : 3
2018-06-28 14:39:53 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:53 -==> Parameters: 1(Long), admin(String), 登录(String), 3(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:53.743(Timestamp)
2018-06-28 14:39:53 -<==    Updates: 1
2018-06-28 14:39:53 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:53 -HTTP METHOD : POST
2018-06-28 14:39:53 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:53 -参数 : [lye, 111111]
2018-06-28 14:39:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:53 -==> Parameters: lye(String)
2018-06-28 14:39:53 -<==      Total: 0
2018-06-28 14:39:53 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.GeneratedMethodAccessor290.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:53 -耗时 : 3
2018-06-28 14:39:53 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:53 -==> Parameters: 1(Long), admin(String), 登录(String), 3(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:53.956(Timestamp)
2018-06-28 14:39:53 -<==    Updates: 1
2018-06-28 14:39:54 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:54 -HTTP METHOD : POST
2018-06-28 14:39:54 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:54 -参数 : [lye, 111111]
2018-06-28 14:39:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:54 -==> Parameters: lye(String)
2018-06-28 14:39:54 -<==      Total: 0
2018-06-28 14:39:54 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.GeneratedMethodAccessor290.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:54 -耗时 : 3
2018-06-28 14:39:54 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:54 -==> Parameters: 1(Long), admin(String), 登录(String), 3(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:54.159(Timestamp)
2018-06-28 14:39:54 -<==    Updates: 1
2018-06-28 14:39:54 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:54 -HTTP METHOD : POST
2018-06-28 14:39:54 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:54 -参数 : [lye, 111111]
2018-06-28 14:39:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:54 -==> Parameters: lye(String)
2018-06-28 14:39:54 -<==      Total: 0
2018-06-28 14:39:54 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.GeneratedMethodAccessor290.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:54 -耗时 : 2
2018-06-28 14:39:54 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:54 -==> Parameters: 1(Long), admin(String), 登录(String), 2(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:54.362(Timestamp)
2018-06-28 14:39:54 -<==    Updates: 1
2018-06-28 14:39:54 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:54 -HTTP METHOD : POST
2018-06-28 14:39:54 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:54 -参数 : [lye, 111111]
2018-06-28 14:39:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:54 -==> Parameters: lye(String)
2018-06-28 14:39:54 -<==      Total: 0
2018-06-28 14:39:54 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - lye, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.user.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:57)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.user.controller.LoginController.ajaxLogin(LoginController.java:85)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor166.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:43)
	at sun.reflect.GeneratedMethodAccessor290.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.user.controller.LoginController$$EnhancerBySpringCGLIB$$d13f3e6b.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor291.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-28 14:39:54 -耗时 : 3
2018-06-28 14:39:54 -返回值 : {msg=用户或密码错误, code=500}
2018-06-28 14:39:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:54 -==> Parameters: 1(Long), admin(String), 登录(String), 3(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:54.551(Timestamp)
2018-06-28 14:39:54 -<==    Updates: 1
2018-06-28 14:39:58 -请求地址 : http://127.0.0.1:8099/login
2018-06-28 14:39:58 -HTTP METHOD : POST
2018-06-28 14:39:58 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.ajaxLogin
2018-06-28 14:39:58 -参数 : [lyf, 111111]
2018-06-28 14:39:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-28 14:39:58 -==> Parameters: lyf(String)
2018-06-28 14:39:58 -<==      Total: 1
2018-06-28 14:39:58 -耗时 : 5
2018-06-28 14:39:58 -返回值 : {msg=操作成功, code=0}
2018-06-28 14:39:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:39:58 -==> Parameters: 132(Long), lyf(String), 登录(String), 5(Integer), com.bootdo.system.user.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-28 14:39:58.136(Timestamp)
2018-06-28 14:39:58 -<==    Updates: 1
2018-06-28 14:40:00 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 14:40:00 -HTTP METHOD : GET
2018-06-28 14:40:00 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 14:40:00 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 14:40:00 -参数 : [{}]
2018-06-28 14:40:00 -HTTP METHOD : GET
2018-06-28 14:40:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 14:40:00 -参数 : []
2018-06-28 14:40:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 14:40:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:40:00 -==> Parameters: 0(String), 132(Long), 0(Integer), 3(Integer)
2018-06-28 14:40:00 -==> Parameters: 132(Long)
2018-06-28 14:40:00 -<==      Total: 1
2018-06-28 14:40:00 -<==      Total: 20
2018-06-28 14:40:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:40:00 -==> Parameters: 1(Long)
2018-06-28 14:40:00 -<==      Total: 1
2018-06-28 14:40:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:40:00 -==> Parameters: 132(Long), 0(String)
2018-06-28 14:40:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 14:40:00 -==> Parameters: null
2018-06-28 14:40:00 -<==      Total: 0
2018-06-28 14:40:00 -<==      Total: 1
2018-06-28 14:40:00 -耗时 : 7
2018-06-28 14:40:00 -返回值 : com.bootdo.common.utils.PageUtils@347808c3
2018-06-28 14:40:00 -耗时 : 7
2018-06-28 14:40:00 -返回值 : index_v1
2018-06-28 14:40:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:40:00 -==> Parameters: 132(Long), lyf(String), 请求访问主页(String), 7(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 14:40:00.455(Timestamp)
2018-06-28 14:40:00 -<==    Updates: 1
2018-06-28 14:40:00 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 14:40:00 -HTTP METHOD : GET
2018-06-28 14:40:00 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 14:40:00 -参数 : []
2018-06-28 14:40:00 -耗时 : 0
2018-06-28 14:40:00 -返回值 : main
2018-06-28 14:40:00 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 14:40:00 -HTTP METHOD : GET
2018-06-28 14:40:00 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 14:40:00 -参数 : []
2018-06-28 14:40:00 -耗时 : 0
2018-06-28 14:40:00 -返回值 : main
2018-06-28 14:40:12 -请求地址 : http://127.0.0.1:8099/oa/notify/selfNotify
2018-06-28 14:40:12 -请求地址 : http://127.0.0.1:8099/oa/notify/selfList
2018-06-28 14:40:12 -HTTP METHOD : GET
2018-06-28 14:40:12 -HTTP METHOD : GET
2018-06-28 14:40:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2018-06-28 14:40:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2018-06-28 14:40:12 -参数 : []
2018-06-28 14:40:12 -参数 : [{limit=10, offset=0}]
2018-06-28 14:40:12 -耗时 : 0
2018-06-28 14:40:12 -返回值 : oa/notify/selfNotify
2018-06-28 14:40:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:40:12 -==> Parameters: 132(Long), 0(Integer), 10(Integer)
2018-06-28 14:40:12 -<==      Total: 1
2018-06-28 14:40:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:40:12 -==> Parameters: 1(Long)
2018-06-28 14:40:12 -<==      Total: 1
2018-06-28 14:40:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:40:12 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:40:12 -==> Parameters: 132(Long), null
2018-06-28 14:40:12 -<==      Total: 1
2018-06-28 14:40:12 -耗时 : 4
2018-06-28 14:40:12 -返回值 : com.bootdo.common.utils.PageUtils@59cae619
2018-06-28 14:40:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-28 14:40:12 -==> Parameters: 132(Long)
2018-06-28 14:40:12 -<==      Total: 41
2018-06-28 14:40:12 -根据key从存储 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:40:12 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:40:12 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:40:12 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:40:15 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:40:15 -请求地址 : http://127.0.0.1:8099/oa/notify/read/46
2018-06-28 14:40:15 -HTTP METHOD : GET
2018-06-28 14:40:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.read
2018-06-28 14:40:15 -参数 : [46, {}]
2018-06-28 14:40:15 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify where id = ? 
2018-06-28 14:40:15 -==> Parameters: 46(Long)
2018-06-28 14:40:15 -<==      Total: 1
2018-06-28 14:40:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:40:15 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:40:15 -<==      Total: 1
2018-06-28 14:40:15 -==>  Preparing: update oa_notify_record SET `is_read` = ?, `read_date` = ? where notify_id = ? and user_id = ? 
2018-06-28 14:40:15 -==> Parameters: 1(Integer), 2018-06-28 14:40:15.421(Timestamp), 46(Long), 132(Long)
2018-06-28 14:40:15 -<==    Updates: 1
2018-06-28 14:40:15 -耗时 : 6
2018-06-28 14:40:15 -返回值 : oa/notify/read
2018-06-28 14:40:20 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:40:20 -请求地址 : http://127.0.0.1:8099/oa/notify/read/46
2018-06-28 14:40:20 -HTTP METHOD : GET
2018-06-28 14:40:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.read
2018-06-28 14:40:20 -参数 : [46, {}]
2018-06-28 14:40:20 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify where id = ? 
2018-06-28 14:40:20 -==> Parameters: 46(Long)
2018-06-28 14:40:20 -<==      Total: 1
2018-06-28 14:40:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:40:20 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:40:20 -<==      Total: 1
2018-06-28 14:40:20 -==>  Preparing: update oa_notify_record SET `is_read` = ?, `read_date` = ? where notify_id = ? and user_id = ? 
2018-06-28 14:40:20 -==> Parameters: 1(Integer), 2018-06-28 14:40:20.466(Timestamp), 46(Long), 132(Long)
2018-06-28 14:40:20 -<==    Updates: 1
2018-06-28 14:40:20 -耗时 : 6
2018-06-28 14:40:20 -返回值 : oa/notify/read
2018-06-28 14:40:28 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:40:28 -请求地址 : http://127.0.0.1:8099/oa/notify/read/46
2018-06-28 14:40:28 -HTTP METHOD : GET
2018-06-28 14:40:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.read
2018-06-28 14:40:28 -参数 : [46, {}]
2018-06-28 14:40:28 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify where id = ? 
2018-06-28 14:40:28 -==> Parameters: 46(Long)
2018-06-28 14:40:28 -<==      Total: 1
2018-06-28 14:40:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:40:28 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:40:28 -<==      Total: 1
2018-06-28 14:40:28 -==>  Preparing: update oa_notify_record SET `is_read` = ?, `read_date` = ? where notify_id = ? and user_id = ? 
2018-06-28 14:40:28 -==> Parameters: 1(Integer), 2018-06-28 14:40:28.612(Timestamp), 46(Long), 132(Long)
2018-06-28 14:40:28 -<==    Updates: 1
2018-06-28 14:40:28 -耗时 : 5
2018-06-28 14:40:28 -返回值 : oa/notify/read
2018-06-28 14:42:52 -请求地址 : http://127.0.0.1:8099/index
2018-06-28 14:42:52 -HTTP METHOD : GET
2018-06-28 14:42:52 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.index
2018-06-28 14:42:52 -参数 : [{}]
2018-06-28 14:42:52 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-28 14:42:52 -HTTP METHOD : GET
2018-06-28 14:42:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-28 14:42:52 -参数 : []
2018-06-28 14:42:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-28 14:42:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:42:52 -==> Parameters: 132(Long)
2018-06-28 14:42:52 -==> Parameters: 0(String), 132(Long), 0(Integer), 3(Integer)
2018-06-28 14:42:52 -<==      Total: 0
2018-06-28 14:42:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:42:52 -==> Parameters: 132(Long), 0(String)
2018-06-28 14:42:52 -<==      Total: 20
2018-06-28 14:42:52 -<==      Total: 1
2018-06-28 14:42:52 -耗时 : 4
2018-06-28 14:42:52 -返回值 : com.bootdo.common.utils.PageUtils@13d00c6c
2018-06-28 14:42:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-28 14:42:52 -==> Parameters: null
2018-06-28 14:42:52 -<==      Total: 0
2018-06-28 14:42:52 -耗时 : 6
2018-06-28 14:42:52 -返回值 : index_v1
2018-06-28 14:42:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-28 14:42:52 -==> Parameters: 132(Long), lyf(String), 请求访问主页(String), 6(Integer), com.bootdo.system.user.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-28 14:42:52.595(Timestamp)
2018-06-28 14:42:52 -<==    Updates: 1
2018-06-28 14:42:52 -请求地址 : http://127.0.0.1:8099/main
2018-06-28 14:42:52 -HTTP METHOD : GET
2018-06-28 14:42:52 -CLASS_METHOD : com.bootdo.system.user.controller.LoginController.main
2018-06-28 14:42:52 -参数 : []
2018-06-28 14:42:52 -耗时 : 0
2018-06-28 14:42:52 -返回值 : main
2018-06-28 14:42:56 -请求地址 : http://127.0.0.1:8099/oa/notify/selfList
2018-06-28 14:42:56 -HTTP METHOD : GET
2018-06-28 14:42:56 -请求地址 : http://127.0.0.1:8099/oa/notify/selfNotify
2018-06-28 14:42:56 -HTTP METHOD : GET
2018-06-28 14:42:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2018-06-28 14:42:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2018-06-28 14:42:56 -参数 : [{limit=10, offset=0}]
2018-06-28 14:42:56 -参数 : []
2018-06-28 14:42:56 -耗时 : 0
2018-06-28 14:42:56 -返回值 : oa/notify/selfNotify
2018-06-28 14:42:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:42:56 -==> Parameters: 132(Long), 0(Integer), 10(Integer)
2018-06-28 14:42:56 -<==      Total: 1
2018-06-28 14:42:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:42:56 -==> Parameters: 1(Long)
2018-06-28 14:42:56 -<==      Total: 1
2018-06-28 14:42:56 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:42:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:42:56 -==> Parameters: 132(Long), null
2018-06-28 14:42:56 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:42:56 -<==      Total: 1
2018-06-28 14:42:56 -耗时 : 4
2018-06-28 14:42:56 -返回值 : com.bootdo.common.utils.PageUtils@7faa97aa
2018-06-28 14:42:56 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:42:56 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:19 -请求地址 : http://127.0.0.1:8099/oa/notify/selfNotify
2018-06-28 14:43:19 -HTTP METHOD : GET
2018-06-28 14:43:19 -请求地址 : http://127.0.0.1:8099/oa/notify/selfList
2018-06-28 14:43:19 -HTTP METHOD : GET
2018-06-28 14:43:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2018-06-28 14:43:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2018-06-28 14:43:19 -参数 : []
2018-06-28 14:43:19 -耗时 : 1
2018-06-28 14:43:19 -参数 : [{limit=10, offset=0}]
2018-06-28 14:43:19 -返回值 : oa/notify/selfNotify
2018-06-28 14:43:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:43:19 -==> Parameters: 132(Long), 0(Integer), 10(Integer)
2018-06-28 14:43:19 -<==      Total: 1
2018-06-28 14:43:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-28 14:43:19 -==> Parameters: 1(Long)
2018-06-28 14:43:19 -<==      Total: 1
2018-06-28 14:43:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:43:19 -==> Parameters: 132(Long), null
2018-06-28 14:43:19 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:19 -<==      Total: 1
2018-06-28 14:43:19 -耗时 : 5
2018-06-28 14:43:19 -返回值 : com.bootdo.common.utils.PageUtils@66f2f3ee
2018-06-28 14:43:19 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:19 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:19 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:20 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:20 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:20 -请求地址 : http://127.0.0.1:8099/oa/notify/list
2018-06-28 14:43:20 -请求地址 : http://127.0.0.1:8099/oa/notify
2018-06-28 14:43:20 -HTTP METHOD : GET
2018-06-28 14:43:20 -HTTP METHOD : GET
2018-06-28 14:43:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2018-06-28 14:43:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.oaNotify
2018-06-28 14:43:20 -参数 : [{limit=10, offset=0}]
2018-06-28 14:43:20 -参数 : []
2018-06-28 14:43:20 -耗时 : 0
2018-06-28 14:43:20 -返回值 : oa/notify/notify
2018-06-28 14:43:20 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2018-06-28 14:43:20 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:43:20 -<==      Total: 6
2018-06-28 14:43:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:20 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:20 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:20 -<==      Total: 1
2018-06-28 14:43:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:20 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:20 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:20 -<==      Total: 1
2018-06-28 14:43:20 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:20 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:20 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:20 -<==      Total: 1
2018-06-28 14:43:20 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:20 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:20 -<==      Total: 1
2018-06-28 14:43:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:20 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:20 -<==      Total: 1
2018-06-28 14:43:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:20 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:20 -<==      Total: 1
2018-06-28 14:43:20 -==>  Preparing: select count(*) from oa_notify 
2018-06-28 14:43:20 -==> Parameters: 
2018-06-28 14:43:20 -<==      Total: 1
2018-06-28 14:43:20 -耗时 : 12
2018-06-28 14:43:20 -返回值 : com.bootdo.common.utils.PageUtils@7e136639
2018-06-28 14:43:26 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:26 -请求地址 : http://127.0.0.1:8099/oa/notify/remove
2018-06-28 14:43:26 -HTTP METHOD : POST
2018-06-28 14:43:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.remove
2018-06-28 14:43:26 -参数 : [46]
2018-06-28 14:43:26 -==>  Preparing: delete from oa_notify_record where notify_id = ? 
2018-06-28 14:43:26 -==> Parameters: 46(Long)
2018-06-28 14:43:26 -<==    Updates: 1
2018-06-28 14:43:26 -==>  Preparing: delete from oa_notify where id = ? 
2018-06-28 14:43:26 -==> Parameters: 46(Long)
2018-06-28 14:43:26 -<==    Updates: 1
2018-06-28 14:43:26 -耗时 : 4
2018-06-28 14:43:26 -返回值 : {msg=操作成功, code=0}
2018-06-28 14:43:26 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:26 -请求地址 : http://127.0.0.1:8099/oa/notify/list
2018-06-28 14:43:26 -HTTP METHOD : GET
2018-06-28 14:43:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2018-06-28 14:43:26 -参数 : [{limit=10, offset=0}]
2018-06-28 14:43:26 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2018-06-28 14:43:26 -==> Parameters: 0(Integer), 10(Integer)
2018-06-28 14:43:26 -<==      Total: 5
2018-06-28 14:43:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:26 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:26 -<==      Total: 1
2018-06-28 14:43:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:26 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:26 -<==      Total: 1
2018-06-28 14:43:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:26 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:26 -<==      Total: 1
2018-06-28 14:43:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:26 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:26 -<==      Total: 1
2018-06-28 14:43:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-28 14:43:26 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-28 14:43:26 -<==      Total: 1
2018-06-28 14:43:26 -==>  Preparing: select count(*) from oa_notify 
2018-06-28 14:43:26 -==> Parameters: 
2018-06-28 14:43:26 -<==      Total: 1
2018-06-28 14:43:26 -耗时 : 7
2018-06-28 14:43:26 -返回值 : com.bootdo.common.utils.PageUtils@5956afc1
2018-06-28 14:43:39 -请求地址 : http://127.0.0.1:8099/oa/notify/selfNotify
2018-06-28 14:43:39 -HTTP METHOD : GET
2018-06-28 14:43:39 -请求地址 : http://127.0.0.1:8099/oa/notify/selfList
2018-06-28 14:43:39 -HTTP METHOD : GET
2018-06-28 14:43:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2018-06-28 14:43:39 -参数 : []
2018-06-28 14:43:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2018-06-28 14:43:39 -参数 : [{limit=10, offset=0}]
2018-06-28 14:43:39 -耗时 : 0
2018-06-28 14:43:39 -返回值 : oa/notify/selfNotify
2018-06-28 14:43:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-28 14:43:39 -==> Parameters: 132(Long), 0(Integer), 10(Integer)
2018-06-28 14:43:39 -<==      Total: 0
2018-06-28 14:43:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-28 14:43:39 -==> Parameters: 132(Long), null
2018-06-28 14:43:39 -<==      Total: 1
2018-06-28 14:43:39 -耗时 : 2
2018-06-28 14:43:39 -返回值 : com.bootdo.common.utils.PageUtils@252423aa
2018-06-28 14:43:39 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:39 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:39 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:39 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:49 -请求地址 : http://127.0.0.1:8099/activiti/process
2018-06-28 14:43:49 -HTTP METHOD : GET
2018-06-28 14:43:49 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.process
2018-06-28 14:43:49 -参数 : []
2018-06-28 14:43:49 -耗时 : 0
2018-06-28 14:43:49 -返回值 : ModelAndView: reference to view with name 'act/process/process'; model is null
2018-06-28 14:43:49 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:49 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:49 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:49 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:49 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:49 -请求地址 : http://127.0.0.1:8099/activiti/process/list
2018-06-28 14:43:49 -HTTP METHOD : GET
2018-06-28 14:43:49 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.list
2018-06-28 14:43:49 -参数 : [0, 10]
2018-06-28 14:43:49 -耗时 : 16
2018-06-28 14:43:49 -返回值 : com.bootdo.common.utils.PageUtils@28bf143d
2018-06-28 14:43:59 -请求地址 : http://127.0.0.1:8099/activiti/task/todo
2018-06-28 14:43:59 -HTTP METHOD : GET
2018-06-28 14:43:59 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todo
2018-06-28 14:43:59 -参数 : []
2018-06-28 14:43:59 -耗时 : 0
2018-06-28 14:43:59 -返回值 : ModelAndView: reference to view with name 'act/task/todoTask'; model is null
2018-06-28 14:43:59 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:59 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:59 -根据key从Redis中获取对象 key [UserDO{userId=132, username='lyf', name='刘亦菲', password='7fdb1d9008f45950c1620ba0864e5fbd', deptId=13, deptName='null', email='lyf@bootdo.com', mobile='null', status=1, userIdCreate=null, gmtCreate=null, gmtModified=null, roleIds=null, sex=null, birth=null, picId=null, liveAddress='null', hobby='null', province='null', city='null', district='null'}]
2018-06-28 14:43:59 -请求地址 : http://127.0.0.1:8099/activiti/task/todoList
2018-06-28 14:43:59 -HTTP METHOD : GET
2018-06-28 14:43:59 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.todoList
2018-06-28 14:43:59 -参数 : []
2018-06-28 14:43:59 -请求地址 : http://127.0.0.1:8099/activiti/task/gotoList
2018-06-28 14:43:59 -HTTP METHOD : GET
2018-06-28 14:43:59 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.list
2018-06-28 14:43:59 -参数 : [0, 10]
2018-06-28 14:43:59 -耗时 : 8
2018-06-28 14:43:59 -返回值 : com.bootdo.common.utils.PageUtils@15eefdad
2018-06-28 14:43:59 -耗时 : 27
2018-06-28 14:43:59 -返回值 : []
2018-06-28 14:44:07 -请求地址 : http://127.0.0.1:8099/activiti/process/resource/read/image/salary:3:135067
2018-06-28 14:44:07 -HTTP METHOD : GET
2018-06-28 14:44:07 -CLASS_METHOD : com.bootdo.activiti.controller.ProcessController.resourceRead
2018-06-28 14:44:07 -参数 : [image, salary:3:135067, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b77dd05]
2018-06-28 14:44:07 -耗时 : 15
2018-06-28 14:44:07 -返回值 : null
2018-06-28 14:44:12 -请求地址 : http://127.0.0.1:8099/activiti/task/form/salary:3:135067
2018-06-28 14:44:12 -HTTP METHOD : GET
2018-06-28 14:44:12 -CLASS_METHOD : com.bootdo.activiti.controller.TaskController.startForm
2018-06-28 14:44:12 -参数 : [salary:3:135067, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1a64ac90]
2018-06-28 14:44:12 -Processing resource 流程审批测试流程.bpmn20.xml
2018-06-28 14:44:12 -Processing resource 流程审批测试流程.salary.png
2018-06-28 14:44:12 -耗时 : 101
2018-06-28 14:44:12 -返回值 : null
2018-06-28 14:44:12 -请求地址 : http://127.0.0.1:8099/act/salary/form
2018-06-28 14:44:12 -HTTP METHOD : GET
2018-06-28 14:44:12 -CLASS_METHOD : com.bootdo.activiti.controller.SalaryController.add
2018-06-28 14:44:12 -参数 : []
2018-06-28 14:44:12 -耗时 : 1
2018-06-28 14:44:12 -返回值 : act/salary/add
2018-06-28 14:44:32 -请求地址 : http://127.0.0.1:8099/system/user/treeView
2018-06-28 14:44:32 -HTTP METHOD : GET
2018-06-28 14:44:32 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.treeView
2018-06-28 14:44:32 -参数 : []
2018-06-28 14:44:32 -耗时 : 0
2018-06-28 14:44:32 -返回值 : system/user/userTree
2018-06-28 14:44:32 -请求地址 : http://127.0.0.1:8099/system/user/tree
2018-06-28 14:44:32 -HTTP METHOD : GET
2018-06-28 14:44:32 -CLASS_METHOD : com.bootdo.system.user.controller.UserController.tree
2018-06-28 14:44:32 -参数 : []
2018-06-28 14:44:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-28 14:44:32 -==> Parameters: 
2018-06-28 14:44:32 -<==      Total: 10
2018-06-28 14:44:32 -==>  Preparing: select DISTINCT parent_id from sys_dept 
2018-06-28 14:44:32 -==> Parameters: 
2018-06-28 14:44:32 -<==      Total: 5
2018-06-28 14:44:32 -==>  Preparing: select DISTINCT dept_id from sys_user 
2018-06-28 14:44:32 -==> Parameters: 
2018-06-28 14:44:32 -<==      Total: 5
2018-06-28 14:44:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc 
2018-06-28 14:44:32 -==> Parameters: 
2018-06-28 14:44:32 -<==      Total: 11
2018-06-28 14:44:32 -耗时 : 6
2018-06-28 14:44:32 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"13","state":{"opened":true,"mType":"user"},"text":"刘亦菲"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true,"mType":"dept"},"text":"测试部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true,"mType":"dept"},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"9","state":{"opened":true,"mType":"user"},"text":"郭德纲"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"9","state":{"opened":true,"mType":"user"},"text":"鹿晗"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true,"mType":"dept"},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"8","state":{"opened":true,"mType":"user"},"text":"李彦宏"}],"hasChildren":true,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true,"mType":"dept"},"text":"研发二部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"36","parentId":"7","state":{"opened":true,"mType":"user"},"text":"刘德华"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true,"mType":"dept"},"text":"研發一部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"6","state":{"opened":true,"mType":"user"},"text":"王健林"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"6","state":{"opened":true,"mType":"user"},"text":"令狐冲"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"6","state":{"opened":true,"mType":"user"},"text":"吴亦凡"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"6","state":{"opened":true,"mType":"user"},"text":"张学友"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"6","state":{"opened":true,"mType":"user"},"text":"临时用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"1","parentId":"6","state":{"opened":true,"mType":"user"},"text":"超级管理员"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true,"mType":"dept"},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-06-28 15:01:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 2 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 6, active threads = 0, queued tasks = 0, completed tasks = 330], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 713]
2018-06-28 15:03:13 -Validating all active sessions...
2018-06-28 15:03:13 -Finished session validation.  No sessions were stopped.
2018-06-28 15:31:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 2 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 6, active threads = 0, queued tasks = 0, completed tasks = 510], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 1074]
2018-06-28 22:23:42 -Starting BootdoApplication on localhost with PID 7709 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 22:23:42 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 22:23:42 -The following profiles are active: dev
2018-06-28 22:23:42 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 22:23:42 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:23:42 CST 2018]; root of context hierarchy
2018-06-28 22:23:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 22:23:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e81a22b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:23:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$10dad0d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:23:45 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:23:45 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:23:45 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 22:23:45 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:23:45 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:23:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:23:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:23:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:23:45 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 22:23:45 -Starting service [Tomcat]
2018-06-28 22:23:45 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 22:23:45 -Initializing Spring embedded WebApplicationContext
2018-06-28 22:23:45 -Root WebApplicationContext: initialization completed in 3000 ms
2018-06-28 22:23:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 22:23:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 22:23:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 22:23:46 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 22:23:46 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 22:23:46 -Filter xssFilter was not registered (disabled)
2018-06-28 22:23:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 22:23:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 22:23:46 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 22:23:46 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 22:23:46 -{dataSource-1} inited
2018-06-28 22:23:48 -ProcessEngine default created
2018-06-28 22:23:49 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:23:42 CST 2018]; root of context hierarchy
2018-06-28 22:23:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 22:23:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 22:23:49 -Using default implementation for ThreadExecutor
2018-06-28 22:23:49 -Job execution threads will use class loader of thread: main
2018-06-28 22:23:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 22:23:49 -Quartz Scheduler v.2.2.1 created.
2018-06-28 22:23:49 -RAMJobStore initialized.
2018-06-28 22:23:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 22:23:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 22:23:49 -Quartz scheduler version: 2.2.1
2018-06-28 22:23:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1ed52f44
2018-06-28 22:23:51 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 22:23:51 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 22:23:51 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 22:23:51 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 22:23:51 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 22:23:51 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 22:23:51 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 22:23:51 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 22:23:51 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 22:23:51 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 22:23:51 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 22:23:51 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 22:23:51 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:23:51 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 22:23:51 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 22:23:51 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 22:23:51 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:23:51 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 22:23:51 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:23:51 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:23:51 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 22:23:51 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 22:23:51 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 22:23:51 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:23:51 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 22:23:51 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:23:51 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 22:23:51 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 22:23:51 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 22:23:51 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:23:51 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:23:51 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 22:23:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.controller.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:23:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:23:51 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 22:23:51 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:23:51 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 22:23:51 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:23:51 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 22:23:51 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 22:23:51 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 22:23:51 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 22:23:51 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 22:23:51 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:23:51 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:23:51 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 22:23:51 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 22:23:51 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 22:23:51 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 22:23:51 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 22:23:51 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 22:23:51 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 22:23:51 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:23:51 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:23:51 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 22:23:51 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 22:23:51 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 22:23:51 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:23:51 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:23:51 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 22:23:51 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 22:23:51 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:23:51 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:23:51 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 22:23:51 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.add()
2018-06-28 22:23:51 -Mapped "{[/system/notice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/notice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-06-28 22:23:51 -Mapped "{[/system/notice/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.update(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:23:51 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.save(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:23:51 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.message()
2018-06-28 22:23:51 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.Notice()
2018-06-28 22:23:51 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.selefNotice()
2018-06-28 22:23:51 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 22:23:51 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 22:23:51 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 22:23:51 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:23:51 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:23:51 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 22:23:51 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 22:23:51 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:23:51 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 22:23:51 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:23:51 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 22:23:51 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 22:23:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 22:23:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 22:23:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 22:23:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 22:23:51 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 22:23:51 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 22:23:51 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 22:23:51 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 22:23:51 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:23:51 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:23:51 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:23:51 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 22:23:51 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 22:23:51 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:23:51 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 22:23:51 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:23:51 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:23:51 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:23:51 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:23:51 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:23:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:23:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 22:23:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 22:23:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 22:23:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 22:23:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 22:23:51 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 22:23:52 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:23:42 CST 2018]; root of context hierarchy
2018-06-28 22:23:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:23:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:23:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:23:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 22:23:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:23:54 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
2018-06-28 22:23:54 -Unregistering JMX-exposed beans on shutdown
2018-06-28 22:23:54 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 22:23:54 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 22:23:54 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:23:42 CST 2018]; root of context hierarchy
2018-06-28 22:23:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 22:23:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 22:23:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 22:23:54 -Shutting down Quartz Scheduler
2018-06-28 22:23:54 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 22:23:54 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 22:23:54 -{dataSource-1} closed
2018-06-28 22:23:54 -Stopping service [Tomcat]
2018-06-28 22:23:54 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-28 22:23:54 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:15)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 20 common frames omitted
Caused by: java.lang.NullPointerException: null
	at com.bootdo.common.aspect.WebLogAspect.doBefore(WebLogAspect.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:611)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:43)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.common.controller.HandleErrorController$$EnhancerBySpringCGLIB$$6d4083ca.getErrorPath(<generated>)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$DefaultIgnoredRequestCustomizer.customize(SpringBootWebSecurityConfiguration.java:189)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:164)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:146)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:371)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:325)
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$c5b2cf1e.CGLIB$springSecurityFilterChain$1(<generated>)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$c5b2cf1e$$FastClassBySpringCGLIB$$989070e4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$c5b2cf1e.springSecurityFilterChain(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 21 common frames omitted
2018-06-28 22:33:12 -Starting BootdoApplication on localhost with PID 7731 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 22:33:12 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 22:33:12 -The following profiles are active: dev
2018-06-28 22:33:13 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 22:33:13 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:33:13 CST 2018]; root of context hierarchy
2018-06-28 22:33:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 22:33:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$831ce2ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:33:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$75761195] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:33:15 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:33:15 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:33:15 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 22:33:15 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:33:15 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:33:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:33:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:33:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:33:16 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 22:33:16 -Starting service [Tomcat]
2018-06-28 22:33:16 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 22:33:16 -Initializing Spring embedded WebApplicationContext
2018-06-28 22:33:16 -Root WebApplicationContext: initialization completed in 3075 ms
2018-06-28 22:33:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 22:33:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 22:33:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 22:33:16 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 22:33:16 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 22:33:16 -Filter xssFilter was not registered (disabled)
2018-06-28 22:33:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 22:33:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 22:33:16 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 22:33:16 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 22:33:17 -{dataSource-1} inited
2018-06-28 22:33:18 -ProcessEngine default created
2018-06-28 22:33:19 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:33:13 CST 2018]; root of context hierarchy
2018-06-28 22:33:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 22:33:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 22:33:19 -Using default implementation for ThreadExecutor
2018-06-28 22:33:19 -Job execution threads will use class loader of thread: main
2018-06-28 22:33:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 22:33:19 -Quartz Scheduler v.2.2.1 created.
2018-06-28 22:33:19 -RAMJobStore initialized.
2018-06-28 22:33:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 22:33:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 22:33:19 -Quartz scheduler version: 2.2.1
2018-06-28 22:33:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5454be
2018-06-28 22:33:21 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 22:33:21 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 22:33:21 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 22:33:21 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 22:33:21 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 22:33:21 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 22:33:21 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 22:33:21 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 22:33:21 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 22:33:21 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 22:33:21 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 22:33:21 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 22:33:21 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:33:21 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 22:33:21 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 22:33:21 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 22:33:21 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:33:21 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 22:33:21 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:33:21 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:33:21 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 22:33:21 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 22:33:21 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 22:33:21 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:33:21 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 22:33:21 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:33:21 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 22:33:21 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 22:33:21 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 22:33:21 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:33:21 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:33:21 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 22:33:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.controller.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:33:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:33:21 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 22:33:21 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:33:21 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 22:33:21 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:33:21 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 22:33:21 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 22:33:21 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 22:33:21 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 22:33:21 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 22:33:21 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:33:21 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:33:21 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 22:33:21 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 22:33:21 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 22:33:21 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 22:33:21 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 22:33:21 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 22:33:21 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 22:33:21 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:33:21 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:33:21 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 22:33:21 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 22:33:21 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 22:33:21 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:33:21 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:33:21 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 22:33:21 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 22:33:21 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:33:21 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:33:21 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 22:33:21 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.add()
2018-06-28 22:33:21 -Mapped "{[/system/notice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/notice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-06-28 22:33:21 -Mapped "{[/system/notice/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.update(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:33:21 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.save(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:33:21 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.message()
2018-06-28 22:33:21 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.Notice()
2018-06-28 22:33:21 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.selefNotice()
2018-06-28 22:33:21 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 22:33:21 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 22:33:21 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:33:21 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:33:21 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 22:33:21 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 22:33:21 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:33:21 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 22:33:21 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:33:21 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 22:33:21 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 22:33:21 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 22:33:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 22:33:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 22:33:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 22:33:21 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 22:33:21 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 22:33:21 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 22:33:21 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 22:33:21 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:33:21 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:33:21 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:33:21 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 22:33:21 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 22:33:21 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 22:33:21 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:33:21 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:33:21 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:33:21 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:33:21 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 22:33:21 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:33:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:33:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 22:33:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 22:33:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 22:33:21 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 22:33:21 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 22:33:21 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 22:33:22 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:33:13 CST 2018]; root of context hierarchy
2018-06-28 22:33:22 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:33:22 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:33:22 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:33:22 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 22:33:22 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:33:23 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
2018-06-28 22:33:23 -Unregistering JMX-exposed beans on shutdown
2018-06-28 22:33:23 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 22:33:23 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 22:33:23 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:33:13 CST 2018]; root of context hierarchy
2018-06-28 22:33:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 22:33:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 22:33:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 22:33:23 -Shutting down Quartz Scheduler
2018-06-28 22:33:23 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 22:33:23 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 22:33:23 -{dataSource-1} closed
2018-06-28 22:33:23 -Stopping service [Tomcat]
2018-06-28 22:33:23 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-28 22:33:24 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:15)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 20 common frames omitted
Caused by: java.lang.NullPointerException: null
	at com.bootdo.common.aspect.WebLogAspect.doBefore(WebLogAspect.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:611)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:43)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.common.controller.HandleErrorController$$EnhancerBySpringCGLIB$$9fc4d0e1.getErrorPath(<generated>)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$DefaultIgnoredRequestCustomizer.customize(SpringBootWebSecurityConfiguration.java:189)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:164)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:146)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:371)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:325)
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$2a4e0fe1.CGLIB$springSecurityFilterChain$6(<generated>)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$2a4e0fe1$$FastClassBySpringCGLIB$$8241a2ad.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$2a4e0fe1.springSecurityFilterChain(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 21 common frames omitted
2018-06-28 22:48:17 -Starting BootdoApplication on localhost with PID 7750 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 22:48:17 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 22:48:17 -The following profiles are active: dev
2018-06-28 22:48:18 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:48:18 CST 2018]; root of context hierarchy
2018-06-28 22:48:18 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 22:48:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 22:48:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4716a88d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:48:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$396fd734] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:48:20 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:48:20 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:48:20 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 22:48:20 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:48:20 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:48:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:48:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:48:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:48:20 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 22:48:20 -Starting service [Tomcat]
2018-06-28 22:48:20 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 22:48:20 -Initializing Spring embedded WebApplicationContext
2018-06-28 22:48:20 -Root WebApplicationContext: initialization completed in 2846 ms
2018-06-28 22:48:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 22:48:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 22:48:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 22:48:21 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 22:48:21 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 22:48:21 -Filter xssFilter was not registered (disabled)
2018-06-28 22:48:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 22:48:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 22:48:21 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 22:48:21 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 22:48:21 -{dataSource-1} inited
2018-06-28 22:48:23 -ProcessEngine default created
2018-06-28 22:48:23 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:48:18 CST 2018]; root of context hierarchy
2018-06-28 22:48:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 22:48:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 22:48:24 -Using default implementation for ThreadExecutor
2018-06-28 22:48:24 -Job execution threads will use class loader of thread: main
2018-06-28 22:48:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 22:48:24 -Quartz Scheduler v.2.2.1 created.
2018-06-28 22:48:24 -RAMJobStore initialized.
2018-06-28 22:48:24 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 22:48:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 22:48:24 -Quartz scheduler version: 2.2.1
2018-06-28 22:48:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@14c5283
2018-06-28 22:48:25 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 22:48:25 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 22:48:25 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 22:48:25 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 22:48:25 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 22:48:25 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 22:48:25 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 22:48:25 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 22:48:25 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 22:48:25 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 22:48:25 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 22:48:25 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 22:48:25 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 22:48:25 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:48:25 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 22:48:25 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 22:48:25 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:48:25 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 22:48:25 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:48:25 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:48:25 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 22:48:25 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 22:48:25 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 22:48:25 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:48:25 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 22:48:25 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:48:25 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 22:48:25 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 22:48:25 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 22:48:25 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:48:25 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:48:25 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 22:48:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:48:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.controller.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:48:25 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 22:48:25 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:48:25 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 22:48:25 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:48:25 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 22:48:25 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 22:48:25 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 22:48:25 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 22:48:25 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 22:48:25 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:48:25 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:48:25 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 22:48:25 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 22:48:25 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 22:48:25 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 22:48:25 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 22:48:25 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 22:48:25 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 22:48:25 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:48:25 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:48:25 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 22:48:25 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 22:48:25 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:48:25 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 22:48:25 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:48:25 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 22:48:25 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 22:48:25 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:48:25 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:48:25 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 22:48:25 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.add()
2018-06-28 22:48:25 -Mapped "{[/system/notice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/notice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-06-28 22:48:25 -Mapped "{[/system/notice/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.update(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:48:25 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.save(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:48:25 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.message()
2018-06-28 22:48:25 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.Notice()
2018-06-28 22:48:25 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.selefNotice()
2018-06-28 22:48:25 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 22:48:25 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 22:48:25 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 22:48:25 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:48:25 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:48:25 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 22:48:25 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 22:48:25 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:48:25 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 22:48:25 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:48:25 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 22:48:25 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 22:48:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 22:48:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 22:48:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 22:48:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 22:48:25 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 22:48:25 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 22:48:25 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 22:48:25 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 22:48:25 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:48:25 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:48:25 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:48:25 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 22:48:25 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 22:48:25 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:48:25 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 22:48:25 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:48:25 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:48:25 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:48:25 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:48:25 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:48:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:48:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 22:48:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 22:48:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 22:48:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 22:48:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 22:48:26 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 22:48:26 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:48:18 CST 2018]; root of context hierarchy
2018-06-28 22:48:26 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:48:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:48:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:48:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 22:48:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:48:28 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
2018-06-28 22:48:28 -Unregistering JMX-exposed beans on shutdown
2018-06-28 22:48:28 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 22:48:28 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 22:48:28 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:48:18 CST 2018]; root of context hierarchy
2018-06-28 22:48:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 22:48:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 22:48:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 22:48:28 -Shutting down Quartz Scheduler
2018-06-28 22:48:28 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 22:48:28 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 22:48:28 -{dataSource-1} closed
2018-06-28 22:48:28 -Stopping service [Tomcat]
2018-06-28 22:48:28 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-28 22:48:28 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:15)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 20 common frames omitted
Caused by: java.lang.NullPointerException: null
	at com.bootdo.common.aspect.WebLogAspect.doBefore(WebLogAspect.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:611)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:43)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.common.controller.HandleErrorController$$EnhancerBySpringCGLIB$$494a9a02.getErrorPath(<generated>)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$DefaultIgnoredRequestCustomizer.customize(SpringBootWebSecurityConfiguration.java:189)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:164)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:146)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:371)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:325)
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$ee47d580.CGLIB$springSecurityFilterChain$1(<generated>)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$ee47d580$$FastClassBySpringCGLIB$$5452cd7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$ee47d580.springSecurityFilterChain(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 21 common frames omitted
2018-06-28 22:51:33 -Starting BootdoApplication on localhost with PID 7758 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 22:51:33 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 22:51:33 -The following profiles are active: dev
2018-06-28 22:51:33 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 22:51:33 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:51:33 CST 2018]; root of context hierarchy
2018-06-28 22:51:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 22:51:35 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a48720f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:51:35 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$96e04f9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:51:35 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:51:35 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:51:35 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 22:51:35 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:51:35 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:51:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:51:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:51:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:51:36 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 22:51:36 -Starting service [Tomcat]
2018-06-28 22:51:36 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 22:51:36 -Initializing Spring embedded WebApplicationContext
2018-06-28 22:51:36 -Root WebApplicationContext: initialization completed in 2858 ms
2018-06-28 22:51:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 22:51:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 22:51:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 22:51:36 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 22:51:36 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 22:51:36 -Filter xssFilter was not registered (disabled)
2018-06-28 22:51:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 22:51:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 22:51:36 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 22:51:36 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 22:51:37 -{dataSource-1} inited
2018-06-28 22:51:38 -ProcessEngine default created
2018-06-28 22:51:39 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:51:33 CST 2018]; root of context hierarchy
2018-06-28 22:51:40 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 22:51:40 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 22:51:40 -Using default implementation for ThreadExecutor
2018-06-28 22:51:40 -Job execution threads will use class loader of thread: main
2018-06-28 22:51:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 22:51:40 -Quartz Scheduler v.2.2.1 created.
2018-06-28 22:51:40 -RAMJobStore initialized.
2018-06-28 22:51:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 22:51:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 22:51:40 -Quartz scheduler version: 2.2.1
2018-06-28 22:51:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3c17794e
2018-06-28 22:51:42 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 22:51:42 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 22:51:42 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 22:51:42 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 22:51:42 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 22:51:42 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 22:51:42 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 22:51:42 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 22:51:42 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 22:51:42 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 22:51:42 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 22:51:42 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 22:51:42 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:51:42 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 22:51:42 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 22:51:42 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 22:51:42 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:51:42 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 22:51:42 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:51:42 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:51:42 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 22:51:42 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 22:51:42 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 22:51:42 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:51:42 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 22:51:42 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:51:42 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 22:51:42 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 22:51:42 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 22:51:42 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:51:42 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:51:42 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 22:51:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.controller.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:51:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:51:42 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 22:51:42 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:51:42 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 22:51:42 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:51:42 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 22:51:42 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 22:51:42 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 22:51:42 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 22:51:42 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 22:51:42 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:51:42 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:51:42 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 22:51:42 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 22:51:42 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 22:51:42 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 22:51:42 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 22:51:42 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 22:51:42 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 22:51:42 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:51:42 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:51:42 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 22:51:42 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 22:51:42 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:51:42 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:51:42 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 22:51:42 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 22:51:42 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 22:51:42 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:51:42 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:51:42 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 22:51:42 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.add()
2018-06-28 22:51:42 -Mapped "{[/system/notice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/notice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-06-28 22:51:42 -Mapped "{[/system/notice/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.update(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:51:42 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.save(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:51:42 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.message()
2018-06-28 22:51:42 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.Notice()
2018-06-28 22:51:42 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.selefNotice()
2018-06-28 22:51:42 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 22:51:42 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 22:51:42 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 22:51:42 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:51:42 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:51:42 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 22:51:42 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 22:51:42 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:51:42 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 22:51:42 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:51:42 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 22:51:42 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 22:51:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 22:51:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 22:51:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 22:51:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 22:51:42 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 22:51:42 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 22:51:42 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 22:51:42 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 22:51:42 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:51:42 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:51:42 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:51:42 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 22:51:42 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 22:51:42 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:51:42 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:51:42 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:51:42 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:51:42 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:51:42 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 22:51:42 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 22:51:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:51:42 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 22:51:42 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 22:51:42 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 22:51:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 22:51:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 22:51:42 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 22:51:43 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:51:33 CST 2018]; root of context hierarchy
2018-06-28 22:51:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:51:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:51:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:51:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 22:51:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:51:45 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
2018-06-28 22:51:45 -Unregistering JMX-exposed beans on shutdown
2018-06-28 22:51:45 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 22:51:45 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 22:51:45 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:51:33 CST 2018]; root of context hierarchy
2018-06-28 22:51:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 22:51:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 22:51:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 22:51:45 -Shutting down Quartz Scheduler
2018-06-28 22:51:45 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 22:51:45 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 22:51:45 -{dataSource-1} closed
2018-06-28 22:51:45 -Stopping service [Tomcat]
2018-06-28 22:51:45 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-28 22:51:45 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:15)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 20 common frames omitted
Caused by: java.lang.NullPointerException: null
	at com.bootdo.common.aspect.WebLogAspect.doBefore(WebLogAspect.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:611)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:43)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.common.controller.HandleErrorController$$EnhancerBySpringCGLIB$$3c9f7159.getErrorPath(<generated>)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$DefaultIgnoredRequestCustomizer.customize(SpringBootWebSecurityConfiguration.java:189)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:164)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:146)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:371)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:325)
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$4bb84de7.CGLIB$springSecurityFilterChain$6(<generated>)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$4bb84de7$$FastClassBySpringCGLIB$$d2f0cc91.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$4bb84de7.springSecurityFilterChain(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 21 common frames omitted
2018-06-28 22:52:45 -Starting BootdoApplication on localhost with PID 7762 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-28 22:52:45 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-28 22:52:45 -The following profiles are active: dev
2018-06-28 22:52:45 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-28 22:52:45 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:52:45 CST 2018]; root of context hierarchy
2018-06-28 22:52:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-28 22:52:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff88c20d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:52:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f1e1f0b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:52:48 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:52:48 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:52:48 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-28 22:52:49 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:52:49 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:52:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:52:49 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:52:49 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 22:52:50 -Tomcat initialized with port(s): 8099 (http)
2018-06-28 22:52:50 -Starting service [Tomcat]
2018-06-28 22:52:50 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-28 22:52:50 -Initializing Spring embedded WebApplicationContext
2018-06-28 22:52:50 -Root WebApplicationContext: initialization completed in 4957 ms
2018-06-28 22:52:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-28 22:52:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-28 22:52:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-28 22:52:52 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-28 22:52:52 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-28 22:52:52 -Filter xssFilter was not registered (disabled)
2018-06-28 22:52:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-28 22:52:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-28 22:52:52 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-28 22:52:52 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-28 22:52:53 -{dataSource-1} inited
2018-06-28 22:52:57 -ProcessEngine default created
2018-06-28 22:53:00 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:52:45 CST 2018]; root of context hierarchy
2018-06-28 22:53:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-28 22:53:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-28 22:53:02 -Using default implementation for ThreadExecutor
2018-06-28 22:53:02 -Job execution threads will use class loader of thread: main
2018-06-28 22:53:02 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 22:53:02 -Quartz Scheduler v.2.2.1 created.
2018-06-28 22:53:02 -RAMJobStore initialized.
2018-06-28 22:53:02 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-28 22:53:02 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-28 22:53:02 -Quartz scheduler version: 2.2.1
2018-06-28 22:53:02 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@482942d8
2018-06-28 22:53:06 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-28 22:53:06 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-28 22:53:06 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-28 22:53:06 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-28 22:53:06 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-28 22:53:06 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-28 22:53:06 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-28 22:53:06 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-28 22:53:06 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-28 22:53:06 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-28 22:53:06 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-28 22:53:06 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-28 22:53:06 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-28 22:53:06 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:53:06 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-28 22:53:06 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-28 22:53:06 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:53:06 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-28 22:53:06 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-28 22:53:06 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:53:06 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-28 22:53:06 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-28 22:53:06 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-28 22:53:06 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-28 22:53:06 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-28 22:53:06 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 22:53:06 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-28 22:53:06 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-28 22:53:06 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-28 22:53:06 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:53:06 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-28 22:53:06 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-28 22:53:06 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.HandleErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:53:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.controller.HandleErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 22:53:06 -Mapped "{[/system/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.remove(java.lang.Long[])
2018-06-28 22:53:06 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.update(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:53:06 -Mapped "{[/system/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.list()
2018-06-28 22:53:06 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dept.controller.DeptController.save(com.bootdo.system.dept.domain.DeptDO)
2018-06-28 22:53:06 -Mapped "{[/system/dept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.dept.controller.DeptController.tree()
2018-06-28 22:53:06 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.dept()
2018-06-28 22:53:06 -Mapped "{[/system/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.treeView()
2018-06-28 22:53:06 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.dept.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.add()
2018-06-28 22:53:06 -Mapped "{[/system/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long[])
2018-06-28 22:53:06 -Mapped "{[/system/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.remove(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.update(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:53:06 -Mapped "{[/system/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.dict.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.save(com.bootdo.system.dict.domain.DictDO)
2018-06-28 22:53:06 -Mapped "{[/system/dict],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.dict()
2018-06-28 22:53:06 -Mapped "{[/system/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/system/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listByType(java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/system/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.system.dicttype.domain.DictTypeDO> com.bootdo.system.dict.controller.DictController.listDictType(java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/system/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.adddict()
2018-06-28 22:53:06 -Mapped "{[/system/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.dict.controller.DictController.savetype(com.bootdo.system.dicttype.domain.DictTypeDO)
2018-06-28 22:53:06 -Mapped "{[/system/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.system.dict.domain.DictDO> com.bootdo.system.dict.controller.DictController.listType()
2018-06-28 22:53:06 -Mapped "{[/system/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.dict.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/file/add],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.add()
2018-06-28 22:53:06 -Mapped "{[/system/file/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-28 22:53:06 -Mapped "{[/system/file/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.remove(java.lang.Long[])
2018-06-28 22:53:06 -Mapped "{[/system/file/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.update(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:53:06 -Mapped "{[/system/file/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.file.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/file/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.save(com.bootdo.system.file.domain.FileDO)
2018-06-28 22:53:06 -Mapped "{[/system/file/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.info(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/file/edit],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/file/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.file.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-28 22:53:06 -Mapped "{[/system/file],methods=[GET]}" onto java.lang.String com.bootdo.system.file.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.generator.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.system.generator.controller.GeneratorController.list()
2018-06-28 22:53:06 -Mapped "{[/system/generator/code/{tableName}]}" onto public void com.bootdo.system.generator.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:53:06 -Mapped "{[/system/generator],methods=[GET]}" onto java.lang.String com.bootdo.system.generator.controller.GeneratorController.generator()
2018-06-28 22:53:06 -Mapped "{[/system/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.system.generator.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/generator/batchCode]}" onto public void com.bootdo.system.generator.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-28 22:53:06 -Mapped "{[/system/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.remove(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/log],methods=[GET]}" onto java.lang.String com.bootdo.system.log.controller.LogController.log()
2018-06-28 22:53:06 -Mapped "{[/system/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.system.log.domain.LogDO> com.bootdo.system.log.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.log.controller.LogController.batchRemove(java.lang.Long[])
2018-06-28 22:53:06 -Mapped "{[/system/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.remove(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.update(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:53:06 -Mapped "{[/system/menu/list]}" onto java.util.List<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.menu.controller.MenuController.save(com.bootdo.system.menu.domain.MenuDO)
2018-06-28 22:53:06 -Mapped "{[/system/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.menu.domain.MenuDO> com.bootdo.system.menu.controller.MenuController.tree()
2018-06-28 22:53:06 -Mapped "{[/system/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.menu.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/notice/add],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.add()
2018-06-28 22:53:06 -Mapped "{[/system/notice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/notice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.remove(java.lang.Long[])
2018-06-28 22:53:06 -Mapped "{[/system/notice/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.update(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:53:06 -Mapped "{[/system/notice/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/notice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/notice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.notice.controller.NoticeController.save(com.bootdo.system.notice.domain.NoticeDO)
2018-06-28 22:53:06 -Mapped "{[/system/notice/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.message()
2018-06-28 22:53:06 -Mapped "{[/system/notice/selflist],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.notice.controller.NoticeController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/notice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/notice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.Notice()
2018-06-28 22:53:06 -Mapped "{[/system/notice/selfnotice],methods=[GET]}" onto java.lang.String com.bootdo.system.notice.controller.NoticeController.selefNotice()
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob/add],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.add()
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.remove(java.lang.Long[])
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.update(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.quartzjob.controller.QuartzJobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.save(com.bootdo.system.quartzjob.domain.QuartzJobTaskDO)
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.info(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob],methods=[GET]}" onto java.lang.String com.bootdo.system.quartzjob.controller.QuartzJobController.QuartzJobController()
2018-06-28 22:53:06 -Mapped "{[/system/quartzjob/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.quartzjob.controller.QuartzJobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.add()
2018-06-28 22:53:06 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.remove(java.lang.String[])
2018-06-28 22:53:06 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.update(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:53:06 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.regexp.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.regexp.controller.RegexpController.save(com.bootdo.system.regexp.domain.RegexpDO)
2018-06-28 22:53:06 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.regexp.controller.RegexpController.Regexp()
2018-06-28 22:53:06 -Mapped "{[/system/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.add()
2018-06-28 22:53:06 -Mapped "{[/system/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.update(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:53:06 -Mapped "{[/system/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.role.domain.RoleDO> com.bootdo.system.role.controller.RoleController.list()
2018-06-28 22:53:06 -Mapped "{[/system/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.save(com.bootdo.system.role.domain.RoleDO)
2018-06-28 22:53:06 -Mapped "{[/system/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.role.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-28 22:53:06 -Mapped "{[/system/role],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.role()
2018-06-28 22:53:06 -Mapped "{[/system/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.role.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.index(org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.main()
2018-06-28 22:53:06 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.login()
2018-06-28 22:53:06 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.logout()
2018-06-28 22:53:06 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-28 22:53:06 -Mapped "{[/system/online/list]}" onto public java.util.List<com.bootdo.system.user.domain.UserOnline> com.bootdo.system.user.controller.SessionController.list()
2018-06-28 22:53:06 -Mapped "{[/system/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.user.controller.SessionController.online()
2018-06-28 22:53:06 -Mapped "{[/system/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.user.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-28 22:53:06 -Mapped "{[/system/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.user.controller.SessionController.sessionList()
2018-06-28 22:53:06 -Mapped "{[/system/user/exit],methods=[POST]}" onto boolean com.bootdo.system.user.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.add(org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.remove(java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.update(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:53:06 -Mapped "{[/system/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.user.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-28 22:53:06 -Mapped "{[/system/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.save(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:53:06 -Mapped "{[/system/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.batchRemove(java.lang.Long[])
2018-06-28 22:53:06 -Mapped "{[/system/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.dept.domain.DeptDO> com.bootdo.system.user.controller.UserController.tree()
2018-06-28 22:53:06 -Mapped "{[/system/user],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.user(org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.treeView()
2018-06-28 22:53:06 -Mapped "{[/system/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-28 22:53:06 -Mapped "{[/system/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.resetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:53:06 -Mapped "{[/system/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.updatePeronal(com.bootdo.system.user.domain.UserDO)
2018-06-28 22:53:06 -Mapped "{[/system/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.adminResetPwd(com.bootdo.system.user.domain.UserVO)
2018-06-28 22:53:06 -Mapped "{[/system/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.user.controller.UserController.personal(org.springframework.ui.Model)
2018-06-28 22:53:06 -Mapped "{[/system/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.user.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:53:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-28 22:53:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-28 22:53:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-28 22:53:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-28 22:53:07 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-28 22:53:07 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-28 22:53:07 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-28 22:53:07 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:52:45 CST 2018]; root of context hierarchy
2018-06-28 22:53:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:53:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:53:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:53:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-28 22:53:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-28 22:53:09 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
2018-06-28 22:53:09 -Unregistering JMX-exposed beans on shutdown
2018-06-28 22:53:09 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-28 22:53:09 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-28 22:53:09 -清除SpringContextHolder中的ApplicationContext:org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77825085: startup date [Thu Jun 28 22:52:45 CST 2018]; root of context hierarchy
2018-06-28 22:53:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-28 22:53:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-28 22:53:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-28 22:53:09 -Shutting down Quartz Scheduler
2018-06-28 22:53:09 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-28 22:53:09 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-28 22:53:09 -{dataSource-1} closed
2018-06-28 22:53:09 -Stopping service [Tomcat]
2018-06-28 22:53:09 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-28 22:53:09 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:15)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 20 common frames omitted
Caused by: java.lang.NullPointerException: null
	at com.bootdo.common.aspect.WebLogAspect.doBefore(WebLogAspect.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:611)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:43)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.common.controller.HandleErrorController$$EnhancerBySpringCGLIB$$a3024e39.getErrorPath(<generated>)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$DefaultIgnoredRequestCustomizer.customize(SpringBootWebSecurityConfiguration.java:189)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:164)
	at org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$IgnoredPathsWebSecurityConfigurerAdapter.init(SpringBootWebSecurityConfiguration.java:146)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:371)
	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:325)
	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:41)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:104)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$a6b9ef00.CGLIB$springSecurityFilterChain$2(<generated>)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$a6b9ef00$$FastClassBySpringCGLIB$$fe17df58.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$a6b9ef00.springSecurityFilterChain(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 21 common frames omitted
