2018-06-27 00:05:40 -Starting BootdoApplication on localhost with PID 3978 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 00:05:40 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 00:05:40 -The following profiles are active: dev
2018-06-27 00:05:41 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 00:05:41 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:05:41 CST 2018]; root of context hierarchy
2018-06-27 00:05:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 00:05:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$97f085be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:05:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8a49b465] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:05:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:05:43 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:05:43 -获取名称为: com.bootdo.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 00:05:43 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:05:43 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:05:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:05:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:05:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:05:43 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 00:05:43 -Starting service [Tomcat]
2018-06-27 00:05:43 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 00:05:44 -Initializing Spring embedded WebApplicationContext
2018-06-27 00:05:44 -Root WebApplicationContext: initialization completed in 2797 ms
2018-06-27 00:05:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 00:05:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 00:05:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 00:05:44 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 00:05:44 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 00:05:44 -Filter xssFilter was not registered (disabled)
2018-06-27 00:05:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 00:05:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 00:05:44 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 00:05:44 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 00:05:44 -{dataSource-1} inited
2018-06-27 00:05:46 -ProcessEngine default created
2018-06-27 00:05:47 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:05:41 CST 2018]; root of context hierarchy
2018-06-27 00:05:47 -Using default implementation for ThreadExecutor
2018-06-27 00:05:47 -Job execution threads will use class loader of thread: main
2018-06-27 00:05:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-27 00:05:47 -Quartz Scheduler v.2.2.1 created.
2018-06-27 00:05:47 -RAMJobStore initialized.
2018-06-27 00:05:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-27 00:05:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-27 00:05:47 -Quartz scheduler version: 2.2.1
2018-06-27 00:05:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2f112ade
2018-06-27 00:05:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-27 00:05:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-27 00:05:49 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-27 00:05:49 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-27 00:05:49 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-27 00:05:49 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-27 00:05:49 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-27 00:05:49 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-27 00:05:49 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-27 00:05:49 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-27 00:05:49 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-27 00:05:49 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-27 00:05:49 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-27 00:05:49 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-27 00:05:49 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 00:05:49 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-27 00:05:49 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-27 00:05:49 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-27 00:05:49 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-27 00:05:49 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-27 00:05:49 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-27 00:05:49 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-27 00:05:49 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-27 00:05:49 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-27 00:05:49 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-27 00:05:49 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-27 00:05:49 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-27 00:05:49 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 00:05:49 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-27 00:05:49 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-27 00:05:49 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-27 00:05:49 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-27 00:05:49 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-27 00:05:49 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-27 00:05:49 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2018-06-27 00:05:49 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2018-06-27 00:05:49 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2018-06-27 00:05:49 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2018-06-27 00:05:49 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2018-06-27 00:05:49 -Mapped "{[/common/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.savetype(com.bootdo.common.domain.DictTypeDO)
2018-06-27 00:05:49 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2018-06-27 00:05:49 -Mapped "{[/common/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.adddict()
2018-06-27 00:05:49 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/common/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictTypeDO> com.bootdo.common.controller.DictController.listDictType(java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2018-06-27 00:05:49 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2018-06-27 00:05:49 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-27 00:05:49 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2018-06-27 00:05:49 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2018-06-27 00:05:49 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-27 00:05:49 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-06-27 00:05:49 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-27 00:05:49 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-27 00:05:49 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-06-27 00:05:49 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2018-06-27 00:05:49 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2018-06-27 00:05:49 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2018-06-27 00:05:49 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2018-06-27 00:05:49 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2018-06-27 00:05:49 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2018-06-27 00:05:49 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2018-06-27 00:05:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 00:05:49 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 00:05:49 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-27 00:05:49 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-27 00:05:49 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-27 00:05:49 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-27 00:05:49 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-27 00:05:49 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-27 00:05:49 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-27 00:05:49 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2018-06-27 00:05:49 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2018-06-27 00:05:49 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2018-06-27 00:05:49 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2018-06-27 00:05:49 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2018-06-27 00:05:49 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2018-06-27 00:05:49 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2018-06-27 00:05:49 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-06-27 00:05:49 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-06-27 00:05:49 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-06-27 00:05:49 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-06-27 00:05:49 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-06-27 00:05:49 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-06-27 00:05:49 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.add()
2018-06-27 00:05:49 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.remove(java.lang.String)
2018-06-27 00:05:49 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.remove(java.lang.String[])
2018-06-27 00:05:49 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.update(com.bootdo.system.domain.RegexpDO)
2018-06-27 00:05:49 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.save(com.bootdo.system.domain.RegexpDO)
2018-06-27 00:05:49 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.Regexp()
2018-06-27 00:05:49 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-06-27 00:05:49 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-06-27 00:05:49 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-06-27 00:05:49 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-06-27 00:05:49 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-27 00:05:49 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-06-27 00:05:49 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-06-27 00:05:49 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-06-27 00:05:49 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-06-27 00:05:49 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-27 00:05:49 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-06-27 00:05:49 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:05:49 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-06-27 00:05:49 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-06-27 00:05:49 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2018-06-27 00:05:49 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-27 00:05:49 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-06-27 00:05:49 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-06-27 00:05:49 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-06-27 00:05:49 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-27 00:05:49 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-06-27 00:05:49 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-06-27 00:05:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-27 00:05:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-27 00:05:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-27 00:05:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-27 00:05:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-27 00:05:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-27 00:05:49 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-27 00:05:50 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:05:41 CST 2018]; root of context hierarchy
2018-06-27 00:05:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:05:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:05:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:05:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-27 00:05:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:05:51 -

Using default security password: 162f1a1c-8faa-484d-9d72-0de9f5301626

2018-06-27 00:05:51 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-27 00:05:51 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@9d7a853, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71c69628, org.springframework.security.web.context.SecurityContextPersistenceFilter@63e40188, org.springframework.security.web.header.HeaderWriterFilter@41736818, org.springframework.security.web.csrf.CsrfFilter@95aeee4, org.springframework.security.web.authentication.logout.LogoutFilter@eda7dd3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@535b4dbf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e487d57, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4dc16fc9, org.springframework.security.web.session.SessionManagementFilter@5f1a3c4, org.springframework.security.web.access.ExceptionTranslationFilter@1718de70]
2018-06-27 00:05:52 -Registering beans for JMX exposure on startup
2018-06-27 00:05:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 00:05:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 00:05:52 -Starting beans in phase 2147483647
2018-06-27 00:05:52 -Context refreshed
2018-06-27 00:05:52 -Found 1 custom documentation plugin(s)
2018-06-27 00:05:52 -Scanning for api listing references
2018-06-27 00:05:52 -Generating unique operation named: removeUsingPOST_1
2018-06-27 00:05:52 -Generating unique operation named: addUsingGET_1
2018-06-27 00:05:52 -Generating unique operation named: editUsingGET_1
2018-06-27 00:05:52 -Generating unique operation named: listUsingGET_1
2018-06-27 00:05:52 -Generating unique operation named: removeUsingPOST_2
2018-06-27 00:05:52 -Generating unique operation named: removeUsingPOST_3
2018-06-27 00:05:52 -Generating unique operation named: saveUsingPOST_1
2018-06-27 00:05:52 -Generating unique operation named: updateUsingGET_1
2018-06-27 00:05:52 -Generating unique operation named: updateUsingHEAD_1
2018-06-27 00:05:52 -Generating unique operation named: updateUsingPOST_1
2018-06-27 00:05:52 -Generating unique operation named: updateUsingPUT_1
2018-06-27 00:05:52 -Generating unique operation named: updateUsingPATCH_1
2018-06-27 00:05:52 -Generating unique operation named: updateUsingDELETE_1
2018-06-27 00:05:52 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-27 00:05:52 -Generating unique operation named: updateUsingTRACE_1
2018-06-27 00:05:52 -Generating unique operation named: addUsingGET_2
2018-06-27 00:05:52 -Generating unique operation named: editUsingGET_2
2018-06-27 00:05:52 -Generating unique operation named: listUsingGET_2
2018-06-27 00:05:52 -Generating unique operation named: removeUsingPOST_4
2018-06-27 00:05:52 -Generating unique operation named: removeUsingPOST_5
2018-06-27 00:05:52 -Generating unique operation named: saveUsingPOST_2
2018-06-27 00:05:52 -Generating unique operation named: updateUsingGET_2
2018-06-27 00:05:52 -Generating unique operation named: updateUsingHEAD_2
2018-06-27 00:05:52 -Generating unique operation named: updateUsingPOST_2
2018-06-27 00:05:52 -Generating unique operation named: updateUsingPUT_2
2018-06-27 00:05:52 -Generating unique operation named: updateUsingPATCH_2
2018-06-27 00:05:52 -Generating unique operation named: updateUsingDELETE_2
2018-06-27 00:05:52 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-27 00:05:52 -Generating unique operation named: updateUsingTRACE_2
2018-06-27 00:05:53 -Generating unique operation named: addUsingGET_3
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_3
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_3
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_6
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_7
2018-06-27 00:05:53 -Generating unique operation named: saveUsingPOST_3
2018-06-27 00:05:53 -Generating unique operation named: updateUsingGET_3
2018-06-27 00:05:53 -Generating unique operation named: updateUsingHEAD_3
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPOST_3
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPUT_3
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPATCH_3
2018-06-27 00:05:53 -Generating unique operation named: updateUsingDELETE_3
2018-06-27 00:05:53 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-27 00:05:53 -Generating unique operation named: updateUsingTRACE_3
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_4
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_4
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPOST_4
2018-06-27 00:05:53 -Generating unique operation named: addUsingGET_4
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_5
2018-06-27 00:05:53 -Generating unique operation named: infoUsingGET_1
2018-06-27 00:05:53 -Generating unique operation named: infoUsingHEAD_1
2018-06-27 00:05:53 -Generating unique operation named: infoUsingPOST_1
2018-06-27 00:05:53 -Generating unique operation named: infoUsingPUT_1
2018-06-27 00:05:53 -Generating unique operation named: infoUsingPATCH_1
2018-06-27 00:05:53 -Generating unique operation named: infoUsingDELETE_1
2018-06-27 00:05:53 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-27 00:05:53 -Generating unique operation named: infoUsingTRACE_1
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_5
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_8
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_9
2018-06-27 00:05:53 -Generating unique operation named: saveUsingPOST_4
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPOST_5
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_6
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_10
2018-06-27 00:05:53 -Generating unique operation named: welcomeUsingGET_1
2018-06-27 00:05:53 -Generating unique operation named: addUsingGET_5
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_6
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_7
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_11
2018-06-27 00:05:53 -Generating unique operation named: saveUsingPOST_5
2018-06-27 00:05:53 -Generating unique operation named: treeUsingGET_1
2018-06-27 00:05:53 -Generating unique operation named: treeUsingGET_2
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPOST_6
2018-06-27 00:05:53 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_7
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_8
2018-06-27 00:05:53 -Generating unique operation named: addUsingGET_6
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_8
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_9
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_12
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_13
2018-06-27 00:05:53 -Generating unique operation named: saveUsingPOST_6
2018-06-27 00:05:53 -Generating unique operation named: updateUsingGET_4
2018-06-27 00:05:53 -Generating unique operation named: updateUsingHEAD_4
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPOST_7
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPUT_4
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPATCH_4
2018-06-27 00:05:53 -Generating unique operation named: updateUsingDELETE_4
2018-06-27 00:05:53 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-27 00:05:53 -Generating unique operation named: updateUsingTRACE_4
2018-06-27 00:05:53 -Generating unique operation named: addUsingGET_7
2018-06-27 00:05:53 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-27 00:05:53 -Generating unique operation named: deployUsingPOST_1
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_10
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_14
2018-06-27 00:05:53 -Generating unique operation named: addUsingGET_8
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_9
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_11
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_15
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_16
2018-06-27 00:05:53 -Generating unique operation named: saveUsingPOST_7
2018-06-27 00:05:53 -Generating unique operation named: updateUsingGET_5
2018-06-27 00:05:53 -Generating unique operation named: updateUsingHEAD_5
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPOST_8
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPUT_5
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPATCH_5
2018-06-27 00:05:53 -Generating unique operation named: updateUsingDELETE_5
2018-06-27 00:05:53 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-27 00:05:53 -Generating unique operation named: updateUsingTRACE_5
2018-06-27 00:05:53 -Generating unique operation named: addUsingGET_9
2018-06-27 00:05:53 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_10
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_12
2018-06-27 00:05:53 -Generating unique operation named: saveUsingPOST_8
2018-06-27 00:05:53 -Generating unique operation named: saveUsingPOST_9
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPOST_9
2018-06-27 00:05:53 -Generating unique operation named: addUsingGET_10
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_11
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_13
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_17
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_18
2018-06-27 00:05:53 -Generating unique operation named: updateUsingGET_6
2018-06-27 00:05:53 -Generating unique operation named: updateUsingHEAD_6
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPOST_10
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPUT_6
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPATCH_6
2018-06-27 00:05:53 -Generating unique operation named: updateUsingDELETE_6
2018-06-27 00:05:53 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-27 00:05:53 -Generating unique operation named: updateUsingTRACE_6
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_14
2018-06-27 00:05:53 -Generating unique operation named: listUsingHEAD_1
2018-06-27 00:05:53 -Generating unique operation named: listUsingPOST_1
2018-06-27 00:05:53 -Generating unique operation named: listUsingPUT_1
2018-06-27 00:05:53 -Generating unique operation named: listUsingPATCH_1
2018-06-27 00:05:53 -Generating unique operation named: listUsingDELETE_1
2018-06-27 00:05:53 -Generating unique operation named: listUsingOPTIONS_1
2018-06-27 00:05:53 -Generating unique operation named: listUsingTRACE_1
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_15
2018-06-27 00:05:53 -Generating unique operation named: addUsingGET_11
2018-06-27 00:05:53 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-27 00:05:53 -Generating unique operation named: editUsingGET_12
2018-06-27 00:05:53 -Generating unique operation named: listUsingGET_16
2018-06-27 00:05:53 -Generating unique operation named: removeUsingPOST_19
2018-06-27 00:05:53 -Generating unique operation named: saveUsingPOST_10
2018-06-27 00:05:53 -Generating unique operation named: treeUsingGET_3
2018-06-27 00:05:53 -Generating unique operation named: treeViewUsingGET_1
2018-06-27 00:05:53 -Generating unique operation named: updateUsingPOST_11
2018-06-27 00:05:53 -Starting Quartz Scheduler now
2018-06-27 00:05:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-27 00:05:53 -Starting...
2018-06-27 00:05:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-27 00:05:53 -Started.
2018-06-27 00:05:53 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-27 00:05:53 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-27 00:05:53 -Using a shared selector for servlet write/read
2018-06-27 00:05:53 -Tomcat started on port(s): 8099 (http)
2018-06-27 00:05:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-27 00:05:53 -==> Parameters: 
2018-06-27 00:05:53 -<==      Total: 1
2018-06-27 00:05:53 -Started BootdoApplication in 13.664 seconds (JVM running for 14.396)
2018-06-27 00:06:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-06-27 00:07:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 00:07:20 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 00:07:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-06-27 00:07:20 -Enabling session validation scheduler...
2018-06-27 00:07:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:21 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-27 00:07:21 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 00:07:21 -HTTP METHOD : GET
2018-06-27 00:07:21 -HTTP METHOD : GET
2018-06-27 00:07:21 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.Regexp
2018-06-27 00:07:21 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 00:07:21 -参数 : []
2018-06-27 00:07:21 -参数 : [{limit=10, offset=0}]
2018-06-27 00:07:21 -耗时 : 3
2018-06-27 00:07:21 -返回值 : system/regexp/regexp
2018-06-27 00:07:21 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-27 00:07:21 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 00:07:21 -<==      Total: 10
2018-06-27 00:07:21 -==>  Preparing: select count(*) from sys_regexp 
2018-06-27 00:07:21 -==> Parameters: 
2018-06-27 00:07:21 -<==      Total: 1
2018-06-27 00:07:21 -耗时 : 22
2018-06-27 00:07:21 -返回值 : com.bootdo.common.utils.PageUtils@35a3f6fb
2018-06-27 00:07:21 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-27 00:07:21 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-27 00:07:21 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-27 00:07:21 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-27 00:07:21 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-27 00:07:21 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-27 00:07:21 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-27 00:07:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:21 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:27 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 00:07:27 -HTTP METHOD : GET
2018-06-27 00:07:27 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 00:07:27 -参数 : [{limit=10, offset=10}]
2018-06-27 00:07:27 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-27 00:07:27 -==> Parameters: 10(Integer), 10(Integer)
2018-06-27 00:07:27 -<==      Total: 1
2018-06-27 00:07:27 -==>  Preparing: select count(*) from sys_regexp 
2018-06-27 00:07:27 -==> Parameters: 
2018-06-27 00:07:27 -<==      Total: 1
2018-06-27 00:07:27 -耗时 : 3
2018-06-27 00:07:27 -返回值 : com.bootdo.common.utils.PageUtils@3e76b6df
2018-06-27 00:07:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:33 -请求地址 : http://127.0.0.1:8099/common/dict
2018-06-27 00:07:33 -HTTP METHOD : GET
2018-06-27 00:07:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.dict
2018-06-27 00:07:33 -参数 : []
2018-06-27 00:07:33 -耗时 : 0
2018-06-27 00:07:33 -返回值 : common/dict/dict
2018-06-27 00:07:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:33 -请求地址 : http://127.0.0.1:8099/common/dict/type
2018-06-27 00:07:33 -HTTP METHOD : GET
2018-06-27 00:07:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listType
2018-06-27 00:07:33 -参数 : []
2018-06-27 00:07:33 -请求地址 : http://127.0.0.1:8099/common/dict/dicttype
2018-06-27 00:07:33 -HTTP METHOD : GET
2018-06-27 00:07:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listDictType
2018-06-27 00:07:33 -参数 : []
2018-06-27 00:07:33 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-27 00:07:33 -==> Parameters: 
2018-06-27 00:07:33 -==>  Preparing: select `did`,`dname`,`dcode`,`remark` from sys_dict 
2018-06-27 00:07:33 -<==      Total: 31
2018-06-27 00:07:33 -耗时 : 11
2018-06-27 00:07:33 -==> Parameters: 
2018-06-27 00:07:33 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-27 00:07:33 -<==      Total: 3
2018-06-27 00:07:33 -耗时 : 10
2018-06-27 00:07:33 -返回值 : [com.bootdo.common.domain.DictTypeDO@a1e1bfc, com.bootdo.common.domain.DictTypeDO@15cf3126, com.bootdo.common.domain.DictTypeDO@60e96900]
2018-06-27 00:07:33 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:07:33 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 00:07:33 -HTTP METHOD : GET
2018-06-27 00:07:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 00:07:33 -参数 : [{limit=10, offset=0}]
2018-06-27 00:07:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-27 00:07:33 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 00:07:33 -<==      Total: 10
2018-06-27 00:07:33 -==>  Preparing: select count(*) from sys_dict3 
2018-06-27 00:07:33 -==> Parameters: 
2018-06-27 00:07:33 -<==      Total: 1
2018-06-27 00:07:33 -耗时 : 9
2018-06-27 00:07:33 -返回值 : com.bootdo.common.utils.PageUtils@6da26d6b
2018-06-27 00:24:49 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:05:41 CST 2018]; root of context hierarchy
2018-06-27 00:24:49 -Stopping beans in phase 2147483647
2018-06-27 00:24:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-27 00:24:49 -Stopping...
2018-06-27 00:24:49 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-27 00:24:49 -Stopped.
2018-06-27 00:24:49 -Unregistering JMX-exposed beans on shutdown
2018-06-27 00:24:49 -Unregistering JMX-exposed beans
2018-06-27 00:24:49 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-27 00:24:49 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-27 00:24:49 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-27 00:24:49 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-27 00:24:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-27 00:24:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-27 00:24:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-27 00:24:49 -Shutting down Quartz Scheduler
2018-06-27 00:24:49 -{dataSource-1} closed
2018-06-27 00:24:49 -Disabled session validation scheduler.
2018-06-27 00:24:51 -Starting BootdoApplication on localhost with PID 3999 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 00:24:51 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 00:24:51 -The following profiles are active: dev
2018-06-27 00:24:51 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 00:24:51 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:24:51 CST 2018]; root of context hierarchy
2018-06-27 00:24:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 00:24:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4127e05d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:24:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$33810f04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:24:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:24:53 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:24:53 -获取名称为: com.bootdo.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 00:24:53 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:24:53 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:24:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:24:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:24:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:24:54 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 00:24:54 -Starting service [Tomcat]
2018-06-27 00:24:54 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 00:24:54 -Initializing Spring embedded WebApplicationContext
2018-06-27 00:24:54 -Root WebApplicationContext: initialization completed in 2638 ms
2018-06-27 00:24:55 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 00:24:55 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 00:24:55 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 00:24:55 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 00:24:55 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 00:24:55 -Filter xssFilter was not registered (disabled)
2018-06-27 00:24:55 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 00:24:55 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 00:24:55 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 00:24:55 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 00:24:55 -{dataSource-1} inited
2018-06-27 00:24:56 -ProcessEngine default created
2018-06-27 00:24:57 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:24:51 CST 2018]; root of context hierarchy
2018-06-27 00:24:58 -Using default implementation for ThreadExecutor
2018-06-27 00:24:58 -Job execution threads will use class loader of thread: main
2018-06-27 00:24:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-27 00:24:58 -Quartz Scheduler v.2.2.1 created.
2018-06-27 00:24:58 -RAMJobStore initialized.
2018-06-27 00:24:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-27 00:24:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-27 00:24:58 -Quartz scheduler version: 2.2.1
2018-06-27 00:24:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@51172948
2018-06-27 00:24:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-27 00:24:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-27 00:25:00 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-27 00:25:00 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-27 00:25:00 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-27 00:25:00 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-27 00:25:00 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-27 00:25:00 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-27 00:25:00 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-27 00:25:00 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-27 00:25:00 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-27 00:25:00 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-27 00:25:00 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-27 00:25:00 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-27 00:25:00 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 00:25:00 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-27 00:25:00 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-27 00:25:00 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-27 00:25:00 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-27 00:25:00 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-27 00:25:00 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-27 00:25:00 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-27 00:25:00 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-27 00:25:00 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-27 00:25:00 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-27 00:25:00 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-27 00:25:00 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-27 00:25:00 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 00:25:00 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-27 00:25:00 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-27 00:25:00 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-27 00:25:00 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-27 00:25:00 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-27 00:25:00 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-27 00:25:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2018-06-27 00:25:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2018-06-27 00:25:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2018-06-27 00:25:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2018-06-27 00:25:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2018-06-27 00:25:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2018-06-27 00:25:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/common/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictTypeDO> com.bootdo.common.controller.DictController.listDictType(java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/common/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.adddict()
2018-06-27 00:25:00 -Mapped "{[/common/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.savetype(com.bootdo.common.domain.DictTypeDO)
2018-06-27 00:25:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2018-06-27 00:25:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-27 00:25:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2018-06-27 00:25:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2018-06-27 00:25:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2018-06-27 00:25:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-27 00:25:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-06-27 00:25:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-06-27 00:25:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-27 00:25:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-27 00:25:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2018-06-27 00:25:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2018-06-27 00:25:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2018-06-27 00:25:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2018-06-27 00:25:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2018-06-27 00:25:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2018-06-27 00:25:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2018-06-27 00:25:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 00:25:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 00:25:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-27 00:25:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-27 00:25:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-27 00:25:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-27 00:25:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-27 00:25:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-27 00:25:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-27 00:25:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2018-06-27 00:25:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2018-06-27 00:25:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2018-06-27 00:25:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2018-06-27 00:25:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2018-06-27 00:25:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2018-06-27 00:25:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2018-06-27 00:25:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-06-27 00:25:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-06-27 00:25:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-06-27 00:25:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-06-27 00:25:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-06-27 00:25:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-06-27 00:25:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.add()
2018-06-27 00:25:00 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.remove(java.lang.String)
2018-06-27 00:25:00 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.remove(java.lang.String[])
2018-06-27 00:25:00 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.update(com.bootdo.system.domain.RegexpDO)
2018-06-27 00:25:00 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.save(com.bootdo.system.domain.RegexpDO)
2018-06-27 00:25:00 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.Regexp()
2018-06-27 00:25:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-06-27 00:25:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-06-27 00:25:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-06-27 00:25:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-06-27 00:25:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-27 00:25:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-06-27 00:25:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-06-27 00:25:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-06-27 00:25:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-06-27 00:25:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-27 00:25:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-06-27 00:25:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:25:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-06-27 00:25:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-06-27 00:25:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2018-06-27 00:25:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-27 00:25:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-06-27 00:25:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-06-27 00:25:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-06-27 00:25:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-06-27 00:25:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-06-27 00:25:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-27 00:25:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-27 00:25:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-27 00:25:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-27 00:25:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-27 00:25:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-27 00:25:00 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-27 00:25:00 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-27 00:25:01 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:24:51 CST 2018]; root of context hierarchy
2018-06-27 00:25:01 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:25:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:25:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:25:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-27 00:25:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:25:02 -

Using default security password: a7f9a9bc-50a2-4f63-948a-6c53b9daa05a

2018-06-27 00:25:02 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-27 00:25:03 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@6cd65042, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7674f9d4, org.springframework.security.web.context.SecurityContextPersistenceFilter@62c1259f, org.springframework.security.web.header.HeaderWriterFilter@5c30decf, org.springframework.security.web.csrf.CsrfFilter@755033c5, org.springframework.security.web.authentication.logout.LogoutFilter@5cd6a827, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74267ece, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@574e4184, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b5ceb5d, org.springframework.security.web.session.SessionManagementFilter@5cb32140, org.springframework.security.web.access.ExceptionTranslationFilter@7a491a60]
2018-06-27 00:25:03 -Registering beans for JMX exposure on startup
2018-06-27 00:25:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 00:25:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 00:25:03 -Starting beans in phase 2147483647
2018-06-27 00:25:03 -Context refreshed
2018-06-27 00:25:03 -Found 1 custom documentation plugin(s)
2018-06-27 00:25:03 -Scanning for api listing references
2018-06-27 00:25:03 -Generating unique operation named: removeUsingPOST_1
2018-06-27 00:25:03 -Generating unique operation named: addUsingGET_1
2018-06-27 00:25:03 -Generating unique operation named: editUsingGET_1
2018-06-27 00:25:03 -Generating unique operation named: listUsingGET_1
2018-06-27 00:25:03 -Generating unique operation named: removeUsingPOST_2
2018-06-27 00:25:03 -Generating unique operation named: removeUsingPOST_3
2018-06-27 00:25:03 -Generating unique operation named: saveUsingPOST_1
2018-06-27 00:25:03 -Generating unique operation named: updateUsingGET_1
2018-06-27 00:25:03 -Generating unique operation named: updateUsingHEAD_1
2018-06-27 00:25:03 -Generating unique operation named: updateUsingPOST_1
2018-06-27 00:25:03 -Generating unique operation named: updateUsingPUT_1
2018-06-27 00:25:03 -Generating unique operation named: updateUsingPATCH_1
2018-06-27 00:25:03 -Generating unique operation named: updateUsingDELETE_1
2018-06-27 00:25:03 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-27 00:25:04 -Generating unique operation named: updateUsingTRACE_1
2018-06-27 00:25:04 -Generating unique operation named: addUsingGET_2
2018-06-27 00:25:04 -Generating unique operation named: editUsingGET_2
2018-06-27 00:25:04 -Generating unique operation named: listUsingGET_2
2018-06-27 00:25:04 -Generating unique operation named: removeUsingPOST_4
2018-06-27 00:25:04 -Generating unique operation named: removeUsingPOST_5
2018-06-27 00:25:04 -Generating unique operation named: saveUsingPOST_2
2018-06-27 00:25:04 -Generating unique operation named: updateUsingGET_2
2018-06-27 00:25:04 -Generating unique operation named: updateUsingHEAD_2
2018-06-27 00:25:04 -Generating unique operation named: updateUsingPOST_2
2018-06-27 00:25:04 -Generating unique operation named: updateUsingPUT_2
2018-06-27 00:25:04 -Generating unique operation named: updateUsingPATCH_2
2018-06-27 00:25:04 -Generating unique operation named: updateUsingDELETE_2
2018-06-27 00:25:04 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-27 00:25:04 -Generating unique operation named: updateUsingTRACE_2
2018-06-27 00:25:04 -Generating unique operation named: addUsingGET_3
2018-06-27 00:25:04 -Generating unique operation named: editUsingGET_3
2018-06-27 00:25:04 -Generating unique operation named: listUsingGET_3
2018-06-27 00:25:04 -Generating unique operation named: removeUsingPOST_6
2018-06-27 00:25:04 -Generating unique operation named: removeUsingPOST_7
2018-06-27 00:25:04 -Generating unique operation named: saveUsingPOST_3
2018-06-27 00:25:04 -Generating unique operation named: updateUsingGET_3
2018-06-27 00:25:04 -Generating unique operation named: updateUsingHEAD_3
2018-06-27 00:25:04 -Generating unique operation named: updateUsingPOST_3
2018-06-27 00:25:04 -Generating unique operation named: updateUsingPUT_3
2018-06-27 00:25:04 -Generating unique operation named: updateUsingPATCH_3
2018-06-27 00:25:04 -Generating unique operation named: updateUsingDELETE_3
2018-06-27 00:25:04 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-27 00:25:04 -Generating unique operation named: updateUsingTRACE_3
2018-06-27 00:25:04 -Generating unique operation named: editUsingGET_4
2018-06-27 00:25:04 -Generating unique operation named: listUsingGET_4
2018-06-27 00:25:04 -Generating unique operation named: updateUsingPOST_4
2018-06-27 00:25:04 -Generating unique operation named: addUsingGET_4
2018-06-27 00:25:04 -Generating unique operation named: editUsingGET_5
2018-06-27 00:25:04 -Generating unique operation named: infoUsingGET_1
2018-06-27 00:25:04 -Generating unique operation named: infoUsingHEAD_1
2018-06-27 00:25:04 -Generating unique operation named: infoUsingPOST_1
2018-06-27 00:25:04 -Generating unique operation named: infoUsingPUT_1
2018-06-27 00:25:04 -Generating unique operation named: infoUsingPATCH_1
2018-06-27 00:25:04 -Generating unique operation named: infoUsingDELETE_1
2018-06-27 00:25:04 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-27 00:25:04 -Generating unique operation named: infoUsingTRACE_1
2018-06-27 00:25:04 -Generating unique operation named: listUsingGET_5
2018-06-27 00:25:04 -Generating unique operation named: removeUsingPOST_8
2018-06-27 00:25:04 -Generating unique operation named: removeUsingPOST_9
2018-06-27 00:25:04 -Generating unique operation named: saveUsingPOST_4
2018-06-27 00:25:04 -Generating unique operation named: updateUsingPOST_5
2018-06-27 00:25:04 -Generating unique operation named: listUsingGET_6
2018-06-27 00:25:04 -Generating unique operation named: removeUsingPOST_10
2018-06-27 00:25:04 -Generating unique operation named: welcomeUsingGET_1
2018-06-27 00:25:04 -Generating unique operation named: addUsingGET_5
2018-06-27 00:25:04 -Generating unique operation named: editUsingGET_6
2018-06-27 00:25:04 -Generating unique operation named: listUsingGET_7
2018-06-27 00:25:04 -Generating unique operation named: removeUsingPOST_11
2018-06-27 00:25:04 -Generating unique operation named: saveUsingPOST_5
2018-06-27 00:25:04 -Generating unique operation named: treeUsingGET_1
2018-06-27 00:25:04 -Generating unique operation named: treeUsingGET_2
2018-06-27 00:25:04 -Generating unique operation named: updateUsingPOST_6
2018-06-27 00:25:04 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-27 00:25:04 -Generating unique operation named: editUsingGET_7
2018-06-27 00:25:04 -Generating unique operation named: listUsingGET_8
2018-06-27 00:25:05 -Generating unique operation named: addUsingGET_6
2018-06-27 00:25:05 -Generating unique operation named: editUsingGET_8
2018-06-27 00:25:05 -Generating unique operation named: listUsingGET_9
2018-06-27 00:25:05 -Generating unique operation named: removeUsingPOST_12
2018-06-27 00:25:05 -Generating unique operation named: removeUsingPOST_13
2018-06-27 00:25:05 -Generating unique operation named: saveUsingPOST_6
2018-06-27 00:25:05 -Generating unique operation named: updateUsingGET_4
2018-06-27 00:25:05 -Generating unique operation named: updateUsingHEAD_4
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPOST_7
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPUT_4
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPATCH_4
2018-06-27 00:25:05 -Generating unique operation named: updateUsingDELETE_4
2018-06-27 00:25:05 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-27 00:25:05 -Generating unique operation named: updateUsingTRACE_4
2018-06-27 00:25:05 -Generating unique operation named: addUsingGET_7
2018-06-27 00:25:05 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-27 00:25:05 -Generating unique operation named: deployUsingPOST_1
2018-06-27 00:25:05 -Generating unique operation named: listUsingGET_10
2018-06-27 00:25:05 -Generating unique operation named: removeUsingPOST_14
2018-06-27 00:25:05 -Generating unique operation named: addUsingGET_8
2018-06-27 00:25:05 -Generating unique operation named: editUsingGET_9
2018-06-27 00:25:05 -Generating unique operation named: listUsingGET_11
2018-06-27 00:25:05 -Generating unique operation named: removeUsingPOST_15
2018-06-27 00:25:05 -Generating unique operation named: removeUsingPOST_16
2018-06-27 00:25:05 -Generating unique operation named: saveUsingPOST_7
2018-06-27 00:25:05 -Generating unique operation named: updateUsingGET_5
2018-06-27 00:25:05 -Generating unique operation named: updateUsingHEAD_5
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPOST_8
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPUT_5
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPATCH_5
2018-06-27 00:25:05 -Generating unique operation named: updateUsingDELETE_5
2018-06-27 00:25:05 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-27 00:25:05 -Generating unique operation named: updateUsingTRACE_5
2018-06-27 00:25:05 -Generating unique operation named: addUsingGET_9
2018-06-27 00:25:05 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-27 00:25:05 -Generating unique operation named: editUsingGET_10
2018-06-27 00:25:05 -Generating unique operation named: listUsingGET_12
2018-06-27 00:25:05 -Generating unique operation named: saveUsingPOST_8
2018-06-27 00:25:05 -Generating unique operation named: saveUsingPOST_9
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPOST_9
2018-06-27 00:25:05 -Generating unique operation named: addUsingGET_10
2018-06-27 00:25:05 -Generating unique operation named: editUsingGET_11
2018-06-27 00:25:05 -Generating unique operation named: listUsingGET_13
2018-06-27 00:25:05 -Generating unique operation named: removeUsingPOST_17
2018-06-27 00:25:05 -Generating unique operation named: removeUsingPOST_18
2018-06-27 00:25:05 -Generating unique operation named: updateUsingGET_6
2018-06-27 00:25:05 -Generating unique operation named: updateUsingHEAD_6
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPOST_10
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPUT_6
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPATCH_6
2018-06-27 00:25:05 -Generating unique operation named: updateUsingDELETE_6
2018-06-27 00:25:05 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-27 00:25:05 -Generating unique operation named: updateUsingTRACE_6
2018-06-27 00:25:05 -Generating unique operation named: listUsingGET_14
2018-06-27 00:25:05 -Generating unique operation named: listUsingHEAD_1
2018-06-27 00:25:05 -Generating unique operation named: listUsingPOST_1
2018-06-27 00:25:05 -Generating unique operation named: listUsingPUT_1
2018-06-27 00:25:05 -Generating unique operation named: listUsingPATCH_1
2018-06-27 00:25:05 -Generating unique operation named: listUsingDELETE_1
2018-06-27 00:25:05 -Generating unique operation named: listUsingOPTIONS_1
2018-06-27 00:25:05 -Generating unique operation named: listUsingTRACE_1
2018-06-27 00:25:05 -Generating unique operation named: listUsingGET_15
2018-06-27 00:25:05 -Generating unique operation named: addUsingGET_11
2018-06-27 00:25:05 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-27 00:25:05 -Generating unique operation named: editUsingGET_12
2018-06-27 00:25:05 -Generating unique operation named: listUsingGET_16
2018-06-27 00:25:05 -Generating unique operation named: removeUsingPOST_19
2018-06-27 00:25:05 -Generating unique operation named: saveUsingPOST_10
2018-06-27 00:25:05 -Generating unique operation named: treeUsingGET_3
2018-06-27 00:25:05 -Generating unique operation named: treeViewUsingGET_1
2018-06-27 00:25:05 -Generating unique operation named: updateUsingPOST_11
2018-06-27 00:25:05 -Starting Quartz Scheduler now
2018-06-27 00:25:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-27 00:25:05 -Starting...
2018-06-27 00:25:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-27 00:25:05 -Started.
2018-06-27 00:25:05 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-27 00:25:05 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-27 00:25:05 -Using a shared selector for servlet write/read
2018-06-27 00:25:05 -Tomcat started on port(s): 8099 (http)
2018-06-27 00:25:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-27 00:25:05 -==> Parameters: 
2018-06-27 00:25:05 -<==      Total: 1
2018-06-27 00:25:05 -Started BootdoApplication in 14.898 seconds (JVM running for 15.514)
2018-06-27 00:25:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 00:25:12 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 00:25:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-06-27 00:25:12 -Enabling session validation scheduler...
2018-06-27 00:25:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:25:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:25:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-27 00:25:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-27 00:25:12 -==> Parameters: 1(Long)
2018-06-27 00:25:12 -==> Parameters: 1(Long)
2018-06-27 00:25:12 -<==      Total: 51
2018-06-27 00:25:12 -<==      Total: 51
2018-06-27 00:25:12 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:25:12 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:25:12 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-27 00:25:12 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 00:25:12 -HTTP METHOD : GET
2018-06-27 00:25:12 -HTTP METHOD : GET
2018-06-27 00:25:12 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 00:25:12 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.Regexp
2018-06-27 00:25:12 -参数 : [{limit=10, offset=0}]
2018-06-27 00:25:12 -参数 : []
2018-06-27 00:25:12 -耗时 : 2
2018-06-27 00:25:12 -返回值 : system/regexp/regexp
2018-06-27 00:25:12 -==>  Preparing: set @mycnt = 0； select (@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-27 00:25:12 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-06-27 00:25:12 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-27 00:25:12 -SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-06-27 00:25:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-27 00:25:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 00:25:12 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-27 00:25:12 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-27 00:25:12 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-27 00:25:12 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-27 00:25:12 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?
### The error may exist in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]
### The error may involve com.bootdo.system.dao.RegexpDao.list
### The error occurred while executing a query
### SQL: set @mycnt = 0；   select   (@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp                                      order by RID desc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?
### The error may exist in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]
### The error may involve com.bootdo.system.dao.RegexpDao.list
### The error occurred while executing a query
### SQL: set @mycnt = 0；   select   (@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp                                      order by RID desc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:90)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy128.list(Unknown Source)
	at com.bootdo.system.service.impl.RegexpServiceImpl.list(RegexpServiceImpl.java:27)
	at com.bootdo.system.controller.RegexpController.list(RegexpController.java:50)
	at com.bootdo.system.controller.RegexpController$$FastClassBySpringCGLIB$$f7dc3edc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.bootdo.system.controller.RegexpController$$EnhancerBySpringCGLIB$$edb52828.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:727)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy149.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 111 common frames omitted
2018-06-27 00:25:12 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/system/regexp/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?
### The error may exist in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]
### The error may involve com.bootdo.system.dao.RegexpDao.list
### The error occurred while executing a query
### SQL: set @mycnt = 0；   select   (@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp                                      order by RID desc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?
; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, multi-statement not allow : set @mycnt = 0；
		select
		(@mycnt = @mycnt + 1) as rownum,`RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp
          
         
                order by RID desc
			 
		 
			limit ?, ?(String), null, 2018-06-27 00:25:12.51(Timestamp)
2018-06-27 00:25:12 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-27 00:25:12 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-27 00:25:12 -<==    Updates: 1
2018-06-27 00:25:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:25:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:25:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:25:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:25:12 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:26:00 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-06-27 00:26:45 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:24:51 CST 2018]; root of context hierarchy
2018-06-27 00:26:45 -Stopping beans in phase 2147483647
2018-06-27 00:26:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-27 00:26:45 -Stopping...
2018-06-27 00:26:45 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-27 00:26:45 -Stopped.
2018-06-27 00:26:45 -Unregistering JMX-exposed beans on shutdown
2018-06-27 00:26:45 -Unregistering JMX-exposed beans
2018-06-27 00:26:45 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-27 00:26:45 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-27 00:26:45 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-27 00:26:45 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-27 00:26:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-27 00:26:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-27 00:26:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-27 00:26:45 -Shutting down Quartz Scheduler
2018-06-27 00:26:45 -{dataSource-1} closed
2018-06-27 00:26:45 -Disabled session validation scheduler.
2018-06-27 00:26:47 -Starting BootdoApplication on localhost with PID 4009 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 00:26:47 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 00:26:47 -The following profiles are active: dev
2018-06-27 00:26:48 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 00:26:48 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:26:48 CST 2018]; root of context hierarchy
2018-06-27 00:26:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 00:26:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$95967404] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:26:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$87efa2ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:26:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:26:50 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:26:50 -获取名称为: com.bootdo.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 00:26:50 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:26:50 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:26:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:26:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:26:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 00:26:50 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 00:26:50 -Starting service [Tomcat]
2018-06-27 00:26:50 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 00:26:50 -Initializing Spring embedded WebApplicationContext
2018-06-27 00:26:50 -Root WebApplicationContext: initialization completed in 2969 ms
2018-06-27 00:26:51 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 00:26:51 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 00:26:51 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 00:26:51 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 00:26:51 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 00:26:51 -Filter xssFilter was not registered (disabled)
2018-06-27 00:26:51 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 00:26:51 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 00:26:51 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 00:26:51 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 00:26:51 -{dataSource-1} inited
2018-06-27 00:26:53 -ProcessEngine default created
2018-06-27 00:26:54 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:26:48 CST 2018]; root of context hierarchy
2018-06-27 00:26:54 -Using default implementation for ThreadExecutor
2018-06-27 00:26:54 -Job execution threads will use class loader of thread: main
2018-06-27 00:26:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-27 00:26:54 -Quartz Scheduler v.2.2.1 created.
2018-06-27 00:26:54 -RAMJobStore initialized.
2018-06-27 00:26:54 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-27 00:26:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-27 00:26:54 -Quartz scheduler version: 2.2.1
2018-06-27 00:26:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@fe156f4
2018-06-27 00:26:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-27 00:26:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-27 00:26:55 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-27 00:26:55 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-27 00:26:55 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-27 00:26:55 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-27 00:26:55 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-27 00:26:55 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-27 00:26:55 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-27 00:26:55 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-27 00:26:55 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-27 00:26:55 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-27 00:26:55 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-27 00:26:55 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-27 00:26:55 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 00:26:55 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-27 00:26:55 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-27 00:26:55 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-27 00:26:55 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-27 00:26:55 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-27 00:26:55 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-27 00:26:55 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-27 00:26:55 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-27 00:26:55 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-27 00:26:55 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-27 00:26:55 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-27 00:26:55 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-27 00:26:55 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 00:26:55 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-27 00:26:55 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-27 00:26:55 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-27 00:26:55 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-27 00:26:55 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-27 00:26:55 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-27 00:26:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2018-06-27 00:26:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2018-06-27 00:26:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2018-06-27 00:26:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2018-06-27 00:26:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2018-06-27 00:26:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/common/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictTypeDO> com.bootdo.common.controller.DictController.listDictType(java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/common/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.adddict()
2018-06-27 00:26:55 -Mapped "{[/common/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.savetype(com.bootdo.common.domain.DictTypeDO)
2018-06-27 00:26:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2018-06-27 00:26:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2018-06-27 00:26:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-27 00:26:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2018-06-27 00:26:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2018-06-27 00:26:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2018-06-27 00:26:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-27 00:26:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-06-27 00:26:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-27 00:26:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-27 00:26:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-06-27 00:26:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2018-06-27 00:26:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2018-06-27 00:26:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2018-06-27 00:26:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2018-06-27 00:26:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2018-06-27 00:26:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2018-06-27 00:26:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2018-06-27 00:26:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 00:26:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 00:26:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-27 00:26:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-27 00:26:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-27 00:26:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-27 00:26:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-27 00:26:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-27 00:26:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-27 00:26:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2018-06-27 00:26:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2018-06-27 00:26:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2018-06-27 00:26:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2018-06-27 00:26:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2018-06-27 00:26:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2018-06-27 00:26:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2018-06-27 00:26:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-06-27 00:26:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-06-27 00:26:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-06-27 00:26:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-06-27 00:26:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-06-27 00:26:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-06-27 00:26:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.add()
2018-06-27 00:26:55 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.remove(java.lang.String)
2018-06-27 00:26:55 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.remove(java.lang.String[])
2018-06-27 00:26:55 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.update(com.bootdo.system.domain.RegexpDO)
2018-06-27 00:26:55 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.save(com.bootdo.system.domain.RegexpDO)
2018-06-27 00:26:55 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.Regexp()
2018-06-27 00:26:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-06-27 00:26:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-06-27 00:26:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-06-27 00:26:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-06-27 00:26:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-27 00:26:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-06-27 00:26:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-06-27 00:26:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-06-27 00:26:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-27 00:26:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-06-27 00:26:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-06-27 00:26:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 00:26:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-06-27 00:26:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-06-27 00:26:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2018-06-27 00:26:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-27 00:26:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-06-27 00:26:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-06-27 00:26:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-06-27 00:26:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-27 00:26:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-06-27 00:26:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-06-27 00:26:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-27 00:26:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-27 00:26:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-27 00:26:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-27 00:26:55 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-27 00:26:55 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-27 00:26:55 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-27 00:26:56 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:26:48 CST 2018]; root of context hierarchy
2018-06-27 00:26:56 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:26:56 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:26:56 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:26:56 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-27 00:26:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 00:26:57 -

Using default security password: 32b87bc5-0d34-4028-8a4e-00f4c7485339

2018-06-27 00:26:58 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-27 00:26:58 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@12c30824, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d0e43d6, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c941d19, org.springframework.security.web.header.HeaderWriterFilter@63fde7ca, org.springframework.security.web.csrf.CsrfFilter@aca2a0b, org.springframework.security.web.authentication.logout.LogoutFilter@6f12fca0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@151f1734, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@438a65a7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@df04d12, org.springframework.security.web.session.SessionManagementFilter@1f7b1d6a, org.springframework.security.web.access.ExceptionTranslationFilter@13edc1bc]
2018-06-27 00:26:58 -Registering beans for JMX exposure on startup
2018-06-27 00:26:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 00:26:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 00:26:58 -Starting beans in phase 2147483647
2018-06-27 00:26:58 -Context refreshed
2018-06-27 00:26:58 -Found 1 custom documentation plugin(s)
2018-06-27 00:26:58 -Scanning for api listing references
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_1
2018-06-27 00:26:59 -Generating unique operation named: addUsingGET_1
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_1
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_1
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_2
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_3
2018-06-27 00:26:59 -Generating unique operation named: saveUsingPOST_1
2018-06-27 00:26:59 -Generating unique operation named: updateUsingGET_1
2018-06-27 00:26:59 -Generating unique operation named: updateUsingHEAD_1
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPOST_1
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPUT_1
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPATCH_1
2018-06-27 00:26:59 -Generating unique operation named: updateUsingDELETE_1
2018-06-27 00:26:59 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-27 00:26:59 -Generating unique operation named: updateUsingTRACE_1
2018-06-27 00:26:59 -Generating unique operation named: addUsingGET_2
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_2
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_2
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_4
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_5
2018-06-27 00:26:59 -Generating unique operation named: saveUsingPOST_2
2018-06-27 00:26:59 -Generating unique operation named: updateUsingGET_2
2018-06-27 00:26:59 -Generating unique operation named: updateUsingHEAD_2
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPOST_2
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPUT_2
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPATCH_2
2018-06-27 00:26:59 -Generating unique operation named: updateUsingDELETE_2
2018-06-27 00:26:59 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-27 00:26:59 -Generating unique operation named: updateUsingTRACE_2
2018-06-27 00:26:59 -Generating unique operation named: addUsingGET_3
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_3
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_3
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_6
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_7
2018-06-27 00:26:59 -Generating unique operation named: saveUsingPOST_3
2018-06-27 00:26:59 -Generating unique operation named: updateUsingGET_3
2018-06-27 00:26:59 -Generating unique operation named: updateUsingHEAD_3
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPOST_3
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPUT_3
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPATCH_3
2018-06-27 00:26:59 -Generating unique operation named: updateUsingDELETE_3
2018-06-27 00:26:59 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-27 00:26:59 -Generating unique operation named: updateUsingTRACE_3
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_4
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_4
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPOST_4
2018-06-27 00:26:59 -Generating unique operation named: addUsingGET_4
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_5
2018-06-27 00:26:59 -Generating unique operation named: infoUsingGET_1
2018-06-27 00:26:59 -Generating unique operation named: infoUsingHEAD_1
2018-06-27 00:26:59 -Generating unique operation named: infoUsingPOST_1
2018-06-27 00:26:59 -Generating unique operation named: infoUsingPUT_1
2018-06-27 00:26:59 -Generating unique operation named: infoUsingPATCH_1
2018-06-27 00:26:59 -Generating unique operation named: infoUsingDELETE_1
2018-06-27 00:26:59 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-27 00:26:59 -Generating unique operation named: infoUsingTRACE_1
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_5
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_8
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_9
2018-06-27 00:26:59 -Generating unique operation named: saveUsingPOST_4
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPOST_5
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_6
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_10
2018-06-27 00:26:59 -Generating unique operation named: welcomeUsingGET_1
2018-06-27 00:26:59 -Generating unique operation named: addUsingGET_5
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_6
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_7
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_11
2018-06-27 00:26:59 -Generating unique operation named: saveUsingPOST_5
2018-06-27 00:26:59 -Generating unique operation named: treeUsingGET_1
2018-06-27 00:26:59 -Generating unique operation named: treeUsingGET_2
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPOST_6
2018-06-27 00:26:59 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_7
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_8
2018-06-27 00:26:59 -Generating unique operation named: addUsingGET_6
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_8
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_9
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_12
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_13
2018-06-27 00:26:59 -Generating unique operation named: saveUsingPOST_6
2018-06-27 00:26:59 -Generating unique operation named: updateUsingGET_4
2018-06-27 00:26:59 -Generating unique operation named: updateUsingHEAD_4
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPOST_7
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPUT_4
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPATCH_4
2018-06-27 00:26:59 -Generating unique operation named: updateUsingDELETE_4
2018-06-27 00:26:59 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-27 00:26:59 -Generating unique operation named: updateUsingTRACE_4
2018-06-27 00:26:59 -Generating unique operation named: addUsingGET_7
2018-06-27 00:26:59 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-27 00:26:59 -Generating unique operation named: deployUsingPOST_1
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_10
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_14
2018-06-27 00:26:59 -Generating unique operation named: addUsingGET_8
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_9
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_11
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_15
2018-06-27 00:26:59 -Generating unique operation named: removeUsingPOST_16
2018-06-27 00:26:59 -Generating unique operation named: saveUsingPOST_7
2018-06-27 00:26:59 -Generating unique operation named: updateUsingGET_5
2018-06-27 00:26:59 -Generating unique operation named: updateUsingHEAD_5
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPOST_8
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPUT_5
2018-06-27 00:26:59 -Generating unique operation named: updateUsingPATCH_5
2018-06-27 00:26:59 -Generating unique operation named: updateUsingDELETE_5
2018-06-27 00:26:59 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-27 00:26:59 -Generating unique operation named: updateUsingTRACE_5
2018-06-27 00:26:59 -Generating unique operation named: addUsingGET_9
2018-06-27 00:26:59 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-27 00:26:59 -Generating unique operation named: editUsingGET_10
2018-06-27 00:26:59 -Generating unique operation named: listUsingGET_12
2018-06-27 00:27:00 -Generating unique operation named: saveUsingPOST_8
2018-06-27 00:27:00 -Generating unique operation named: saveUsingPOST_9
2018-06-27 00:27:00 -Generating unique operation named: updateUsingPOST_9
2018-06-27 00:27:00 -Generating unique operation named: addUsingGET_10
2018-06-27 00:27:00 -Generating unique operation named: editUsingGET_11
2018-06-27 00:27:00 -Generating unique operation named: listUsingGET_13
2018-06-27 00:27:00 -Generating unique operation named: removeUsingPOST_17
2018-06-27 00:27:00 -Generating unique operation named: removeUsingPOST_18
2018-06-27 00:27:00 -Generating unique operation named: updateUsingGET_6
2018-06-27 00:27:00 -Generating unique operation named: updateUsingHEAD_6
2018-06-27 00:27:00 -Generating unique operation named: updateUsingPOST_10
2018-06-27 00:27:00 -Generating unique operation named: updateUsingPUT_6
2018-06-27 00:27:00 -Generating unique operation named: updateUsingPATCH_6
2018-06-27 00:27:00 -Generating unique operation named: updateUsingDELETE_6
2018-06-27 00:27:00 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-27 00:27:00 -Generating unique operation named: updateUsingTRACE_6
2018-06-27 00:27:00 -Generating unique operation named: listUsingGET_14
2018-06-27 00:27:00 -Generating unique operation named: listUsingHEAD_1
2018-06-27 00:27:00 -Generating unique operation named: listUsingPOST_1
2018-06-27 00:27:00 -Generating unique operation named: listUsingPUT_1
2018-06-27 00:27:00 -Generating unique operation named: listUsingPATCH_1
2018-06-27 00:27:00 -Generating unique operation named: listUsingDELETE_1
2018-06-27 00:27:00 -Generating unique operation named: listUsingOPTIONS_1
2018-06-27 00:27:00 -Generating unique operation named: listUsingTRACE_1
2018-06-27 00:27:00 -Generating unique operation named: listUsingGET_15
2018-06-27 00:27:00 -Generating unique operation named: addUsingGET_11
2018-06-27 00:27:00 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-27 00:27:00 -Generating unique operation named: editUsingGET_12
2018-06-27 00:27:00 -Generating unique operation named: listUsingGET_16
2018-06-27 00:27:00 -Generating unique operation named: removeUsingPOST_19
2018-06-27 00:27:00 -Generating unique operation named: saveUsingPOST_10
2018-06-27 00:27:00 -Generating unique operation named: treeUsingGET_3
2018-06-27 00:27:00 -Generating unique operation named: treeViewUsingGET_1
2018-06-27 00:27:00 -Generating unique operation named: updateUsingPOST_11
2018-06-27 00:27:00 -Starting Quartz Scheduler now
2018-06-27 00:27:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-27 00:27:00 -Starting...
2018-06-27 00:27:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-27 00:27:00 -Started.
2018-06-27 00:27:00 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-27 00:27:00 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-27 00:27:00 -Using a shared selector for servlet write/read
2018-06-27 00:27:00 -Tomcat started on port(s): 8099 (http)
2018-06-27 00:27:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-27 00:27:00 -==> Parameters: 
2018-06-27 00:27:00 -<==      Total: 1
2018-06-27 00:27:00 -Started BootdoApplication in 13.504 seconds (JVM running for 14.257)
2018-06-27 00:27:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 00:27:03 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 00:27:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-06-27 00:27:03 -Enabling session validation scheduler...
2018-06-27 00:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:27:03 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-27 00:27:03 -HTTP METHOD : GET
2018-06-27 00:27:03 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 00:27:03 -HTTP METHOD : GET
2018-06-27 00:27:03 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.Regexp
2018-06-27 00:27:03 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 00:27:03 -参数 : []
2018-06-27 00:27:03 -参数 : [{limit=10, offset=0}]
2018-06-27 00:27:03 -耗时 : 2
2018-06-27 00:27:03 -返回值 : system/regexp/regexp
2018-06-27 00:27:03 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-27 00:27:03 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 00:27:03 -<==      Total: 10
2018-06-27 00:27:03 -==>  Preparing: select count(*) from sys_regexp 
2018-06-27 00:27:03 -==> Parameters: 
2018-06-27 00:27:03 -<==      Total: 1
2018-06-27 00:27:03 -耗时 : 20
2018-06-27 00:27:03 -返回值 : com.bootdo.common.utils.PageUtils@2cb5aa00
2018-06-27 00:27:03 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-27 00:27:03 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-27 00:27:03 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-27 00:27:03 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-27 00:27:03 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-27 00:27:03 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-27 00:27:03 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-27 00:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:27:03 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 00:27:55 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2018-06-27 09:11:04 -请求地址 : http://127.0.0.1:8099/login;JSESSIONID=af8ae71d-a166-40f4-a9c0-d99ca3759e6b
2018-06-27 09:11:04 -HTTP METHOD : GET
2018-06-27 09:11:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-06-27 09:11:04 -参数 : []
2018-06-27 09:11:04 -耗时 : 4
2018-06-27 09:11:04 -返回值 : login
2018-06-27 09:11:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-27 09:11:06 -==> Parameters: admin(String)
2018-06-27 09:11:06 -<==      Total: 1
2018-06-27 09:11:06 -请求地址 : http://127.0.0.1:8099/login
2018-06-27 09:11:06 -HTTP METHOD : POST
2018-06-27 09:11:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-06-27 09:11:06 -参数 : [admin, 111111]
2018-06-27 09:11:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-27 09:11:06 -==> Parameters: admin(String)
2018-06-27 09:11:06 -<==      Total: 1
2018-06-27 09:11:06 -耗时 : 19
2018-06-27 09:11:06 -返回值 : {msg=操作成功, code=0}
2018-06-27 09:11:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-27 09:11:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 09:11:06 -==> Parameters: 1(Long), admin(String), 登录(String), 19(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-27 09:11:06.366(Timestamp)
2018-06-27 09:11:06 -<==    Updates: 1
2018-06-27 09:11:06 -请求地址 : http://127.0.0.1:8099/index
2018-06-27 09:11:06 -HTTP METHOD : GET
2018-06-27 09:11:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-06-27 09:11:06 -参数 : [{}]
2018-06-27 09:11:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-27 09:11:06 -==> Parameters: 1(Long)
2018-06-27 09:11:06 -<==      Total: 29
2018-06-27 09:11:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-27 09:11:06 -==> Parameters: 138(Long)
2018-06-27 09:11:06 -<==      Total: 1
2018-06-27 09:11:06 -耗时 : 47
2018-06-27 09:11:06 -返回值 : index_v1
2018-06-27 09:11:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 09:11:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 47(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-27 09:11:06.504(Timestamp)
2018-06-27 09:11:06 -<==    Updates: 1
2018-06-27 09:11:06 -请求地址 : http://127.0.0.1:8099/main
2018-06-27 09:11:06 -HTTP METHOD : GET
2018-06-27 09:11:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-06-27 09:11:06 -参数 : []
2018-06-27 09:11:06 -耗时 : 0
2018-06-27 09:11:06 -返回值 : main
2018-06-27 09:11:06 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-27 09:11:06 -HTTP METHOD : GET
2018-06-27 09:11:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-27 09:11:06 -参数 : []
2018-06-27 09:11:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-27 09:11:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-27 09:11:06 -<==      Total: 0
2018-06-27 09:11:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-27 09:11:06 -==> Parameters: 1(Long), 0(String)
2018-06-27 09:11:06 -<==      Total: 1
2018-06-27 09:11:06 -耗时 : 14
2018-06-27 09:11:06 -返回值 : com.bootdo.common.utils.PageUtils@7c25e653
2018-06-27 09:11:06 -请求地址 : http://127.0.0.1:8099/main
2018-06-27 09:11:06 -HTTP METHOD : GET
2018-06-27 09:11:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-06-27 09:11:06 -参数 : []
2018-06-27 09:11:06 -耗时 : 1
2018-06-27 09:11:06 -返回值 : main
2018-06-27 09:11:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 09:11:10 -==> Parameters: 1(Long), admin(String), error(String), null, http://127.0.0.1:8099/index(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2018-06-27 09:11:10.639(Timestamp)
2018-06-27 09:11:10 -<==    Updates: 1
2018-06-27 09:11:10 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-27 09:11:12 -请求地址 : http://127.0.0.1:8099/
2018-06-27 09:11:12 -HTTP METHOD : GET
2018-06-27 09:11:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-06-27 09:11:12 -参数 : [{}]
2018-06-27 09:11:12 -耗时 : 0
2018-06-27 09:11:12 -返回值 : redirect:/blog
2018-06-27 09:11:12 -请求地址 : http://127.0.0.1:8099/blog
2018-06-27 09:11:12 -HTTP METHOD : GET
2018-06-27 09:11:12 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-27 09:11:12 -参数 : []
2018-06-27 09:11:12 -耗时 : 0
2018-06-27 09:11:12 -返回值 : blog/index/main
2018-06-27 09:11:12 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-27 09:11:12 -HTTP METHOD : GET
2018-06-27 09:11:12 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-27 09:11:12 -参数 : [{type=article, limit=10, offset=0}]
2018-06-27 09:11:12 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-27 09:11:12 -==> Parameters: article(String)
2018-06-27 09:11:12 -<==      Total: 10
2018-06-27 09:11:12 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-27 09:11:12 -==> Parameters: article(String)
2018-06-27 09:11:12 -<==      Total: 1
2018-06-27 09:11:12 -耗时 : 44
2018-06-27 09:11:12 -返回值 : com.bootdo.common.utils.PageUtils@7dbde083
2018-06-27 09:11:14 -请求地址 : http://127.0.0.1:8099/login
2018-06-27 09:11:14 -HTTP METHOD : GET
2018-06-27 09:11:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-06-27 09:11:14 -参数 : []
2018-06-27 09:11:14 -耗时 : 0
2018-06-27 09:11:14 -返回值 : login
2018-06-27 09:11:19 -请求地址 : http://127.0.0.1:8099/login
2018-06-27 09:11:19 -HTTP METHOD : POST
2018-06-27 09:11:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-06-27 09:11:19 -参数 : [admin, 111111]
2018-06-27 09:11:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-27 09:11:19 -==> Parameters: admin(String)
2018-06-27 09:11:19 -<==      Total: 1
2018-06-27 09:11:19 -耗时 : 7
2018-06-27 09:11:19 -返回值 : {msg=操作成功, code=0}
2018-06-27 09:11:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 09:11:19 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-27 09:11:19.913(Timestamp)
2018-06-27 09:11:19 -<==    Updates: 1
2018-06-27 09:11:19 -请求地址 : http://127.0.0.1:8099/index
2018-06-27 09:11:19 -HTTP METHOD : GET
2018-06-27 09:11:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-06-27 09:11:19 -参数 : [{}]
2018-06-27 09:11:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-27 09:11:19 -==> Parameters: 1(Long)
2018-06-27 09:11:19 -<==      Total: 29
2018-06-27 09:11:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-27 09:11:19 -==> Parameters: 138(Long)
2018-06-27 09:11:19 -<==      Total: 1
2018-06-27 09:11:19 -耗时 : 13
2018-06-27 09:11:19 -返回值 : index_v1
2018-06-27 09:11:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 09:11:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-27 09:11:19.946(Timestamp)
2018-06-27 09:11:19 -<==    Updates: 1
2018-06-27 09:11:19 -请求地址 : http://127.0.0.1:8099/main
2018-06-27 09:11:19 -HTTP METHOD : GET
2018-06-27 09:11:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-06-27 09:11:19 -参数 : []
2018-06-27 09:11:19 -耗时 : 0
2018-06-27 09:11:19 -返回值 : main
2018-06-27 09:11:20 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-27 09:11:20 -HTTP METHOD : GET
2018-06-27 09:11:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-27 09:11:20 -参数 : []
2018-06-27 09:11:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-27 09:11:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-27 09:11:20 -<==      Total: 0
2018-06-27 09:11:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-27 09:11:20 -==> Parameters: 1(Long), 0(String)
2018-06-27 09:11:20 -<==      Total: 1
2018-06-27 09:11:20 -耗时 : 7
2018-06-27 09:11:20 -返回值 : com.bootdo.common.utils.PageUtils@293a5625
2018-06-27 09:11:20 -请求地址 : http://127.0.0.1:8099/main
2018-06-27 09:11:20 -HTTP METHOD : GET
2018-06-27 09:11:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-06-27 09:11:20 -参数 : []
2018-06-27 09:11:20 -耗时 : 0
2018-06-27 09:11:20 -返回值 : main
2018-06-27 09:19:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:19:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2018-06-27 09:19:29 -==> Parameters: 1(Long)
2018-06-27 09:19:29 -<==      Total: 51
2018-06-27 09:19:29 -根据key从存储 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:19:29 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-27 09:19:29 -HTTP METHOD : GET
2018-06-27 09:19:29 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.Regexp
2018-06-27 09:19:29 -参数 : []
2018-06-27 09:19:29 -耗时 : 1
2018-06-27 09:19:29 -返回值 : system/regexp/regexp
2018-06-27 09:19:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:19:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:19:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:19:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:19:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:19:29 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:19:29 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 09:19:29 -HTTP METHOD : GET
2018-06-27 09:19:29 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 09:19:29 -参数 : [{limit=10, offset=0}]
2018-06-27 09:19:29 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-27 09:19:29 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:19:29 -<==      Total: 10
2018-06-27 09:19:29 -==>  Preparing: select count(*) from sys_regexp 
2018-06-27 09:19:29 -==> Parameters: 
2018-06-27 09:19:29 -<==      Total: 1
2018-06-27 09:19:29 -耗时 : 8
2018-06-27 09:19:29 -返回值 : com.bootdo.common.utils.PageUtils@26a3416e
2018-06-27 09:19:53 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:19:53 -请求地址 : http://127.0.0.1:8099/system/regexp/edit/34567890-45678978
2018-06-27 09:19:53 -HTTP METHOD : GET
2018-06-27 09:19:53 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.edit
2018-06-27 09:19:53 -参数 : [34567890-45678978, {}]
2018-06-27 09:19:53 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp where RID = ? 
2018-06-27 09:19:53 -==> Parameters: 34567890-45678978(String)
2018-06-27 09:19:53 -<==      Total: 1
2018-06-27 09:19:53 -耗时 : 3
2018-06-27 09:19:53 -返回值 : system/regexp/edit
2018-06-27 09:26:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:26:47 -请求地址 : http://127.0.0.1:8099/sys/user/
2018-06-27 09:26:47 -HTTP METHOD : GET
2018-06-27 09:26:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2018-06-27 09:26:47 -参数 : [{}]
2018-06-27 09:26:47 -耗时 : 0
2018-06-27 09:26:47 -返回值 : system/user/user
2018-06-27 09:26:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:26:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:26:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:26:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:26:47 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:26:48 -请求地址 : http://127.0.0.1:8099/system/sysDept/tree
2018-06-27 09:26:48 -HTTP METHOD : GET
2018-06-27 09:26:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2018-06-27 09:26:48 -参数 : []
2018-06-27 09:26:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-27 09:26:48 -==> Parameters: 
2018-06-27 09:26:48 -<==      Total: 10
2018-06-27 09:26:48 -耗时 : 7
2018-06-27 09:26:48 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2018-06-27 09:26:48 -请求地址 : http://127.0.0.1:8099/sys/user/list
2018-06-27 09:26:48 -HTTP METHOD : GET
2018-06-27 09:26:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-06-27 09:26:48 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-27 09:26:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-27 09:26:48 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:26:48 -<==      Total: 10
2018-06-27 09:26:48 -==>  Preparing: select count(*) from sys_user 
2018-06-27 09:26:48 -==> Parameters: 
2018-06-27 09:26:48 -<==      Total: 1
2018-06-27 09:26:48 -耗时 : 12
2018-06-27 09:26:48 -返回值 : com.bootdo.common.utils.PageUtils@f8f4ec4
2018-06-27 09:26:52 -请求地址 : http://127.0.0.1:8099/sys/user/list
2018-06-27 09:26:52 -HTTP METHOD : GET
2018-06-27 09:26:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-06-27 09:26:52 -参数 : [{limit=10, offset=0, name=boot, deptId=}]
2018-06-27 09:26:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE name = ? order by user_id desc limit ?, ? 
2018-06-27 09:26:52 -==> Parameters: boot(String), 0(Integer), 10(Integer)
2018-06-27 09:26:52 -<==      Total: 0
2018-06-27 09:26:52 -==>  Preparing: select count(*) from sys_user WHERE name = ? 
2018-06-27 09:26:52 -==> Parameters: boot(String)
2018-06-27 09:26:52 -<==      Total: 1
2018-06-27 09:26:52 -耗时 : 7
2018-06-27 09:26:52 -返回值 : com.bootdo.common.utils.PageUtils@3baca7b2
2018-06-27 09:26:56 -请求地址 : http://127.0.0.1:8099/sys/user/list
2018-06-27 09:26:56 -HTTP METHOD : GET
2018-06-27 09:26:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-06-27 09:26:56 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-27 09:26:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-27 09:26:56 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:26:56 -<==      Total: 10
2018-06-27 09:26:56 -==>  Preparing: select count(*) from sys_user 
2018-06-27 09:26:56 -==> Parameters: 
2018-06-27 09:26:56 -<==      Total: 1
2018-06-27 09:26:56 -耗时 : 10
2018-06-27 09:26:56 -返回值 : com.bootdo.common.utils.PageUtils@1020fbe8
2018-06-27 09:27:05 -请求地址 : http://127.0.0.1:8099/sys/user/list
2018-06-27 09:27:05 -HTTP METHOD : GET
2018-06-27 09:27:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-06-27 09:27:05 -参数 : [{limit=10, offset=0, name=王, deptId=}]
2018-06-27 09:27:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE name = ? order by user_id desc limit ?, ? 
2018-06-27 09:27:05 -==> Parameters: 王(String), 0(Integer), 10(Integer)
2018-06-27 09:27:05 -<==      Total: 0
2018-06-27 09:27:05 -==>  Preparing: select count(*) from sys_user WHERE name = ? 
2018-06-27 09:27:05 -==> Parameters: 王(String)
2018-06-27 09:27:05 -<==      Total: 1
2018-06-27 09:27:05 -耗时 : 7
2018-06-27 09:27:05 -返回值 : com.bootdo.common.utils.PageUtils@293db7ae
2018-06-27 09:28:28 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 251]
2018-06-27 09:28:39 -请求地址 : http://127.0.0.1:8099/sys/user/list
2018-06-27 09:28:39 -HTTP METHOD : GET
2018-06-27 09:28:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-06-27 09:28:39 -参数 : [{limit=10, offset=0, name=, deptId=8}]
2018-06-27 09:28:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE dept_id = ? order by user_id desc limit ?, ? 
2018-06-27 09:28:39 -==> Parameters: 8(String), 0(Integer), 10(Integer)
2018-06-27 09:28:39 -<==      Total: 1
2018-06-27 09:28:39 -==>  Preparing: select count(*) from sys_user WHERE dept_id = ? 
2018-06-27 09:28:39 -==> Parameters: 8(String)
2018-06-27 09:28:39 -<==      Total: 1
2018-06-27 09:28:39 -耗时 : 9
2018-06-27 09:28:39 -返回值 : com.bootdo.common.utils.PageUtils@7395f960
2018-06-27 09:28:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:28:45 -请求地址 : http://127.0.0.1:8099/sys/user/resetPwd/134
2018-06-27 09:28:45 -HTTP METHOD : GET
2018-06-27 09:28:45 -CLASS_METHOD : com.bootdo.system.controller.UserController.resetPwd
2018-06-27 09:28:45 -参数 : [134, {}]
2018-06-27 09:28:45 -耗时 : 0
2018-06-27 09:28:45 -返回值 : system/user/reset_pwd
2018-06-27 09:28:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 09:28:45 -==> Parameters: 1(Long), admin(String), 请求更改用户密码(String), 0(Integer), com.bootdo.system.controller.UserController.resetPwd()(String), null, 127.0.0.1(String), 2018-06-27 09:28:45.661(Timestamp)
2018-06-27 09:28:45 -<==    Updates: 1
2018-06-27 09:28:57 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:28:57 -请求地址 : http://127.0.0.1:8099/sys/user/adminResetPwd
2018-06-27 09:28:57 -HTTP METHOD : POST
2018-06-27 09:28:57 -CLASS_METHOD : com.bootdo.system.controller.UserController.adminResetPwd
2018-06-27 09:28:57 -参数 : [com.bootdo.system.vo.UserVO@67f4ff61]
2018-06-27 09:28:57 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-06-27 09:28:57 -==> Parameters: 134(Long)
2018-06-27 09:28:57 -<==      Total: 2
2018-06-27 09:28:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-27 09:28:57 -==> Parameters: 134(Long)
2018-06-27 09:28:57 -<==      Total: 1
2018-06-27 09:28:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-06-27 09:28:57 -==> Parameters: 8(Long)
2018-06-27 09:28:57 -<==      Total: 1
2018-06-27 09:28:57 -==>  Preparing: update sys_user SET `username` = ?, `name` = ?, `password` = ?, `dept_id` = ?, `email` = ?, `status` = ? where user_id = ? 
2018-06-27 09:28:57 -==> Parameters: lyh(String), 李彦宏(String), 3d5a46d4bcfcb18281526554bf65b495(String), 8(Long), lyh@bootdo.com(String), 1(Integer), 134(Long)
2018-06-27 09:28:57 -<==    Updates: 1
2018-06-27 09:28:57 -耗时 : 19
2018-06-27 09:28:57 -返回值 : {msg=操作成功, code=0}
2018-06-27 09:28:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 09:28:57 -==> Parameters: 1(Long), admin(String), admin提交更改用户密码(String), 19(Integer), com.bootdo.system.controller.UserController.adminResetPwd()(String), null, 127.0.0.1(String), 2018-06-27 09:28:57.075(Timestamp)
2018-06-27 09:28:57 -<==    Updates: 1
2018-06-27 09:28:57 -请求地址 : http://127.0.0.1:8099/sys/user/list
2018-06-27 09:28:57 -HTTP METHOD : GET
2018-06-27 09:28:57 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2018-06-27 09:28:57 -参数 : [{limit=10, offset=0, name=, deptId=}]
2018-06-27 09:28:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2018-06-27 09:28:57 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:28:57 -<==      Total: 10
2018-06-27 09:28:57 -==>  Preparing: select count(*) from sys_user 
2018-06-27 09:28:57 -==> Parameters: 
2018-06-27 09:28:57 -<==      Total: 1
2018-06-27 09:28:57 -耗时 : 7
2018-06-27 09:28:57 -返回值 : com.bootdo.common.utils.PageUtils@7b7547c
2018-06-27 09:29:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:29:08 -请求地址 : http://127.0.0.1:8099/system/sysDept
2018-06-27 09:29:08 -HTTP METHOD : GET
2018-06-27 09:29:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.dept
2018-06-27 09:29:08 -参数 : []
2018-06-27 09:29:08 -耗时 : 1
2018-06-27 09:29:08 -返回值 : system/dept/dept
2018-06-27 09:29:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:29:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:29:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:29:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:29:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:29:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:29:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:29:08 -请求地址 : http://127.0.0.1:8099/system/sysDept/list
2018-06-27 09:29:08 -HTTP METHOD : GET
2018-06-27 09:29:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2018-06-27 09:29:08 -参数 : []
2018-06-27 09:29:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2018-06-27 09:29:08 -==> Parameters: 
2018-06-27 09:29:08 -<==      Total: 10
2018-06-27 09:29:08 -耗时 : 4
2018-06-27 09:29:08 -返回值 : [DeptDO{deptId=15, parentId=13, name='测试二部', orderNum=2, delFlag=1}, DeptDO{deptId=14, parentId=13, name='测试一部', orderNum=1, delFlag=1}, DeptDO{deptId=13, parentId=0, name='测试部', orderNum=5, delFlag=1}, DeptDO{deptId=12, parentId=11, name='产品一部', orderNum=1, delFlag=1}, DeptDO{deptId=11, parentId=0, name='产品部', orderNum=3, delFlag=1}, DeptDO{deptId=10, parentId=9, name='销售一部', orderNum=1, delFlag=1}, DeptDO{deptId=9, parentId=0, name='销售部', orderNum=2, delFlag=1}, DeptDO{deptId=8, parentId=6, name='研发二部', orderNum=2, delFlag=1}, DeptDO{deptId=7, parentId=6, name='研發一部', orderNum=1, delFlag=1}, DeptDO{deptId=6, parentId=0, name='研发部', orderNum=1, delFlag=1}]
2018-06-27 09:34:58 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 00:26:48 CST 2018]; root of context hierarchy
2018-06-27 09:34:58 -Stopping beans in phase 2147483647
2018-06-27 09:34:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-27 09:34:58 -Stopping...
2018-06-27 09:34:58 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-27 09:34:58 -Stopped.
2018-06-27 09:34:58 -Unregistering JMX-exposed beans on shutdown
2018-06-27 09:34:58 -Unregistering JMX-exposed beans
2018-06-27 09:34:58 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-27 09:34:58 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-27 09:34:58 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-27 09:34:58 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-27 09:34:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-27 09:34:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-27 09:34:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-27 09:34:58 -Shutting down Quartz Scheduler
2018-06-27 09:34:58 -{dataSource-1} closed
2018-06-27 09:34:58 -Disabled session validation scheduler.
2018-06-27 09:35:04 -Starting BootdoApplication on localhost with PID 4401 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 09:35:04 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 09:35:04 -The following profiles are active: dev
2018-06-27 09:35:05 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@15bbf42f: startup date [Wed Jun 27 09:35:05 CST 2018]; root of context hierarchy
2018-06-27 09:35:05 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 09:35:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 09:35:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$59a7e9a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 09:35:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4c01184c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 09:35:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 09:35:07 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 09:35:07 -获取名称为: com.bootdo.system.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 09:35:07 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 09:35:07 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 09:35:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 09:35:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 09:35:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 09:35:07 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 09:35:07 -Starting service [Tomcat]
2018-06-27 09:35:07 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 09:35:07 -Initializing Spring embedded WebApplicationContext
2018-06-27 09:35:07 -Root WebApplicationContext: initialization completed in 2720 ms
2018-06-27 09:35:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 09:35:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 09:35:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 09:35:08 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 09:35:08 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 09:35:08 -Filter xssFilter was not registered (disabled)
2018-06-27 09:35:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 09:35:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 09:35:08 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 09:35:08 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 09:35:08 -{dataSource-1} inited
2018-06-27 09:35:10 -ProcessEngine default created
2018-06-27 09:35:10 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@15bbf42f: startup date [Wed Jun 27 09:35:05 CST 2018]; root of context hierarchy
2018-06-27 09:35:10 -Using default implementation for ThreadExecutor
2018-06-27 09:35:10 -Job execution threads will use class loader of thread: main
2018-06-27 09:35:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-27 09:35:10 -Quartz Scheduler v.2.2.1 created.
2018-06-27 09:35:10 -RAMJobStore initialized.
2018-06-27 09:35:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-06-27 09:35:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2018-06-27 09:35:10 -Quartz scheduler version: 2.2.1
2018-06-27 09:35:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6eabe718
2018-06-27 09:35:11 -Initializing ExecutorService  'clientInboundChannelExecutor'
2018-06-27 09:35:11 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2018-06-27 09:35:11 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2018-06-27 09:35:11 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2018-06-27 09:35:11 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2018-06-27 09:35:11 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2018-06-27 09:35:11 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2018-06-27 09:35:11 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2018-06-27 09:35:11 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2018-06-27 09:35:11 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2018-06-27 09:35:11 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2018-06-27 09:35:11 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-06-27 09:35:11 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2018-06-27 09:35:11 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2018-06-27 09:35:11 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2018-06-27 09:35:11 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2018-06-27 09:35:11 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2018-06-27 09:35:11 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2018-06-27 09:35:11 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 09:35:12 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2018-06-27 09:35:12 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2018-06-27 09:35:12 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2018-06-27 09:35:12 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2018-06-27 09:35:12 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2018-06-27 09:35:12 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2018-06-27 09:35:12 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2018-06-27 09:35:12 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2018-06-27 09:35:12 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-27 09:35:12 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2018-06-27 09:35:12 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2018-06-27 09:35:12 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-06-27 09:35:12 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2018-06-27 09:35:12 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2018-06-27 09:35:12 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-27 09:35:12 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2018-06-27 09:35:12 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2018-06-27 09:35:12 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2018-06-27 09:35:12 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2018-06-27 09:35:12 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2018-06-27 09:35:12 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2018-06-27 09:35:12 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2018-06-27 09:35:12 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2018-06-27 09:35:12 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2018-06-27 09:35:12 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2018-06-27 09:35:12 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2018-06-27 09:35:12 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2018-06-27 09:35:12 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2018-06-27 09:35:12 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2018-06-27 09:35:12 -Mapped "{[/common/dict/dicttype],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictTypeDO> com.bootdo.common.controller.DictController.listDictType(java.lang.String)
2018-06-27 09:35:12 -Mapped "{[/common/dict/addtype],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.adddict()
2018-06-27 09:35:12 -Mapped "{[/common/dict/savetype],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.savetype(com.bootdo.common.domain.DictTypeDO)
2018-06-27 09:35:12 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2018-06-27 09:35:12 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2018-06-27 09:35:12 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2018-06-27 09:35:12 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2018-06-27 09:35:12 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2018-06-27 09:35:12 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2018-06-27 09:35:12 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2018-06-27 09:35:12 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-27 09:35:12 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2018-06-27 09:35:12 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2018-06-27 09:35:12 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2018-06-27 09:35:12 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2018-06-27 09:35:12 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2018-06-27 09:35:12 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2018-06-27 09:35:12 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2018-06-27 09:35:12 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2018-06-27 09:35:12 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2018-06-27 09:35:12 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2018-06-27 09:35:12 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 09:35:12 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-27 09:35:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2018-06-27 09:35:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2018-06-27 09:35:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2018-06-27 09:35:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2018-06-27 09:35:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2018-06-27 09:35:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2018-06-27 09:35:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2018-06-27 09:35:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2018-06-27 09:35:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2018-06-27 09:35:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2018-06-27 09:35:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2018-06-27 09:35:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2018-06-27 09:35:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2018-06-27 09:35:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2018-06-27 09:35:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2018-06-27 09:35:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2018-06-27 09:35:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2018-06-27 09:35:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2018-06-27 09:35:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2018-06-27 09:35:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2018-06-27 09:35:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2018-06-27 09:35:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/system/regexp/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.add()
2018-06-27 09:35:12 -Mapped "{[/system/regexp/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.remove(java.lang.String)
2018-06-27 09:35:12 -Mapped "{[/system/regexp/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.remove(java.lang.String[])
2018-06-27 09:35:12 -Mapped "{[/system/regexp/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.update(com.bootdo.system.domain.RegexpDO)
2018-06-27 09:35:12 -Mapped "{[/system/regexp/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.RegexpController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/system/regexp/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.RegexpController.save(com.bootdo.system.domain.RegexpDO)
2018-06-27 09:35:12 -Mapped "{[/system/regexp],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.Regexp()
2018-06-27 09:35:12 -Mapped "{[/system/regexp/edit/{rid}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RegexpController.edit(java.lang.String,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2018-06-27 09:35:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2018-06-27 09:35:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2018-06-27 09:35:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2018-06-27 09:35:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2018-06-27 09:35:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2018-06-27 09:35:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2018-06-27 09:35:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2018-06-27 09:35:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2018-06-27 09:35:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2018-06-27 09:35:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2018-06-27 09:35:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-06-27 09:35:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2018-06-27 09:35:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2018-06-27 09:35:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2018-06-27 09:35:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2018-06-27 09:35:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2018-06-27 09:35:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2018-06-27 09:35:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2018-06-27 09:35:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2018-06-27 09:35:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-27 09:35:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2018-06-27 09:35:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-06-27 09:35:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-06-27 09:35:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-06-27 09:35:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-06-27 09:35:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2018-06-27 09:35:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2018-06-27 09:35:12 -Initializing ExecutorService  'brokerChannelExecutor'
2018-06-27 09:35:12 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@15bbf42f: startup date [Wed Jun 27 09:35:05 CST 2018]; root of context hierarchy
2018-06-27 09:35:12 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 09:35:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 09:35:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 09:35:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2018-06-27 09:35:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-27 09:35:14 -

Using default security password: 0a1abf86-625c-4d02-b7d1-16a004b872e1

2018-06-27 09:35:14 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2018-06-27 09:35:14 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@19d76106, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f87780b, org.springframework.security.web.context.SecurityContextPersistenceFilter@338270ea, org.springframework.security.web.header.HeaderWriterFilter@2524d07a, org.springframework.security.web.csrf.CsrfFilter@430106cf, org.springframework.security.web.authentication.logout.LogoutFilter@4d0b276e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c79d093, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a587e84, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ba318c2, org.springframework.security.web.session.SessionManagementFilter@5badeda0, org.springframework.security.web.access.ExceptionTranslationFilter@608eb42e]
2018-06-27 09:35:14 -Registering beans for JMX exposure on startup
2018-06-27 09:35:14 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-06-27 09:35:14 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-06-27 09:35:14 -Starting beans in phase 2147483647
2018-06-27 09:35:14 -Context refreshed
2018-06-27 09:35:14 -Found 1 custom documentation plugin(s)
2018-06-27 09:35:14 -Scanning for api listing references
2018-06-27 09:35:14 -Generating unique operation named: removeUsingPOST_1
2018-06-27 09:35:14 -Generating unique operation named: addUsingGET_1
2018-06-27 09:35:14 -Generating unique operation named: editUsingGET_1
2018-06-27 09:35:14 -Generating unique operation named: listUsingGET_1
2018-06-27 09:35:14 -Generating unique operation named: removeUsingPOST_2
2018-06-27 09:35:14 -Generating unique operation named: removeUsingPOST_3
2018-06-27 09:35:14 -Generating unique operation named: saveUsingPOST_1
2018-06-27 09:35:14 -Generating unique operation named: updateUsingGET_1
2018-06-27 09:35:14 -Generating unique operation named: updateUsingHEAD_1
2018-06-27 09:35:14 -Generating unique operation named: updateUsingPOST_1
2018-06-27 09:35:14 -Generating unique operation named: updateUsingPUT_1
2018-06-27 09:35:14 -Generating unique operation named: updateUsingPATCH_1
2018-06-27 09:35:14 -Generating unique operation named: updateUsingDELETE_1
2018-06-27 09:35:14 -Generating unique operation named: updateUsingOPTIONS_1
2018-06-27 09:35:14 -Generating unique operation named: updateUsingTRACE_1
2018-06-27 09:35:14 -Generating unique operation named: addUsingGET_2
2018-06-27 09:35:14 -Generating unique operation named: editUsingGET_2
2018-06-27 09:35:14 -Generating unique operation named: listUsingGET_2
2018-06-27 09:35:14 -Generating unique operation named: removeUsingPOST_4
2018-06-27 09:35:14 -Generating unique operation named: removeUsingPOST_5
2018-06-27 09:35:14 -Generating unique operation named: saveUsingPOST_2
2018-06-27 09:35:14 -Generating unique operation named: updateUsingGET_2
2018-06-27 09:35:14 -Generating unique operation named: updateUsingHEAD_2
2018-06-27 09:35:14 -Generating unique operation named: updateUsingPOST_2
2018-06-27 09:35:14 -Generating unique operation named: updateUsingPUT_2
2018-06-27 09:35:14 -Generating unique operation named: updateUsingPATCH_2
2018-06-27 09:35:14 -Generating unique operation named: updateUsingDELETE_2
2018-06-27 09:35:14 -Generating unique operation named: updateUsingOPTIONS_2
2018-06-27 09:35:14 -Generating unique operation named: updateUsingTRACE_2
2018-06-27 09:35:14 -Generating unique operation named: addUsingGET_3
2018-06-27 09:35:14 -Generating unique operation named: editUsingGET_3
2018-06-27 09:35:14 -Generating unique operation named: listUsingGET_3
2018-06-27 09:35:14 -Generating unique operation named: removeUsingPOST_6
2018-06-27 09:35:14 -Generating unique operation named: removeUsingPOST_7
2018-06-27 09:35:14 -Generating unique operation named: saveUsingPOST_3
2018-06-27 09:35:14 -Generating unique operation named: updateUsingGET_3
2018-06-27 09:35:14 -Generating unique operation named: updateUsingHEAD_3
2018-06-27 09:35:14 -Generating unique operation named: updateUsingPOST_3
2018-06-27 09:35:14 -Generating unique operation named: updateUsingPUT_3
2018-06-27 09:35:14 -Generating unique operation named: updateUsingPATCH_3
2018-06-27 09:35:14 -Generating unique operation named: updateUsingDELETE_3
2018-06-27 09:35:14 -Generating unique operation named: updateUsingOPTIONS_3
2018-06-27 09:35:14 -Generating unique operation named: updateUsingTRACE_3
2018-06-27 09:35:15 -Generating unique operation named: editUsingGET_4
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_4
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPOST_4
2018-06-27 09:35:15 -Generating unique operation named: addUsingGET_4
2018-06-27 09:35:15 -Generating unique operation named: editUsingGET_5
2018-06-27 09:35:15 -Generating unique operation named: infoUsingGET_1
2018-06-27 09:35:15 -Generating unique operation named: infoUsingHEAD_1
2018-06-27 09:35:15 -Generating unique operation named: infoUsingPOST_1
2018-06-27 09:35:15 -Generating unique operation named: infoUsingPUT_1
2018-06-27 09:35:15 -Generating unique operation named: infoUsingPATCH_1
2018-06-27 09:35:15 -Generating unique operation named: infoUsingDELETE_1
2018-06-27 09:35:15 -Generating unique operation named: infoUsingOPTIONS_1
2018-06-27 09:35:15 -Generating unique operation named: infoUsingTRACE_1
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_5
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_8
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_9
2018-06-27 09:35:15 -Generating unique operation named: saveUsingPOST_4
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPOST_5
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_6
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_10
2018-06-27 09:35:15 -Generating unique operation named: welcomeUsingGET_1
2018-06-27 09:35:15 -Generating unique operation named: addUsingGET_5
2018-06-27 09:35:15 -Generating unique operation named: editUsingGET_6
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_7
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_11
2018-06-27 09:35:15 -Generating unique operation named: saveUsingPOST_5
2018-06-27 09:35:15 -Generating unique operation named: treeUsingGET_1
2018-06-27 09:35:15 -Generating unique operation named: treeUsingGET_2
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPOST_6
2018-06-27 09:35:15 -Generating unique operation named: batchRemoveUsingPOST_1
2018-06-27 09:35:15 -Generating unique operation named: editUsingGET_7
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_8
2018-06-27 09:35:15 -Generating unique operation named: addUsingGET_6
2018-06-27 09:35:15 -Generating unique operation named: editUsingGET_8
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_9
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_12
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_13
2018-06-27 09:35:15 -Generating unique operation named: saveUsingPOST_6
2018-06-27 09:35:15 -Generating unique operation named: updateUsingGET_4
2018-06-27 09:35:15 -Generating unique operation named: updateUsingHEAD_4
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPOST_7
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPUT_4
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPATCH_4
2018-06-27 09:35:15 -Generating unique operation named: updateUsingDELETE_4
2018-06-27 09:35:15 -Generating unique operation named: updateUsingOPTIONS_4
2018-06-27 09:35:15 -Generating unique operation named: updateUsingTRACE_4
2018-06-27 09:35:15 -Generating unique operation named: addUsingGET_7
2018-06-27 09:35:15 -Generating unique operation named: batchRemoveUsingPOST_2
2018-06-27 09:35:15 -Generating unique operation named: deployUsingPOST_1
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_10
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_14
2018-06-27 09:35:15 -Generating unique operation named: addUsingGET_8
2018-06-27 09:35:15 -Generating unique operation named: editUsingGET_9
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_11
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_15
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_16
2018-06-27 09:35:15 -Generating unique operation named: saveUsingPOST_7
2018-06-27 09:35:15 -Generating unique operation named: updateUsingGET_5
2018-06-27 09:35:15 -Generating unique operation named: updateUsingHEAD_5
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPOST_8
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPUT_5
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPATCH_5
2018-06-27 09:35:15 -Generating unique operation named: updateUsingDELETE_5
2018-06-27 09:35:15 -Generating unique operation named: updateUsingOPTIONS_5
2018-06-27 09:35:15 -Generating unique operation named: updateUsingTRACE_5
2018-06-27 09:35:15 -Generating unique operation named: addUsingGET_9
2018-06-27 09:35:15 -Generating unique operation named: batchRemoveUsingPOST_3
2018-06-27 09:35:15 -Generating unique operation named: editUsingGET_10
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_12
2018-06-27 09:35:15 -Generating unique operation named: saveUsingPOST_8
2018-06-27 09:35:15 -Generating unique operation named: saveUsingPOST_9
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPOST_9
2018-06-27 09:35:15 -Generating unique operation named: addUsingGET_10
2018-06-27 09:35:15 -Generating unique operation named: editUsingGET_11
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_13
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_17
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_18
2018-06-27 09:35:15 -Generating unique operation named: updateUsingGET_6
2018-06-27 09:35:15 -Generating unique operation named: updateUsingHEAD_6
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPOST_10
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPUT_6
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPATCH_6
2018-06-27 09:35:15 -Generating unique operation named: updateUsingDELETE_6
2018-06-27 09:35:15 -Generating unique operation named: updateUsingOPTIONS_6
2018-06-27 09:35:15 -Generating unique operation named: updateUsingTRACE_6
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_14
2018-06-27 09:35:15 -Generating unique operation named: listUsingHEAD_1
2018-06-27 09:35:15 -Generating unique operation named: listUsingPOST_1
2018-06-27 09:35:15 -Generating unique operation named: listUsingPUT_1
2018-06-27 09:35:15 -Generating unique operation named: listUsingPATCH_1
2018-06-27 09:35:15 -Generating unique operation named: listUsingDELETE_1
2018-06-27 09:35:15 -Generating unique operation named: listUsingOPTIONS_1
2018-06-27 09:35:15 -Generating unique operation named: listUsingTRACE_1
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_15
2018-06-27 09:35:15 -Generating unique operation named: addUsingGET_11
2018-06-27 09:35:15 -Generating unique operation named: batchRemoveUsingPOST_4
2018-06-27 09:35:15 -Generating unique operation named: editUsingGET_12
2018-06-27 09:35:15 -Generating unique operation named: listUsingGET_16
2018-06-27 09:35:15 -Generating unique operation named: removeUsingPOST_19
2018-06-27 09:35:15 -Generating unique operation named: saveUsingPOST_10
2018-06-27 09:35:15 -Generating unique operation named: treeUsingGET_3
2018-06-27 09:35:15 -Generating unique operation named: treeViewUsingGET_1
2018-06-27 09:35:15 -Generating unique operation named: updateUsingPOST_11
2018-06-27 09:35:15 -Starting Quartz Scheduler now
2018-06-27 09:35:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2018-06-27 09:35:15 -Starting...
2018-06-27 09:35:15 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-27 09:35:15 -Started.
2018-06-27 09:35:15 -Initializing ProtocolHandler ["http-nio-8099"]
2018-06-27 09:35:15 -Starting ProtocolHandler ["http-nio-8099"]
2018-06-27 09:35:16 -Using a shared selector for servlet write/read
2018-06-27 09:35:16 -Tomcat started on port(s): 8099 (http)
2018-06-27 09:35:16 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2018-06-27 09:35:16 -==> Parameters: 
2018-06-27 09:35:16 -<==      Total: 1
2018-06-27 09:35:16 -Started BootdoApplication in 11.841 seconds (JVM running for 12.4)
2018-06-27 09:35:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-06-27 09:35:37 -FrameworkServlet 'dispatcherServlet': initialization started
2018-06-27 09:35:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2018-06-27 09:35:37 -Enabling session validation scheduler...
2018-06-27 09:35:37 -请求地址 : http://127.0.0.1:8099/login;JSESSIONID=c39d8aab-45b1-4913-804c-01da46d55825
2018-06-27 09:35:37 -HTTP METHOD : GET
2018-06-27 09:35:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-06-27 09:35:37 -参数 : []
2018-06-27 09:35:37 -耗时 : 1
2018-06-27 09:35:37 -返回值 : login
2018-06-27 09:35:37 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-06-27 09:35:37 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-06-27 09:35:37 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-06-27 09:35:37 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-06-27 09:35:37 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-06-27 09:35:37 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-06-27 09:35:37 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-06-27 09:35:37 -请求地址 : http://127.0.0.1:8099/login;JSESSIONID=c39d8aab-45b1-4913-804c-01da46d55825
2018-06-27 09:35:37 -HTTP METHOD : GET
2018-06-27 09:35:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2018-06-27 09:35:37 -参数 : []
2018-06-27 09:35:37 -耗时 : 0
2018-06-27 09:35:37 -返回值 : login
2018-06-27 09:35:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-27 09:35:38 -==> Parameters: admin(String)
2018-06-27 09:35:38 -<==      Total: 1
2018-06-27 09:35:39 -请求地址 : http://127.0.0.1:8099/login
2018-06-27 09:35:39 -HTTP METHOD : POST
2018-06-27 09:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2018-06-27 09:35:39 -参数 : [admin, 111111]
2018-06-27 09:35:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2018-06-27 09:35:39 -==> Parameters: admin(String)
2018-06-27 09:35:39 -<==      Total: 1
2018-06-27 09:35:39 -耗时 : 14
2018-06-27 09:35:39 -返回值 : {msg=操作成功, code=0}
2018-06-27 09:35:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2018-06-27 09:35:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 09:35:39 -==> Parameters: 1(Long), admin(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2018-06-27 09:35:39.044(Timestamp)
2018-06-27 09:35:39 -<==    Updates: 1
2018-06-27 09:35:39 -请求地址 : http://127.0.0.1:8099/index
2018-06-27 09:35:39 -HTTP METHOD : GET
2018-06-27 09:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2018-06-27 09:35:39 -参数 : [{}]
2018-06-27 09:35:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2018-06-27 09:35:39 -==> Parameters: 1(Long)
2018-06-27 09:35:39 -<==      Total: 29
2018-06-27 09:35:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2018-06-27 09:35:39 -==> Parameters: 138(Long)
2018-06-27 09:35:39 -<==      Total: 1
2018-06-27 09:35:39 -耗时 : 25
2018-06-27 09:35:39 -返回值 : index_v1
2018-06-27 09:35:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2018-06-27 09:35:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2018-06-27 09:35:39.133(Timestamp)
2018-06-27 09:35:39 -<==    Updates: 1
2018-06-27 09:35:39 -请求地址 : http://127.0.0.1:8099/main
2018-06-27 09:35:39 -HTTP METHOD : GET
2018-06-27 09:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-06-27 09:35:39 -参数 : []
2018-06-27 09:35:39 -耗时 : 0
2018-06-27 09:35:39 -返回值 : main
2018-06-27 09:35:39 -请求地址 : http://127.0.0.1:8099/oa/notify/message
2018-06-27 09:35:39 -HTTP METHOD : GET
2018-06-27 09:35:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2018-06-27 09:35:39 -参数 : []
2018-06-27 09:35:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2018-06-27 09:35:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2018-06-27 09:35:39 -<==      Total: 0
2018-06-27 09:35:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2018-06-27 09:35:39 -==> Parameters: 1(Long), 0(String)
2018-06-27 09:35:39 -<==      Total: 1
2018-06-27 09:35:39 -耗时 : 13
2018-06-27 09:35:39 -返回值 : com.bootdo.common.utils.PageUtils@6584e96c
2018-06-27 09:35:39 -请求地址 : http://127.0.0.1:8099/main
2018-06-27 09:35:39 -HTTP METHOD : GET
2018-06-27 09:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2018-06-27 09:35:39 -参数 : []
2018-06-27 09:35:39 -耗时 : 0
2018-06-27 09:35:39 -返回值 : main
2018-06-27 09:35:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:42 -请求地址 : http://127.0.0.1:8099/system/regexp
2018-06-27 09:35:42 -HTTP METHOD : GET
2018-06-27 09:35:42 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.Regexp
2018-06-27 09:35:42 -参数 : []
2018-06-27 09:35:42 -耗时 : 0
2018-06-27 09:35:42 -返回值 : system/regexp/regexp
2018-06-27 09:35:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:42 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:42 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 09:35:42 -HTTP METHOD : GET
2018-06-27 09:35:42 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 09:35:42 -参数 : [{limit=10, offset=0, rname=}]
2018-06-27 09:35:42 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-27 09:35:42 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:35:42 -<==      Total: 10
2018-06-27 09:35:42 -==>  Preparing: select count(*) from sys_regexp 
2018-06-27 09:35:42 -==> Parameters: 
2018-06-27 09:35:42 -<==      Total: 1
2018-06-27 09:35:42 -耗时 : 9
2018-06-27 09:35:42 -返回值 : com.bootdo.common.utils.PageUtils@eb6977b
2018-06-27 09:35:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:45 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 09:35:45 -HTTP METHOD : GET
2018-06-27 09:35:45 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 09:35:45 -参数 : [{limit=10, offset=0, rname=}]
2018-06-27 09:35:45 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-27 09:35:45 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:35:45 -<==      Total: 10
2018-06-27 09:35:45 -==>  Preparing: select count(*) from sys_regexp 
2018-06-27 09:35:45 -==> Parameters: 
2018-06-27 09:35:45 -<==      Total: 1
2018-06-27 09:35:45 -耗时 : 7
2018-06-27 09:35:45 -返回值 : com.bootdo.common.utils.PageUtils@737ff178
2018-06-27 09:35:49 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:49 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 09:35:49 -HTTP METHOD : GET
2018-06-27 09:35:49 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 09:35:49 -参数 : [{limit=10, offset=0, rname=44}]
2018-06-27 09:35:49 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp WHERE RNAME = ? order by RID desc limit ?, ? 
2018-06-27 09:35:49 -==> Parameters: 44(String), 0(Integer), 10(Integer)
2018-06-27 09:35:49 -<==      Total: 0
2018-06-27 09:35:49 -==>  Preparing: select count(*) from sys_regexp WHERE RNAME = ? 
2018-06-27 09:35:49 -==> Parameters: 44(String)
2018-06-27 09:35:49 -<==      Total: 1
2018-06-27 09:35:49 -耗时 : 4
2018-06-27 09:35:49 -返回值 : com.bootdo.common.utils.PageUtils@2793f5f8
2018-06-27 09:35:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:35:51 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 09:35:51 -HTTP METHOD : GET
2018-06-27 09:35:51 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 09:35:51 -参数 : [{limit=10, offset=0, rname=444}]
2018-06-27 09:35:51 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp WHERE RNAME = ? order by RID desc limit ?, ? 
2018-06-27 09:35:51 -==> Parameters: 444(String), 0(Integer), 10(Integer)
2018-06-27 09:35:51 -<==      Total: 1
2018-06-27 09:35:51 -==>  Preparing: select count(*) from sys_regexp WHERE RNAME = ? 
2018-06-27 09:35:51 -==> Parameters: 444(String)
2018-06-27 09:35:51 -<==      Total: 1
2018-06-27 09:35:51 -耗时 : 6
2018-06-27 09:35:51 -返回值 : com.bootdo.common.utils.PageUtils@60dac218
2018-06-27 09:36:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 8]
2018-06-27 09:37:14 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:37:14 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 09:37:14 -HTTP METHOD : GET
2018-06-27 09:37:14 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 09:37:14 -参数 : [{limit=10, offset=0, rname=手机号}]
2018-06-27 09:37:14 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp WHERE RNAME = ? order by RID desc limit ?, ? 
2018-06-27 09:37:14 -==> Parameters: 手机号(String), 0(Integer), 10(Integer)
2018-06-27 09:37:14 -<==      Total: 0
2018-06-27 09:37:14 -==>  Preparing: select count(*) from sys_regexp WHERE RNAME = ? 
2018-06-27 09:37:14 -==> Parameters: 手机号(String)
2018-06-27 09:37:14 -<==      Total: 1
2018-06-27 09:37:14 -耗时 : 5
2018-06-27 09:37:14 -返回值 : com.bootdo.common.utils.PageUtils@185b125c
2018-06-27 09:37:19 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:37:19 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 09:37:19 -HTTP METHOD : GET
2018-06-27 09:37:19 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 09:37:19 -参数 : [{limit=10, offset=0, rname=}]
2018-06-27 09:37:19 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp order by RID desc limit ?, ? 
2018-06-27 09:37:19 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:37:19 -<==      Total: 10
2018-06-27 09:37:19 -==>  Preparing: select count(*) from sys_regexp 
2018-06-27 09:37:19 -==> Parameters: 
2018-06-27 09:37:19 -<==      Total: 1
2018-06-27 09:37:19 -耗时 : 5
2018-06-27 09:37:19 -返回值 : com.bootdo.common.utils.PageUtils@4d15c4d0
2018-06-27 09:37:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:37:26 -请求地址 : http://127.0.0.1:8099/system/regexp/list
2018-06-27 09:37:26 -HTTP METHOD : GET
2018-06-27 09:37:26 -CLASS_METHOD : com.bootdo.system.controller.RegexpController.list
2018-06-27 09:37:26 -参数 : [{limit=10, offset=0, rname=手机号码}]
2018-06-27 09:37:26 -==>  Preparing: select `RID`,`RNAME`,`RCODE`,`RCONTENT`,`RMARKS`,`RVALID` from sys_regexp WHERE RNAME = ? order by RID desc limit ?, ? 
2018-06-27 09:37:26 -==> Parameters: 手机号码(String), 0(Integer), 10(Integer)
2018-06-27 09:37:26 -<==      Total: 1
2018-06-27 09:37:26 -==>  Preparing: select count(*) from sys_regexp WHERE RNAME = ? 
2018-06-27 09:37:26 -==> Parameters: 手机号码(String)
2018-06-27 09:37:26 -<==      Total: 1
2018-06-27 09:37:26 -耗时 : 4
2018-06-27 09:37:26 -返回值 : com.bootdo.common.utils.PageUtils@310da2f5
2018-06-27 09:38:06 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-27 09:38:11 -请求地址 : http://127.0.0.1:8099/
2018-06-27 09:38:11 -HTTP METHOD : GET
2018-06-27 09:38:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-06-27 09:38:11 -参数 : [{}]
2018-06-27 09:38:11 -耗时 : 1
2018-06-27 09:38:11 -返回值 : redirect:/blog
2018-06-27 09:38:11 -请求地址 : http://127.0.0.1:8099/blog
2018-06-27 09:38:11 -HTTP METHOD : GET
2018-06-27 09:38:11 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-27 09:38:11 -参数 : []
2018-06-27 09:38:11 -耗时 : 0
2018-06-27 09:38:11 -返回值 : blog/index/main
2018-06-27 09:38:11 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-27 09:38:11 -HTTP METHOD : GET
2018-06-27 09:38:11 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-27 09:38:11 -参数 : [{type=article, limit=10, offset=0}]
2018-06-27 09:38:11 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-27 09:38:11 -==> Parameters: article(String)
2018-06-27 09:38:11 -<==      Total: 10
2018-06-27 09:38:11 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-27 09:38:11 -==> Parameters: article(String)
2018-06-27 09:38:11 -<==      Total: 1
2018-06-27 09:38:11 -耗时 : 20
2018-06-27 09:38:11 -返回值 : com.bootdo.common.utils.PageUtils@16655724
2018-06-27 09:38:13 -请求地址 : http://127.0.0.1:8099/sys/user/personal
2018-06-27 09:38:13 -HTTP METHOD : GET
2018-06-27 09:38:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2018-06-27 09:38:13 -参数 : [{}]
2018-06-27 09:38:13 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-06-27 09:38:13 -==> Parameters: 1(Long)
2018-06-27 09:38:13 -<==      Total: 1
2018-06-27 09:38:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-27 09:38:13 -==> Parameters: 1(Long)
2018-06-27 09:38:13 -<==      Total: 1
2018-06-27 09:38:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-06-27 09:38:13 -==> Parameters: 6(Long)
2018-06-27 09:38:13 -<==      Total: 1
2018-06-27 09:38:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc 
2018-06-27 09:38:13 -==> Parameters: hobby(String)
2018-06-27 09:38:13 -<==      Total: 2
2018-06-27 09:38:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc 
2018-06-27 09:38:13 -==> Parameters: sex(String)
2018-06-27 09:38:13 -<==      Total: 2
2018-06-27 09:38:13 -耗时 : 19
2018-06-27 09:38:13 -返回值 : system/user/personal
2018-06-27 09:39:41 -请求地址 : http://127.0.0.1:8099/sys/user/uploadImg
2018-06-27 09:39:41 -HTTP METHOD : POST
2018-06-27 09:39:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.uploadImg
2018-06-27 09:39:41 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4a5aa3c7, {"x":560.6259716875384,"y":92.68540710758195,"height":346.93764881664663,"width":346.93764881664663,"rotate":0}, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@37390286]
2018-06-27 09:39:41 -==>  Preparing: insert into sys_file ( `type`, `url`, `create_date` ) values ( ?, ?, ? ) 
2018-06-27 09:39:41 -==> Parameters: 0(Integer), /files/dd43bdc6-4eae-4e21-8882-d42392db9709.png(String), 2018-06-27 09:39:41.688(Timestamp)
2018-06-27 09:39:41 -<==    Updates: 1
2018-06-27 09:39:41 -==>  Preparing: update sys_user SET `pic_id` = ? where user_id = ? 
2018-06-27 09:39:41 -==> Parameters: 150(Long), 1(Long)
2018-06-27 09:39:41 -<==    Updates: 1
2018-06-27 09:39:41 -耗时 : 285
2018-06-27 09:39:41 -返回值 : {msg=操作成功, code=0, url=/files/dd43bdc6-4eae-4e21-8882-d42392db9709.png}
2018-06-27 09:40:11 -请求地址 : http://127.0.0.1:8099/sys/user/personal
2018-06-27 09:40:11 -HTTP METHOD : GET
2018-06-27 09:40:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2018-06-27 09:40:11 -参数 : [{}]
2018-06-27 09:40:11 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2018-06-27 09:40:11 -==> Parameters: 1(Long)
2018-06-27 09:40:11 -<==      Total: 1
2018-06-27 09:40:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2018-06-27 09:40:11 -==> Parameters: 1(Long)
2018-06-27 09:40:11 -<==      Total: 1
2018-06-27 09:40:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2018-06-27 09:40:11 -==> Parameters: 6(Long)
2018-06-27 09:40:11 -<==      Total: 1
2018-06-27 09:40:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc 
2018-06-27 09:40:11 -==> Parameters: hobby(String)
2018-06-27 09:40:11 -<==      Total: 2
2018-06-27 09:40:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc 
2018-06-27 09:40:11 -==> Parameters: sex(String)
2018-06-27 09:40:11 -<==      Total: 2
2018-06-27 09:40:11 -耗时 : 10
2018-06-27 09:40:11 -返回值 : system/user/personal
2018-06-27 09:40:34 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-27 09:40:36 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-27 09:40:36 -请求地址 : http://127.0.0.1:8099/
2018-06-27 09:40:36 -HTTP METHOD : GET
2018-06-27 09:40:36 -HTTP METHOD : GET
2018-06-27 09:40:36 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-27 09:40:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-06-27 09:40:36 -参数 : [{type=article, limit=10, offset=0}]
2018-06-27 09:40:36 -参数 : [{}]
2018-06-27 09:40:36 -耗时 : 0
2018-06-27 09:40:36 -返回值 : redirect:/blog
2018-06-27 09:40:36 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-27 09:40:36 -==> Parameters: article(String)
2018-06-27 09:40:36 -<==      Total: 10
2018-06-27 09:40:36 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-27 09:40:36 -==> Parameters: article(String)
2018-06-27 09:40:36 -<==      Total: 1
2018-06-27 09:40:36 -请求地址 : http://127.0.0.1:8099/blog
2018-06-27 09:40:36 -HTTP METHOD : GET
2018-06-27 09:40:36 -耗时 : 12
2018-06-27 09:40:36 -返回值 : com.bootdo.common.utils.PageUtils@31541bcd
2018-06-27 09:40:36 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-27 09:40:36 -参数 : []
2018-06-27 09:40:36 -耗时 : 1
2018-06-27 09:40:36 -返回值 : blog/index/main
2018-06-27 09:40:38 -请求地址 : http://127.0.0.1:8099/blog/open/post/121
2018-06-27 09:40:38 -HTTP METHOD : GET
2018-06-27 09:40:38 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.post
2018-06-27 09:40:38 -参数 : [121, {}]
2018-06-27 09:40:38 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content where cid = ? 
2018-06-27 09:40:38 -==> Parameters: 121(Long)
2018-06-27 09:40:38 -<==      Total: 1
2018-06-27 09:40:38 -耗时 : 4
2018-06-27 09:40:38 -返回值 : blog/index/post
2018-06-27 09:42:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:09 -请求地址 : http://127.0.0.1:8099/common/dict
2018-06-27 09:42:09 -HTTP METHOD : GET
2018-06-27 09:42:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.dict
2018-06-27 09:42:09 -参数 : []
2018-06-27 09:42:09 -耗时 : 0
2018-06-27 09:42:09 -返回值 : common/dict/dict
2018-06-27 09:42:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:09 -请求地址 : http://127.0.0.1:8099/common/dict/type
2018-06-27 09:42:09 -HTTP METHOD : GET
2018-06-27 09:42:09 -请求地址 : http://127.0.0.1:8099/common/dict/dicttype
2018-06-27 09:42:09 -HTTP METHOD : GET
2018-06-27 09:42:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listType
2018-06-27 09:42:09 -参数 : []
2018-06-27 09:42:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listDictType
2018-06-27 09:42:09 -参数 : []
2018-06-27 09:42:09 -==>  Preparing: select distinct `type` , description from sys_dict3 
2018-06-27 09:42:09 -==> Parameters: 
2018-06-27 09:42:09 -==>  Preparing: select `did`,`dname`,`dcode`,`remark` from sys_dict 
2018-06-27 09:42:09 -<==      Total: 31
2018-06-27 09:42:09 -耗时 : 9
2018-06-27 09:42:09 -==> Parameters: 
2018-06-27 09:42:09 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2018-06-27 09:42:09 -<==      Total: 3
2018-06-27 09:42:09 -耗时 : 14
2018-06-27 09:42:09 -返回值 : [com.bootdo.common.domain.DictTypeDO@293ac95b, com.bootdo.common.domain.DictTypeDO@5e940e16, com.bootdo.common.domain.DictTypeDO@4f12ce4c]
2018-06-27 09:42:09 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:09 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:42:09 -HTTP METHOD : GET
2018-06-27 09:42:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:42:09 -参数 : [{limit=10, offset=0}]
2018-06-27 09:42:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-27 09:42:09 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:42:09 -<==      Total: 10
2018-06-27 09:42:09 -==>  Preparing: select count(*) from sys_dict3 
2018-06-27 09:42:09 -==> Parameters: 
2018-06-27 09:42:09 -<==      Total: 1
2018-06-27 09:42:09 -耗时 : 7
2018-06-27 09:42:09 -返回值 : com.bootdo.common.utils.PageUtils@230d544e
2018-06-27 09:42:17 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:17 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:42:17 -HTTP METHOD : GET
2018-06-27 09:42:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:42:17 -参数 : [{limit=10, offset=0, type=del_flag}]
2018-06-27 09:42:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc limit ?, ? 
2018-06-27 09:42:17 -==> Parameters: del_flag(String), 0(Integer), 10(Integer)
2018-06-27 09:42:17 -<==      Total: 2
2018-06-27 09:42:17 -==>  Preparing: select count(*) from sys_dict3 WHERE type = ? 
2018-06-27 09:42:17 -==> Parameters: del_flag(String)
2018-06-27 09:42:17 -<==      Total: 1
2018-06-27 09:42:17 -耗时 : 5
2018-06-27 09:42:17 -返回值 : com.bootdo.common.utils.PageUtils@5229e558
2018-06-27 09:42:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:39 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:42:39 -HTTP METHOD : GET
2018-06-27 09:42:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:42:39 -参数 : [{limit=10, offset=0, type=}]
2018-06-27 09:42:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-27 09:42:39 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:42:39 -<==      Total: 10
2018-06-27 09:42:39 -==>  Preparing: select count(*) from sys_dict3 
2018-06-27 09:42:39 -==> Parameters: 
2018-06-27 09:42:39 -<==      Total: 1
2018-06-27 09:42:39 -耗时 : 6
2018-06-27 09:42:39 -返回值 : com.bootdo.common.utils.PageUtils@19505f39
2018-06-27 09:42:45 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:45 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:42:45 -HTTP METHOD : GET
2018-06-27 09:42:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:42:45 -参数 : [{limit=10, offset=0, type=}]
2018-06-27 09:42:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-27 09:42:45 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:42:45 -<==      Total: 10
2018-06-27 09:42:45 -==>  Preparing: select count(*) from sys_dict3 
2018-06-27 09:42:45 -==> Parameters: 
2018-06-27 09:42:45 -<==      Total: 1
2018-06-27 09:42:45 -耗时 : 4
2018-06-27 09:42:45 -返回值 : com.bootdo.common.utils.PageUtils@3373fa55
2018-06-27 09:42:50 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:50 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:42:50 -HTTP METHOD : GET
2018-06-27 09:42:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:42:50 -参数 : [{limit=10, offset=0, type=del_flag}]
2018-06-27 09:42:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc limit ?, ? 
2018-06-27 09:42:50 -==> Parameters: del_flag(String), 0(Integer), 10(Integer)
2018-06-27 09:42:50 -<==      Total: 2
2018-06-27 09:42:50 -==>  Preparing: select count(*) from sys_dict3 WHERE type = ? 
2018-06-27 09:42:50 -==> Parameters: del_flag(String)
2018-06-27 09:42:50 -<==      Total: 1
2018-06-27 09:42:50 -耗时 : 4
2018-06-27 09:42:50 -返回值 : com.bootdo.common.utils.PageUtils@33cbeaea
2018-06-27 09:42:52 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:52 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:42:52 -HTTP METHOD : GET
2018-06-27 09:42:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:42:52 -参数 : [{limit=10, offset=0, type=show_hide}]
2018-06-27 09:42:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc limit ?, ? 
2018-06-27 09:42:52 -==> Parameters: show_hide(String), 0(Integer), 10(Integer)
2018-06-27 09:42:52 -<==      Total: 2
2018-06-27 09:42:52 -==>  Preparing: select count(*) from sys_dict3 WHERE type = ? 
2018-06-27 09:42:52 -==> Parameters: show_hide(String)
2018-06-27 09:42:52 -<==      Total: 1
2018-06-27 09:42:52 -耗时 : 5
2018-06-27 09:42:52 -返回值 : com.bootdo.common.utils.PageUtils@79248462
2018-06-27 09:42:56 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:42:56 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:42:56 -HTTP METHOD : GET
2018-06-27 09:42:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:42:56 -参数 : [{limit=10, offset=0, type=}]
2018-06-27 09:42:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-27 09:42:56 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:42:56 -<==      Total: 10
2018-06-27 09:42:56 -==>  Preparing: select count(*) from sys_dict3 
2018-06-27 09:42:56 -==> Parameters: 
2018-06-27 09:42:56 -<==      Total: 1
2018-06-27 09:42:56 -耗时 : 5
2018-06-27 09:42:56 -返回值 : com.bootdo.common.utils.PageUtils@4f244b2e
2018-06-27 09:43:01 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:43:01 -请求地址 : http://127.0.0.1:8099/common/dict/add
2018-06-27 09:43:01 -HTTP METHOD : GET
2018-06-27 09:43:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.add
2018-06-27 09:43:01 -参数 : []
2018-06-27 09:43:01 -耗时 : 0
2018-06-27 09:43:01 -返回值 : common/dict/add
2018-06-27 09:43:08 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:43:08 -请求地址 : http://127.0.0.1:8099/common/dict/add/hobby/%E7%88%B1%E5%A5%BD
2018-06-27 09:43:08 -HTTP METHOD : GET
2018-06-27 09:43:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.addD
2018-06-27 09:43:08 -参数 : [{}, hobby, 爱好]
2018-06-27 09:43:08 -耗时 : 0
2018-06-27 09:43:08 -返回值 : common/dict/add
2018-06-27 09:43:32 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.net.SocketInputStream.read(SocketInputStream.java:127)
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:196)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-27 09:43:35 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
redis.clients.jedis.exceptions.JedisConnectionException: Unexpected end of stream.
	at redis.clients.util.RedisInputStream.ensureFill(RedisInputStream.java:199)
	at redis.clients.util.RedisInputStream.readByte(RedisInputStream.java:40)
	at redis.clients.jedis.Protocol.process(Protocol.java:151)
	at redis.clients.jedis.Protocol.read(Protocol.java:215)
	at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)
	at redis.clients.jedis.Connection.getBinaryBulkReply(Connection.java:259)
	at redis.clients.jedis.BinaryJedis.get(BinaryJedis.java:244)
	at com.bootdo.common.redis.shiro.RedisManager.get(RedisManager.java:68)
	at com.bootdo.common.redis.shiro.RedisSessionDAO.doReadSession(RedisSessionDAO.java:93)
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:168)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getSession(AbstractNativeSessionManager.java:140)
	at org.apache.shiro.mgt.SessionsSecurityManager.getSession(SessionsSecurityManager.java:156)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveContextSession(DefaultSecurityManager.java:456)
	at org.apache.shiro.mgt.DefaultSecurityManager.resolveSession(DefaultSecurityManager.java:442)
	at org.apache.shiro.mgt.DefaultSecurityManager.createSubject(DefaultSecurityManager.java:338)
	at org.apache.shiro.subject.Subject$Builder.buildSubject(Subject.java:846)
	at org.apache.shiro.web.subject.WebSubject$Builder.buildWebSubject(WebSubject.java:148)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.createSubject(AbstractShiroFilter.java:292)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:359)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-06-27 09:44:06 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:44:06 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:44:06 -HTTP METHOD : GET
2018-06-27 09:44:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:44:06 -参数 : [{limit=10, offset=0}]
2018-06-27 09:44:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-27 09:44:06 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:44:06 -<==      Total: 10
2018-06-27 09:44:06 -==>  Preparing: select count(*) from sys_dict3 
2018-06-27 09:44:06 -==> Parameters: 
2018-06-27 09:44:06 -<==      Total: 1
2018-06-27 09:44:06 -耗时 : 3
2018-06-27 09:44:06 -返回值 : com.bootdo.common.utils.PageUtils@50732707
2018-06-27 09:44:16 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:44:16 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:44:16 -HTTP METHOD : GET
2018-06-27 09:44:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:44:16 -参数 : [{limit=10, offset=0, type=del_flag}]
2018-06-27 09:44:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc limit ?, ? 
2018-06-27 09:44:16 -==> Parameters: del_flag(String), 0(Integer), 10(Integer)
2018-06-27 09:44:16 -<==      Total: 2
2018-06-27 09:44:16 -==>  Preparing: select count(*) from sys_dict3 WHERE type = ? 
2018-06-27 09:44:16 -==> Parameters: del_flag(String)
2018-06-27 09:44:16 -<==      Total: 1
2018-06-27 09:44:16 -耗时 : 4
2018-06-27 09:44:16 -返回值 : com.bootdo.common.utils.PageUtils@1f299269
2018-06-27 09:44:18 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:44:18 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:44:18 -HTTP METHOD : GET
2018-06-27 09:44:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:44:18 -参数 : [{limit=10, offset=0, type=show_hide}]
2018-06-27 09:44:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc limit ?, ? 
2018-06-27 09:44:18 -==> Parameters: show_hide(String), 0(Integer), 10(Integer)
2018-06-27 09:44:18 -<==      Total: 2
2018-06-27 09:44:18 -==>  Preparing: select count(*) from sys_dict3 WHERE type = ? 
2018-06-27 09:44:18 -==> Parameters: show_hide(String)
2018-06-27 09:44:18 -<==      Total: 1
2018-06-27 09:44:18 -耗时 : 5
2018-06-27 09:44:18 -返回值 : com.bootdo.common.utils.PageUtils@173b4c67
2018-06-27 09:44:20 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:44:20 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:44:20 -HTTP METHOD : GET
2018-06-27 09:44:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:44:20 -参数 : [{limit=10, offset=0, type=theme}]
2018-06-27 09:44:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc limit ?, ? 
2018-06-27 09:44:20 -==> Parameters: theme(String), 0(Integer), 10(Integer)
2018-06-27 09:44:20 -<==      Total: 5
2018-06-27 09:44:20 -==>  Preparing: select count(*) from sys_dict3 WHERE type = ? 
2018-06-27 09:44:20 -==> Parameters: theme(String)
2018-06-27 09:44:20 -<==      Total: 1
2018-06-27 09:44:20 -耗时 : 6
2018-06-27 09:44:20 -返回值 : com.bootdo.common.utils.PageUtils@500a965a
2018-06-27 09:44:23 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:44:23 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:44:23 -HTTP METHOD : GET
2018-06-27 09:44:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:44:23 -参数 : [{limit=10, offset=0, type=sys_office_common}]
2018-06-27 09:44:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc limit ?, ? 
2018-06-27 09:44:23 -==> Parameters: sys_office_common(String), 0(Integer), 10(Integer)
2018-06-27 09:44:23 -<==      Total: 3
2018-06-27 09:44:23 -==>  Preparing: select count(*) from sys_dict3 WHERE type = ? 
2018-06-27 09:44:23 -==> Parameters: sys_office_common(String)
2018-06-27 09:44:23 -<==      Total: 1
2018-06-27 09:44:23 -耗时 : 4
2018-06-27 09:44:23 -返回值 : com.bootdo.common.utils.PageUtils@5b9c5522
2018-06-27 09:44:26 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:44:26 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:44:26 -HTTP METHOD : GET
2018-06-27 09:44:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:44:26 -参数 : [{limit=10, offset=0, type=show_hide}]
2018-06-27 09:44:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc limit ?, ? 
2018-06-27 09:44:26 -==> Parameters: show_hide(String), 0(Integer), 10(Integer)
2018-06-27 09:44:26 -<==      Total: 2
2018-06-27 09:44:26 -==>  Preparing: select count(*) from sys_dict3 WHERE type = ? 
2018-06-27 09:44:26 -==> Parameters: show_hide(String)
2018-06-27 09:44:26 -<==      Total: 1
2018-06-27 09:44:26 -耗时 : 5
2018-06-27 09:44:26 -返回值 : com.bootdo.common.utils.PageUtils@6f919d14
2018-06-27 09:44:27 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:44:27 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:44:27 -HTTP METHOD : GET
2018-06-27 09:44:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:44:27 -参数 : [{limit=10, offset=0, type=show_hide}]
2018-06-27 09:44:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc limit ?, ? 
2018-06-27 09:44:27 -==> Parameters: show_hide(String), 0(Integer), 10(Integer)
2018-06-27 09:44:27 -<==      Total: 2
2018-06-27 09:44:27 -==>  Preparing: select count(*) from sys_dict3 WHERE type = ? 
2018-06-27 09:44:27 -==> Parameters: show_hide(String)
2018-06-27 09:44:27 -<==      Total: 1
2018-06-27 09:44:27 -耗时 : 4
2018-06-27 09:44:27 -返回值 : com.bootdo.common.utils.PageUtils@1537d29d
2018-06-27 09:45:24 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:45:24 -请求地址 : http://127.0.0.1:8099/common/dict/list
2018-06-27 09:45:24 -HTTP METHOD : GET
2018-06-27 09:45:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2018-06-27 09:45:24 -参数 : [{limit=10, offset=0, type=}]
2018-06-27 09:45:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 order by id desc limit ?, ? 
2018-06-27 09:45:24 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:45:24 -<==      Total: 10
2018-06-27 09:45:24 -==>  Preparing: select count(*) from sys_dict3 
2018-06-27 09:45:24 -==> Parameters: 
2018-06-27 09:45:24 -<==      Total: 1
2018-06-27 09:45:24 -耗时 : 4
2018-06-27 09:45:24 -返回值 : com.bootdo.common.utils.PageUtils@7800b044
2018-06-27 09:45:39 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:45:39 -请求地址 : http://127.0.0.1:8099/blog/bContent/add
2018-06-27 09:45:39 -HTTP METHOD : GET
2018-06-27 09:45:39 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.add
2018-06-27 09:45:39 -参数 : []
2018-06-27 09:45:39 -耗时 : 0
2018-06-27 09:45:39 -返回值 : blog/bContent/add
2018-06-27 09:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:45:48 -请求地址 : http://127.0.0.1:8099/blog/bContent
2018-06-27 09:45:48 -HTTP METHOD : GET
2018-06-27 09:45:48 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.bContent
2018-06-27 09:45:48 -参数 : []
2018-06-27 09:45:48 -耗时 : 1
2018-06-27 09:45:48 -返回值 : blog/bContent/bContent
2018-06-27 09:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:45:48 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:45:48 -请求地址 : http://127.0.0.1:8099/blog/bContent/list
2018-06-27 09:45:48 -HTTP METHOD : GET
2018-06-27 09:45:48 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.list
2018-06-27 09:45:48 -参数 : [{limit=10, offset=0}]
2018-06-27 09:45:48 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content order by cid desc limit 0, 10 
2018-06-27 09:45:48 -==> Parameters: 
2018-06-27 09:45:48 -<==      Total: 10
2018-06-27 09:45:48 -==>  Preparing: select count(*) from blog_content 
2018-06-27 09:45:48 -==> Parameters: 
2018-06-27 09:45:48 -<==      Total: 1
2018-06-27 09:45:48 -耗时 : 10
2018-06-27 09:45:48 -返回值 : com.bootdo.common.utils.PageUtils@97aa76c
2018-06-27 09:45:51 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:45:51 -请求地址 : http://127.0.0.1:8099/blog/bContent/add
2018-06-27 09:45:51 -HTTP METHOD : GET
2018-06-27 09:45:51 -CLASS_METHOD : com.bootdo.blog.controller.ContentController.add
2018-06-27 09:45:51 -参数 : []
2018-06-27 09:45:51 -耗时 : 0
2018-06-27 09:45:51 -返回值 : blog/bContent/add
2018-06-27 09:46:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:46:10 -请求地址 : http://127.0.0.1:8099/oa/notify
2018-06-27 09:46:10 -HTTP METHOD : GET
2018-06-27 09:46:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.oaNotify
2018-06-27 09:46:10 -参数 : []
2018-06-27 09:46:10 -耗时 : 0
2018-06-27 09:46:10 -返回值 : oa/notify/notify
2018-06-27 09:46:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:46:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:46:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:46:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:46:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:46:10 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:46:10 -请求地址 : http://127.0.0.1:8099/oa/notify/list
2018-06-27 09:46:10 -HTTP METHOD : GET
2018-06-27 09:46:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2018-06-27 09:46:10 -参数 : [{limit=10, offset=0}]
2018-06-27 09:46:10 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2018-06-27 09:46:10 -==> Parameters: 0(Integer), 10(Integer)
2018-06-27 09:46:10 -<==      Total: 5
2018-06-27 09:46:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-27 09:46:10 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-27 09:46:10 -<==      Total: 1
2018-06-27 09:46:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-27 09:46:10 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-27 09:46:10 -<==      Total: 1
2018-06-27 09:46:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-27 09:46:10 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-27 09:46:10 -<==      Total: 1
2018-06-27 09:46:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-27 09:46:10 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-27 09:46:10 -<==      Total: 1
2018-06-27 09:46:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE value = ? and type = ? order by id desc 
2018-06-27 09:46:10 -==> Parameters: 3(String), oa_notify_type(String)
2018-06-27 09:46:10 -<==      Total: 1
2018-06-27 09:46:10 -==>  Preparing: select count(*) from oa_notify 
2018-06-27 09:46:10 -==> Parameters: 
2018-06-27 09:46:10 -<==      Total: 1
2018-06-27 09:46:10 -耗时 : 17
2018-06-27 09:46:10 -返回值 : com.bootdo.common.utils.PageUtils@385b4b64
2018-06-27 09:46:13 -根据key从Redis中获取对象 key [UserDO{userId=1, username='admin', name='超级管理员', password='27bd386e70f280e24c2f4f2a549b82cf', deptId=6, deptName='null', email='admin@example.com', mobile='17699999999', status=1, userIdCreate=1, gmtCreate=Tue Aug 15 21:40:39 CST 2017, gmtModified=Tue Aug 15 21:41:00 CST 2017, roleIds=null, sex=96, birth=Thu Dec 14 00:00:00 CST 2017, picId=138, liveAddress='ccc', hobby='122;121;', province='北京市', city='北京市市辖区', district='东城区'}]
2018-06-27 09:46:13 -请求地址 : http://127.0.0.1:8099/oa/notify/add
2018-06-27 09:46:13 -HTTP METHOD : GET
2018-06-27 09:46:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.add
2018-06-27 09:46:13 -参数 : []
2018-06-27 09:46:13 -耗时 : 0
2018-06-27 09:46:13 -返回值 : oa/notify/add
2018-06-27 09:46:13 -请求地址 : http://127.0.0.1:8099/common/dict/list/oa_notify_type
2018-06-27 09:46:13 -HTTP METHOD : GET
2018-06-27 09:46:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2018-06-27 09:46:13 -参数 : [oa_notify_type]
2018-06-27 09:46:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict3 WHERE type = ? order by id desc 
2018-06-27 09:46:13 -==> Parameters: oa_notify_type(String)
2018-06-27 09:46:13 -<==      Total: 3
2018-06-27 09:46:13 -耗时 : 2
2018-06-27 09:46:13 -返回值 : [DictDO{id=107, name='活动通告', value='3', type='oa_notify_type', description='通知通告类型', sort=30, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=106, name='奖惩通告', value='2', type='oa_notify_type', description='通知通告类型', sort=20, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=105, name='会议通告', value='1', type='oa_notify_type', description='通知通告类型', sort=10, parentId=0, createBy=1, createDate=null, updateBy=1, updateDate=null, remarks='null', delFlag='0'}]
2018-06-27 09:57:31 -请求地址 : http://127.0.0.1:8099/
2018-06-27 09:57:31 -请求地址 : http://127.0.0.1:8099/blog/open/list
2018-06-27 09:57:31 -HTTP METHOD : GET
2018-06-27 09:57:31 -HTTP METHOD : GET
2018-06-27 09:57:31 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2018-06-27 09:57:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2018-06-27 09:57:31 -参数 : [{type=article, limit=10, offset=0}]
2018-06-27 09:57:31 -参数 : [{}]
2018-06-27 09:57:31 -耗时 : 1
2018-06-27 09:57:31 -返回值 : redirect:/blog
2018-06-27 09:57:31 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2018-06-27 09:57:31 -==> Parameters: article(String)
2018-06-27 09:57:31 -<==      Total: 10
2018-06-27 09:57:31 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2018-06-27 09:57:31 -==> Parameters: article(String)
2018-06-27 09:57:31 -<==      Total: 1
2018-06-27 09:57:31 -耗时 : 9
2018-06-27 09:57:31 -返回值 : com.bootdo.common.utils.PageUtils@67e89f01
2018-06-27 09:57:31 -请求地址 : http://127.0.0.1:8099/blog
2018-06-27 09:57:31 -HTTP METHOD : GET
2018-06-27 09:57:31 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2018-06-27 09:57:31 -参数 : []
2018-06-27 09:57:31 -耗时 : 0
2018-06-27 09:57:31 -返回值 : blog/index/main
2018-06-27 10:06:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 441]
2018-06-27 10:35:37 -Validating all active sessions...
2018-06-27 10:35:37 -Finished session validation.  No sessions were stopped.
2018-06-27 10:36:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 874]
2018-06-27 11:06:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 1307]
2018-06-27 12:17:53 -Validating all active sessions...
2018-06-27 12:17:53 -Finished session validation.  No sessions were stopped.
2018-06-27 12:18:29 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 1740]
2018-06-27 12:51:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 2173]
2018-06-27 13:20:31 -Validating all active sessions...
2018-06-27 13:20:31 -Finished session validation.  No sessions were stopped.
2018-06-27 13:21:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 2606]
2018-06-27 13:51:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 3039]
2018-06-27 14:20:31 -Validating all active sessions...
2018-06-27 14:20:31 -Finished session validation.  No sessions were stopped.
2018-06-27 14:21:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 3472]
2018-06-27 14:34:34 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@15bbf42f: startup date [Wed Jun 27 09:35:05 CST 2018]; root of context hierarchy
2018-06-27 14:34:34 -Stopping beans in phase 2147483647
2018-06-27 14:34:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-27 14:34:34 -Stopping...
2018-06-27 14:34:34 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2018-06-27 14:34:34 -Stopped.
2018-06-27 14:34:34 -Unregistering JMX-exposed beans on shutdown
2018-06-27 14:34:34 -Unregistering JMX-exposed beans
2018-06-27 14:34:34 -Shutting down ExecutorService 'brokerChannelExecutor'
2018-06-27 14:34:34 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2018-06-27 14:34:34 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2018-06-27 14:34:34 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2018-06-27 14:34:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2018-06-27 14:34:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2018-06-27 14:34:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2018-06-27 14:34:34 -Shutting down Quartz Scheduler
2018-06-27 14:34:34 -{dataSource-1} closed
2018-06-27 14:34:34 -Disabled session validation scheduler.
2018-06-27 22:23:27 -Starting BootdoApplication on localhost with PID 5618 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 22:23:27 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 22:23:27 -The following profiles are active: dev
2018-06-27 22:23:27 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 22:23:27 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 22:23:27 CST 2018]; root of context hierarchy
2018-06-27 22:23:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 22:23:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49d88e1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:23:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3c31bcc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:23:29 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:23:29 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:23:29 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 22:23:29 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:23:29 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:23:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:23:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:23:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:23:29 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 22:23:29 -Starting service [Tomcat]
2018-06-27 22:23:29 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 22:23:30 -Initializing Spring embedded WebApplicationContext
2018-06-27 22:23:30 -Root WebApplicationContext: initialization completed in 2798 ms
2018-06-27 22:23:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 22:23:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 22:23:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 22:23:30 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 22:23:30 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 22:23:30 -Filter xssFilter was not registered (disabled)
2018-06-27 22:23:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 22:23:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 22:23:30 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 22:23:30 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 22:23:31 -{dataSource-1} inited
2018-06-27 22:23:32 -ProcessEngine default created
2018-06-27 22:23:33 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryController': Unsatisfied dependency expressed through field 'salaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/common/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
2018-06-27 22:23:33 -{dataSource-1} closed
2018-06-27 22:23:33 -Stopping service [Tomcat]
2018-06-27 22:23:33 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-27 22:23:33 -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryController': Unsatisfied dependency expressed through field 'salaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/common/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:15)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/common/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/common/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/common/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/common/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/common/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7cacdf4d.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7cacdf4d$$FastClassBySpringCGLIB$$407cea0e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7cacdf4d.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.common.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 75 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.common.domain.DictDO
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 77 common frames omitted
2018-06-27 22:41:50 -Starting BootdoApplication on localhost with PID 5665 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 22:41:50 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 22:41:50 -The following profiles are active: dev
2018-06-27 22:41:50 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 22:41:50 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 22:41:50 CST 2018]; root of context hierarchy
2018-06-27 22:41:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 22:41:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$97f085be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:41:52 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8a49b465] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:41:52 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:41:52 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:41:52 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 22:41:52 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:41:52 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:41:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:41:52 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:41:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:41:52 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 22:41:52 -Starting service [Tomcat]
2018-06-27 22:41:52 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 22:41:53 -Initializing Spring embedded WebApplicationContext
2018-06-27 22:41:53 -Root WebApplicationContext: initialization completed in 2595 ms
2018-06-27 22:41:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 22:41:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 22:41:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 22:41:53 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 22:41:53 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 22:41:53 -Filter xssFilter was not registered (disabled)
2018-06-27 22:41:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 22:41:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 22:41:53 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 22:41:53 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 22:41:53 -{dataSource-1} inited
2018-06-27 22:41:55 -ProcessEngine default created
2018-06-27 22:41:55 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryController': Unsatisfied dependency expressed through field 'salaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
2018-06-27 22:41:55 -{dataSource-1} closed
2018-06-27 22:41:55 -Stopping service [Tomcat]
2018-06-27 22:41:55 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-27 22:41:55 -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryController': Unsatisfied dependency expressed through field 'salaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:15)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$cac4d6ee.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$cac4d6ee$$FastClassBySpringCGLIB$$b236dc2f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$cac4d6ee.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 75 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 77 common frames omitted
2018-06-27 22:43:22 -Starting BootdoApplication on localhost with PID 5683 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 22:43:22 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 22:43:22 -The following profiles are active: dev
2018-06-27 22:43:22 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 22:43:22 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 22:43:22 CST 2018]; root of context hierarchy
2018-06-27 22:43:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 22:43:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d070333] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:43:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1f6031da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:43:24 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:43:24 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:43:24 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 22:43:24 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:43:24 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:43:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:43:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:43:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:43:25 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 22:43:25 -Starting service [Tomcat]
2018-06-27 22:43:25 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 22:43:25 -Initializing Spring embedded WebApplicationContext
2018-06-27 22:43:25 -Root WebApplicationContext: initialization completed in 2674 ms
2018-06-27 22:43:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 22:43:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 22:43:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 22:43:25 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 22:43:25 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 22:43:25 -Filter xssFilter was not registered (disabled)
2018-06-27 22:43:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 22:43:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 22:43:25 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 22:43:25 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 22:43:26 -{dataSource-1} inited
2018-06-27 22:43:27 -ProcessEngine default created
2018-06-27 22:43:28 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryController': Unsatisfied dependency expressed through field 'salaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
2018-06-27 22:43:28 -{dataSource-1} closed
2018-06-27 22:43:28 -Stopping service [Tomcat]
2018-06-27 22:43:28 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-27 22:43:28 -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryController': Unsatisfied dependency expressed through field 'salaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:15)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/DictMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5fdb5463.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5fdb5463$$FastClassBySpringCGLIB$$14679b59.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5fdb5463.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.dept.domain.DictDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 75 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.dept.domain.DictDO
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 77 common frames omitted
2018-06-27 22:46:22 -Starting BootdoApplication on localhost with PID 5689 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 22:46:22 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 22:46:22 -The following profiles are active: dev
2018-06-27 22:46:22 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 22:46:22 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 22:46:22 CST 2018]; root of context hierarchy
2018-06-27 22:46:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 22:46:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$68ad8ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:46:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5b06be9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:46:24 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:46:24 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:46:24 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 22:46:24 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:46:24 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:46:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:46:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:46:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:46:25 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 22:46:25 -Starting service [Tomcat]
2018-06-27 22:46:25 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 22:46:25 -Initializing Spring embedded WebApplicationContext
2018-06-27 22:46:25 -Root WebApplicationContext: initialization completed in 2808 ms
2018-06-27 22:46:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 22:46:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 22:46:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 22:46:25 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 22:46:25 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 22:46:25 -Filter xssFilter was not registered (disabled)
2018-06-27 22:46:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 22:46:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 22:46:25 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 22:46:25 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 22:46:26 -{dataSource-1} inited
2018-06-27 22:46:27 -ProcessEngine default created
2018-06-27 22:46:28 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryController': Unsatisfied dependency expressed through field 'salaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
2018-06-27 22:46:28 -{dataSource-1} closed
2018-06-27 22:46:28 -Stopping service [Tomcat]
2018-06-27 22:46:28 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-27 22:46:28 -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryController': Unsatisfied dependency expressed through field 'salaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:15)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryServiceImpl': Unsatisfied dependency expressed through field 'salaryDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryDao' defined in file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/com/bootdo/activiti/dao/SalaryDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes/mybatis/system/RegexpMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9b81e127.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9b81e127$$FastClassBySpringCGLIB$$92a16ce1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9b81e127.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.system.regexp.domain.RegexpDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 75 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.system.regexp.domain.RegexpDO
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 77 common frames omitted
2018-06-27 22:50:05 -Starting BootdoApplication on localhost with PID 5704 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 22:50:05 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 22:50:05 -The following profiles are active: dev
2018-06-27 22:50:06 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 22:50:06 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 22:50:06 CST 2018]; root of context hierarchy
2018-06-27 22:50:07 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 22:50:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7fd66824] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:50:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$722f96cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:50:08 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:50:08 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:50:08 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 22:50:08 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:50:08 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:50:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:50:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:50:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:50:08 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 22:50:08 -Starting service [Tomcat]
2018-06-27 22:50:08 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 22:50:08 -Initializing Spring embedded WebApplicationContext
2018-06-27 22:50:08 -Root WebApplicationContext: initialization completed in 2659 ms
2018-06-27 22:50:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 22:50:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 22:50:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 22:50:09 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 22:50:09 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 22:50:09 -Filter xssFilter was not registered (disabled)
2018-06-27 22:50:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 22:50:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 22:50:09 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 22:50:09 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 22:50:09 -{dataSource-1} inited
2018-06-27 22:50:10 -ProcessEngine default created
2018-06-27 22:50:11 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.bootdo.system.log.dao.LogDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-06-27 22:50:11 -{dataSource-1} closed
2018-06-27 22:50:11 -Stopping service [Tomcat]
2018-06-27 22:50:11 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-27 22:50:11 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field logMapper in com.bootdo.system.log.service.impl.LogServiceImpl required a bean of type 'com.bootdo.system.log.dao.LogDao' that could not be found.


Action:

Consider defining a bean of type 'com.bootdo.system.log.dao.LogDao' in your configuration.

2018-06-27 22:53:16 -Starting BootdoApplication on localhost with PID 5714 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 22:53:16 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 22:53:16 -The following profiles are active: dev
2018-06-27 22:53:17 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 22:53:17 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 22:53:17 CST 2018]; root of context hierarchy
2018-06-27 22:53:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 22:53:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fa88ca44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:53:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ece1f8eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:53:19 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:53:19 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:53:19 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 22:53:19 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:53:19 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:53:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:53:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:53:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:53:19 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 22:53:19 -Starting service [Tomcat]
2018-06-27 22:53:19 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 22:53:19 -Initializing Spring embedded WebApplicationContext
2018-06-27 22:53:19 -Root WebApplicationContext: initialization completed in 2647 ms
2018-06-27 22:53:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 22:53:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 22:53:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 22:53:20 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 22:53:20 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 22:53:20 -Filter xssFilter was not registered (disabled)
2018-06-27 22:53:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 22:53:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 22:53:20 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 22:53:20 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 22:53:20 -{dataSource-1} inited
2018-06-27 22:53:22 -ProcessEngine default created
2018-06-27 22:53:23 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.bootdo.system.log.dao.LogDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-06-27 22:53:23 -{dataSource-1} closed
2018-06-27 22:53:23 -Stopping service [Tomcat]
2018-06-27 22:53:23 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-27 22:53:23 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field logMapper in com.bootdo.system.log.service.impl.LogServiceImpl required a bean of type 'com.bootdo.system.log.dao.LogDao' that could not be found.


Action:

Consider defining a bean of type 'com.bootdo.system.log.dao.LogDao' in your configuration.

2018-06-27 22:57:39 -Starting BootdoApplication on localhost with PID 5726 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 22:57:39 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 22:57:39 -The following profiles are active: dev
2018-06-27 22:57:39 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 22:57:39 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 22:57:39 CST 2018]; root of context hierarchy
2018-06-27 22:57:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 22:57:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9039097d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:57:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$82923824] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:57:41 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:57:41 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:57:41 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 22:57:41 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:57:41 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:57:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:57:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:57:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 22:57:42 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 22:57:42 -Starting service [Tomcat]
2018-06-27 22:57:42 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 22:57:42 -Initializing Spring embedded WebApplicationContext
2018-06-27 22:57:42 -Root WebApplicationContext: initialization completed in 2637 ms
2018-06-27 22:57:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 22:57:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 22:57:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 22:57:42 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 22:57:42 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 22:57:42 -Filter xssFilter was not registered (disabled)
2018-06-27 22:57:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 22:57:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 22:57:42 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 22:57:42 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 22:57:43 -{dataSource-1} inited
2018-06-27 22:57:44 -ProcessEngine default created
2018-06-27 22:57:45 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logdao'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.bootdo.system.log.dao.LogDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-06-27 22:57:45 -{dataSource-1} closed
2018-06-27 22:57:45 -Stopping service [Tomcat]
2018-06-27 22:57:45 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-27 22:57:45 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field logdao in com.bootdo.system.log.service.impl.LogServiceImpl required a bean of type 'com.bootdo.system.log.dao.LogDao' that could not be found.


Action:

Consider defining a bean of type 'com.bootdo.system.log.dao.LogDao' in your configuration.

2018-06-27 23:02:59 -Starting BootdoApplication on localhost with PID 5738 (/Users/chenlin/Documents/workspace/bootdo/bootdo/target/classes started by chenlin in /Users/chenlin/Documents/workspace/bootdo)
2018-06-27 23:02:59 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2018-06-27 23:02:59 -The following profiles are active: dev
2018-06-27 23:02:59 -HV000001: Hibernate Validator 5.3.6.Final
2018-06-27 23:02:59 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6995bf68: startup date [Wed Jun 27 23:02:59 CST 2018]; root of context hierarchy
2018-06-27 23:03:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-06-27 23:03:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$15db6c03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 23:03:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8349aaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 23:03:01 -Bean 'userRealm' of type [com.bootdo.system.user.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 23:03:01 -Bean 'redisManager' of type [com.bootdo.common.redis.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 23:03:01 -获取名称为: com.bootdo.system.user.shiro.UserRealm.authorizationCache 的RedisCache实例
2018-06-27 23:03:01 -Bean 'redisSessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 23:03:01 -Bean 'sessionDAO' of type [com.bootdo.common.redis.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 23:03:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 23:03:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 23:03:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-27 23:03:02 -Tomcat initialized with port(s): 8099 (http)
2018-06-27 23:03:02 -Starting service [Tomcat]
2018-06-27 23:03:02 -Starting Servlet Engine: Apache Tomcat/8.5.23
2018-06-27 23:03:02 -Initializing Spring embedded WebApplicationContext
2018-06-27 23:03:02 -Root WebApplicationContext: initialization completed in 2702 ms
2018-06-27 23:03:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-06-27 23:03:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-06-27 23:03:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-06-27 23:03:03 -Mapping filter: 'requestContextFilter' to: [/*]
2018-06-27 23:03:03 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-06-27 23:03:03 -Filter xssFilter was not registered (disabled)
2018-06-27 23:03:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-06-27 23:03:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2018-06-27 23:03:03 -Mapping servlet: 'statViewServlet' to [/druid/*]
2018-06-27 23:03:03 -Mapping servlet: 'dispatcherServlet' to [/]
2018-06-27 23:03:03 -{dataSource-1} inited
2018-06-27 23:03:04 -ProcessEngine default created
2018-06-27 23:03:05 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logdao'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.bootdo.system.log.dao.LogDao' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2018-06-27 23:03:05 -{dataSource-1} closed
2018-06-27 23:03:05 -Stopping service [Tomcat]
2018-06-27 23:03:05 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-06-27 23:03:05 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field logdao in com.bootdo.system.log.service.impl.LogServiceImpl required a bean of type 'com.bootdo.system.log.dao.LogDao' that could not be found.


Action:

Consider defining a bean of type 'com.bootdo.system.log.dao.LogDao' in your configuration.

